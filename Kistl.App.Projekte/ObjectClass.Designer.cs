//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1378
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kistl.App.Base
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Collections;
    using System.Xml;
    using System.Xml.Serialization;
    using Kistl.API;
    
    
    [Table(Name="ObjectClasses")]
    public sealed class ObjectClass : BaseDataObject
    {
        
        private int _ID = Helper.INVALIDID;
        
        private string _ClassName;
        
        private string _Namespace;
        
        private string _TableName;
        
        private string _ServerObject;
        
        private string _ClientObject;
        
        private string _DataObject;
        
        private EntitySet<Kistl.App.Base.ObjectProperty> _Properties = new EntitySet<Kistl.App.Base.ObjectProperty>();
        
        [Column(IsDbGenerated=true, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never, Storage="_ID")]
        public override int ID
        {
            get
            {
                return _ID;
            }
            set
            {
                _ID = value;
            }
        }
        
        [Column(UpdateCheck=UpdateCheck.Never, Storage="_ClassName")]
        public string ClassName
        {
            get
            {
                return _ClassName;
            }
            set
            {
                _ClassName = value;
            }
        }
        
        [Column(UpdateCheck=UpdateCheck.Never, Storage="_Namespace")]
        public string Namespace
        {
            get
            {
                return _Namespace;
            }
            set
            {
                _Namespace = value;
            }
        }
        
        [Column(UpdateCheck=UpdateCheck.Never, Storage="_TableName")]
        public string TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                _TableName = value;
            }
        }
        
        [Column(UpdateCheck=UpdateCheck.Never, Storage="_ServerObject")]
        public string ServerObject
        {
            get
            {
                return _ServerObject;
            }
            set
            {
                _ServerObject = value;
            }
        }
        
        [Column(UpdateCheck=UpdateCheck.Never, Storage="_ClientObject")]
        public string ClientObject
        {
            get
            {
                return _ClientObject;
            }
            set
            {
                _ClientObject = value;
            }
        }
        
        [Column(UpdateCheck=UpdateCheck.Never, Storage="_DataObject")]
        public string DataObject
        {
            get
            {
                return _DataObject;
            }
            set
            {
                _DataObject = value;
            }
        }
        
        [Association(Storage="_Properties", OtherKey="fk_ObjectClass")]
        [ServerObject(FullName="Kistl.App.Base.ObjectPropertyServer, Kistl.App.Projekte")]
        [ClientObject(FullName="Kistl.App.Base.ObjectPropertyClient, Kistl.App.Projekte")]
        [XmlIgnore()]
        public EntitySet<Kistl.App.Base.ObjectProperty> Properties
        {
            get
            {
                return _Properties;
            }
            set
            {
                _Properties.Assign(value);
            }
        }

        public event ServerObjectHandler<ObjectClass> OnPreSave = null;
        public event ServerObjectHandler<ObjectClass> OnPostSave = null;
        public event ToStringHandler<ObjectClass> OnToString;
        
        public override string ToString()
        {
            if (OnToString != null)
            {
                ToStringEventArgs e = new ToStringEventArgs();
                OnToString(this, e);
                return e.Result;
            }
            return base.ToString();
        }

        public override void NotifyPreSave(KistlDataContext ctx)
        {
            if (OnPreSave != null) OnPreSave(ctx, this);
        }

        public override void NotifyPostSave(KistlDataContext ctx)
        {
            if (OnPostSave != null) OnPostSave(ctx, this);
        }

    }
    
    public sealed class ObjectClassServer : ServerObject<ObjectClass>
    {
    }
    
    public sealed class ObjectClassClient : ClientObject<ObjectClass>
    {
        
        // Autogeneriert, um die gebundenen Listen zu bekommen
        public System.Collections.IEnumerable GetArrayOfPropertiesFromXML(string xml)
        {
            return xml.FromXmlString<List<Kistl.App.Base.ObjectProperty>>();
        }
    }
}
