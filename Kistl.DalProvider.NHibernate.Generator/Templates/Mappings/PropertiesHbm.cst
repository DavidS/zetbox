<%@ CodeTemplate Language="C#" 
    Name="Mappings.PropertiesHbm"
    ClassName="Kistl.DalProvider.NHibernate.Generator.Templates.Mappings.PropertiesHbm" 
    Inherits="Kistl.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Diagnostics" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.App.Extensions" %>
<%@ Import Namespace="Kistl.Generator" %>
<%@ Import Namespace="Kistl.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="prefix" Type="string" %>
<%@ Parameter Name="properties" Type="IEnumerable<Property>" %>
<%@ Parameter Name="needsConcurrency" Type="bool" %>
<%

    /*
     * TODO: Actually, all this should die and become a bunch of polymorphic calls.
     * See also Kistl.DalProvider.Ef.Generator.Templates.EfModel.ModelCsdlEntityTypeFields
     */

    foreach(var p in properties.OrderBy(p => p.Name))
    {
        // TODO: implement IsNullable everywhere
        if (p is ObjectReferenceProperty)
        {
            var prop = p as ObjectReferenceProperty;
            ApplyObjectReferenceProperty(prefix, prop);
        }
        else if (p is ValueTypeProperty)
        {
            var prop = (ValueTypeProperty)p;
            ApplyValueTypeProperty(prefix, prop);
        }
        else if (p is CompoundObjectProperty)
        {
            var prop = (CompoundObjectProperty)p;
            ApplyCompoundObjectProperty(prefix, prop);
        }
    }
%>