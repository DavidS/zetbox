<%@ CodeTemplate Language="C#" 
    Name="ObjectClasses.ProxyClass"
    ClassName="Kistl.DalProvider.NHibernate.Generator.Templates.ObjectClasses.ProxyClass" 
    Inherits="Kistl.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.App.Extensions" %>
<%@ Import Namespace="Kistl.Generator" %>
<%@ Import Namespace="Kistl.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="className" Type="string" %>
<%@ Parameter Name="typeAndNameList" Type="IEnumerable<KeyValuePair<string, string>>" %>

        public class <%= className %>Proxy
            : IProxyObject
        {
            public virtual int ID { get; set; }

			public virtual Type ZBoxWrapper { get { return typeof(<%= className %><%= ImplementationSuffix %>); } }
			public virtual Type ZBoxProxy { get { return typeof(<%= className %>Proxy); } }

<% foreach(var p in typeAndNameList) { %>
            public virtual <%= p.Key %> <%= p.Value %> { get; set; }

<% } %>
        }

        // make proxy available for the provider
        public override IProxyObject NHibernateProxy { get { return Proxy; } }