<%@ CodeTemplate Language="C#" 
    Name="ObjectClasses.Constructors"
    ClassName="Kistl.DalProvider.NHibernate.Generator.Templates.ObjectClasses.Constructors" 
    Inherits="Kistl.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.App.Extensions" %>
<%@ Import Namespace="Kistl.Generator" %>
<%@ Import Namespace="Kistl.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="compoundObjectProperties" Type="IEnumerable<CompoundObjectProperty>" %>
<%@ Parameter Name="interfaceName" Type="string" %>
<%@ Parameter Name="className" Type="string" %>
<%@ Parameter Name="baseClassName" Type="string" %>
        public <%= className %>()
            : this(null)
        {
        }

        /// <summary>Create a new unattached instance</summary>
        public <%= className %>(Func<IFrozenContext> lazyCtx)
            : this(lazyCtx, new <%= interfaceName %>Proxy())
        {
<% ApplyCompoundObjectPropertyInitialisers(); %>
        }

        /// <summary>Create a instance, wrapping the specified proxy</summary>
        public <%= className %>(Func<IFrozenContext> lazyCtx, <%= interfaceName %>Proxy proxy)
            : base(lazyCtx)
        {
            this.Proxy = proxy;
<% ApplyCompoundObjectPropertyInitialisers(); %>
        }
        /// <summary>the NHibernate proxy of the represented entity</summary>
        private readonly <%= interfaceName %>Proxy Proxy;
