// <autogenerated/>


namespace Kistl.App.Base
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Linq;
    using System.Text;
    using System.Xml;
    using System.Xml.Serialization;

    using Kistl.API;

    using Kistl.DalProvider.Frozen;

    /// <summary>
    /// Metadefinition Object for Enumeration Properties.
    /// </summary>
    [System.Diagnostics.DebuggerDisplay("EnumerationProperty")]
    public class EnumerationProperty__Implementation__Frozen : Kistl.App.Base.ValueTypeProperty__Implementation__Frozen, EnumerationProperty
    {
    
		public EnumerationProperty__Implementation__Frozen()
		{
        }


        /// <summary>
        /// Enumeration der Eigenschaft
        /// </summary>
        // object reference property
   		// Kistl.Server.Generators.Templates.Implementation.ObjectClasses.NotifyingValueProperty
        public virtual Kistl.App.Base.Enumeration Enumeration
        {
            get
            {
                return _Enumeration;
            }
            set
            {
                if (((IPersistenceObject)this).IsReadonly) throw new ReadOnlyObjectException();
                if (_Enumeration != value)
                {
					var __oldValue = _Enumeration;
                    NotifyPropertyChanging("Enumeration", __oldValue, value);
                    _Enumeration = value;
                    NotifyPropertyChanged("Enumeration", __oldValue, value);
                }
            }
        }
        private Kistl.App.Base.Enumeration _Enumeration;

        /// <summary>
        /// Returns the resulting Type of this Property Meta Object.
        /// </summary>

		public override System.Type GetPropertyType() 
        {
            var e = new MethodReturnEventArgs<System.Type>();
            if (OnGetPropertyType_EnumerationProperty != null)
            {
                OnGetPropertyType_EnumerationProperty(this, e);
            }
            else
            {
                e.Result = base.GetPropertyType();
            }
            return e.Result;
        }
		public event GetPropertyType_Handler<EnumerationProperty> OnGetPropertyType_EnumerationProperty;



        /// <summary>
        /// Returns the String representation of this Property Meta Object.
        /// </summary>

		public override string GetPropertyTypeString() 
        {
            var e = new MethodReturnEventArgs<string>();
            if (OnGetPropertyTypeString_EnumerationProperty != null)
            {
                OnGetPropertyTypeString_EnumerationProperty(this, e);
            }
            else
            {
                e.Result = base.GetPropertyTypeString();
            }
            return e.Result;
        }
		public event GetPropertyTypeString_Handler<EnumerationProperty> OnGetPropertyTypeString_EnumerationProperty;



		public override InterfaceType GetInterfaceType()
		{
			return new InterfaceType(typeof(EnumerationProperty));
		}

        // tail template
   		// Kistl.Server.Generators.Templates.Implementation.ObjectClasses.Tail

        [System.Diagnostics.DebuggerHidden()]
        public override string ToString()
        {
            MethodReturnEventArgs<string> e = new MethodReturnEventArgs<string>();
            e.Result = base.ToString();
            if (OnToString_EnumerationProperty != null)
            {
                OnToString_EnumerationProperty(this, e);
            }
            return e.Result;
        }
        public event ToStringHandler<EnumerationProperty> OnToString_EnumerationProperty;

        public override void NotifyPreSave()
        {
            base.NotifyPreSave();
            if (OnPreSave_EnumerationProperty != null) OnPreSave_EnumerationProperty(this);
        }
        public event ObjectEventHandler<EnumerationProperty> OnPreSave_EnumerationProperty;

        public override void NotifyPostSave()
        {
            base.NotifyPostSave();
            if (OnPostSave_EnumerationProperty != null) OnPostSave_EnumerationProperty(this);
        }
        public event ObjectEventHandler<EnumerationProperty> OnPostSave_EnumerationProperty;


		protected override string GetPropertyError(string propertyName) 
		{
			switch(propertyName)
			{
				case "Enumeration":
				{
					var errors = FrozenContext.Single.Find<Kistl.App.Base.Property>(88).Constraints
						.Where(c => !c.IsValid(this, this.Enumeration))
						.Select(c => c.GetErrorText(this, this.Enumeration))
						.ToArray();
					
					return String.Join("; ", errors);
				}
				default:
					return base.GetPropertyError(propertyName);
			}
		}
        internal EnumerationProperty__Implementation__Frozen(int id)
            : base(id)
        { }


		internal new static Dictionary<int, EnumerationProperty__Implementation__Frozen> DataStore = new Dictionary<int, EnumerationProperty__Implementation__Frozen>(9);
		internal new static void CreateInstances()
		{
			Kistl.App.Base.Property__Implementation__Frozen.DataStore[174] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[174] = 
			DataStore[174] = new EnumerationProperty__Implementation__Frozen(174);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[176] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[176] = 
			DataStore[176] = new EnumerationProperty__Implementation__Frozen(176);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[177] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[177] = 
			DataStore[177] = new EnumerationProperty__Implementation__Frozen(177);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[178] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[178] = 
			DataStore[178] = new EnumerationProperty__Implementation__Frozen(178);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[179] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[179] = 
			DataStore[179] = new EnumerationProperty__Implementation__Frozen(179);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[180] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[180] = 
			DataStore[180] = new EnumerationProperty__Implementation__Frozen(180);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[181] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[181] = 
			DataStore[181] = new EnumerationProperty__Implementation__Frozen(181);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[183] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[183] = 
			DataStore[183] = new EnumerationProperty__Implementation__Frozen(183);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[186] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[186] = 
			DataStore[186] = new EnumerationProperty__Implementation__Frozen(186);

		}

		internal new static void FillDataStore() {
			DataStore[174].AltText = @"Specifies how many instances may occur on this end of the relation.";
			DataStore[174].CategoryTags = null;
			DataStore[174].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(1) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[165],
});
			DataStore[174].Description = @"Specifies how many instances may occur on this end of the relation.";
			DataStore[174].ExportGuid = new Guid("cdbcada8-4deb-4c4f-a7a4-24716b0a0ccd");
			DataStore[174].IsIndexed = false;
			DataStore[174].IsList = false;
			DataStore[174].IsNullable = false;
			DataStore[174].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[2];
			DataStore[174].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[3];
			DataStore[174].PropertyName = @"Multiplicity";
			DataStore[174].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[36];
			DataStore[174].Enumeration = Kistl.App.Base.Enumeration__Implementation__Frozen.DataStore[4];
			DataStore[174].Seal();
			DataStore[176].AltText = @"Storagetype for 1:1 Relations";
			DataStore[176].CategoryTags = null;
			DataStore[176].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(0) {
});
			DataStore[176].Description = @"Storagetype for 1:1 Relations. Must be null for non 1:1 Relations.";
			DataStore[176].ExportGuid = new Guid("ba4f10fd-f7cf-4237-93a6-734e7e5c6b8a");
			DataStore[176].IsIndexed = false;
			DataStore[176].IsList = false;
			DataStore[176].IsNullable = true;
			DataStore[176].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[2];
			DataStore[176].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[63];
			DataStore[176].PropertyName = @"Storage";
			DataStore[176].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[38];
			DataStore[176].Enumeration = Kistl.App.Base.Enumeration__Implementation__Frozen.DataStore[64];
			DataStore[176].Seal();
			DataStore[177].AltText = null;
			DataStore[177].CategoryTags = @"Summary";
			DataStore[177].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(1) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[164],
});
			DataStore[177].Description = @"The visual type of this View";
			DataStore[177].ExportGuid = new Guid("af9c1a03-ce46-4719-96c0-c38287d26ac0");
			DataStore[177].IsIndexed = false;
			DataStore[177].IsList = false;
			DataStore[177].IsNullable = false;
			DataStore[177].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[5];
			DataStore[177].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[18];
			DataStore[177].PropertyName = @"VisualType";
			DataStore[177].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[35];
			DataStore[177].Enumeration = Kistl.App.Base.Enumeration__Implementation__Frozen.DataStore[19];
			DataStore[177].Seal();
			DataStore[178].AltText = @"Which visual is represented here";
			DataStore[178].CategoryTags = null;
			DataStore[178].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(1) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[166],
});
			DataStore[178].Description = @"Which visual is represented here";
			DataStore[178].ExportGuid = new Guid("bdeb28ac-665e-4bb6-8f7b-0ae983d77d56");
			DataStore[178].IsIndexed = false;
			DataStore[178].IsList = false;
			DataStore[178].IsNullable = false;
			DataStore[178].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[5];
			DataStore[178].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[20];
			DataStore[178].PropertyName = @"ControlType";
			DataStore[178].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[35];
			DataStore[178].Enumeration = Kistl.App.Base.Enumeration__Implementation__Frozen.DataStore[19];
			DataStore[178].Seal();
			DataStore[179].AltText = null;
			DataStore[179].CategoryTags = @"Summary,Main";
			DataStore[179].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(1) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[168],
});
			DataStore[179].Description = @"The default visual type used for this PresentableModel";
			DataStore[179].ExportGuid = new Guid("2ab3364a-561c-40f3-a83a-731ce0f1e2de");
			DataStore[179].IsIndexed = false;
			DataStore[179].IsList = false;
			DataStore[179].IsNullable = false;
			DataStore[179].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[5];
			DataStore[179].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[8];
			DataStore[179].PropertyName = @"DefaultVisualType";
			DataStore[179].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[35];
			DataStore[179].Enumeration = Kistl.App.Base.Enumeration__Implementation__Frozen.DataStore[19];
			DataStore[179].Seal();
			DataStore[180].AltText = @"The Toolkit used by this Renderer";
			DataStore[180].CategoryTags = null;
			DataStore[180].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(1) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[158],
});
			DataStore[180].Description = @"The Toolkit used by this Renderer";
			DataStore[180].ExportGuid = new Guid("83ab9087-52a5-400d-9e41-bd46fb5e7957");
			DataStore[180].IsIndexed = false;
			DataStore[180].IsList = false;
			DataStore[180].IsNullable = false;
			DataStore[180].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[5];
			DataStore[180].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[45];
			DataStore[180].PropertyName = @"Platform";
			DataStore[180].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[34];
			DataStore[180].Enumeration = Kistl.App.Base.Enumeration__Implementation__Frozen.DataStore[53];
			DataStore[180].Seal();
			DataStore[181].AltText = null;
			DataStore[181].CategoryTags = @"Summary";
			DataStore[181].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(1) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[159],
});
			DataStore[181].Description = @"Which toolkit provides this View";
			DataStore[181].ExportGuid = new Guid("2a798728-d79d-471f-be51-1f488beb8dc1");
			DataStore[181].IsIndexed = false;
			DataStore[181].IsList = false;
			DataStore[181].IsNullable = false;
			DataStore[181].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[5];
			DataStore[181].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[18];
			DataStore[181].PropertyName = @"Toolkit";
			DataStore[181].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[34];
			DataStore[181].Enumeration = Kistl.App.Base.Enumeration__Implementation__Frozen.DataStore[53];
			DataStore[181].Seal();
			DataStore[183].AltText = @"Test Enumeration Property";
			DataStore[183].CategoryTags = null;
			DataStore[183].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(1) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[157],
});
			DataStore[183].Description = @"Test Enumeration Property";
			DataStore[183].ExportGuid = new Guid("89470dda-4ac6-4bb4-9221-d16f80f8d95a");
			DataStore[183].IsIndexed = false;
			DataStore[183].IsList = false;
			DataStore[183].IsNullable = false;
			DataStore[183].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[4];
			DataStore[183].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[51];
			DataStore[183].PropertyName = @"TestEnumProp";
			DataStore[183].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[31];
			DataStore[183].Enumeration = Kistl.App.Base.Enumeration__Implementation__Frozen.DataStore[14];
			DataStore[183].Seal();
			DataStore[186].AltText = @"Test Enum Property";
			DataStore[186].CategoryTags = null;
			DataStore[186].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(1) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[161],
});
			DataStore[186].Description = @"Test Enum Property";
			DataStore[186].ExportGuid = new Guid("657b719f-dcda-4308-9587-4e2c10e7b60f");
			DataStore[186].IsIndexed = false;
			DataStore[186].IsList = false;
			DataStore[186].IsNullable = false;
			DataStore[186].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[4];
			DataStore[186].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[54];
			DataStore[186].PropertyName = @"TestEnumProp";
			DataStore[186].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[31];
			DataStore[186].Enumeration = Kistl.App.Base.Enumeration__Implementation__Frozen.DataStore[14];
			DataStore[186].Seal();
	
		}
#region Serializer

        public override void ToStream(System.IO.BinaryWriter binStream)
        {
            throw new NotImplementedException();
        }
        public override void FromStream(System.IO.BinaryReader binStream)
        {
            throw new NotImplementedException();
        }
        public override void ToStream(System.Xml.XmlWriter xml)
        {
            throw new NotImplementedException();
        }
        public override void FromStream(System.Xml.XmlReader xml)
        {
            throw new NotImplementedException();
        }
        public override void Export(System.Xml.XmlWriter xml, string[] modules)
        {
            throw new NotImplementedException();
        }
        public override void MergeImport(System.Xml.XmlReader xml)
        {
            throw new NotImplementedException();
        }

#endregion

    }


}