// <autogenerated/>


namespace Kistl.App.Base
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Linq;
    using System.Text;
    using System.Xml;
    using System.Xml.Serialization;

    using Kistl.API;

    using Kistl.DalProvider.Frozen;

    /// <summary>
    /// Metadefinition Object for Int Properties.
    /// </summary>
    [System.Diagnostics.DebuggerDisplay("IntProperty")]
    public class IntProperty__Implementation__Frozen : Kistl.App.Base.ValueTypeProperty__Implementation__Frozen, IntProperty
    {
    
		public IntProperty__Implementation__Frozen()
		{
        }


        /// <summary>
        /// Returns the resulting Type of this Property Meta Object.
        /// </summary>

		public override System.Type GetPropertyType() 
        {
            var e = new MethodReturnEventArgs<System.Type>();
            if (OnGetPropertyType_IntProperty != null)
            {
                OnGetPropertyType_IntProperty(this, e);
            }
            else
            {
                e.Result = base.GetPropertyType();
            }
            return e.Result;
        }
		public event GetPropertyType_Handler<IntProperty> OnGetPropertyType_IntProperty;



        /// <summary>
        /// Returns the String representation of this Property Meta Object.
        /// </summary>

		public override string GetPropertyTypeString() 
        {
            var e = new MethodReturnEventArgs<string>();
            if (OnGetPropertyTypeString_IntProperty != null)
            {
                OnGetPropertyTypeString_IntProperty(this, e);
            }
            else
            {
                e.Result = base.GetPropertyTypeString();
            }
            return e.Result;
        }
		public event GetPropertyTypeString_Handler<IntProperty> OnGetPropertyTypeString_IntProperty;



		public override InterfaceType GetInterfaceType()
		{
			return new InterfaceType(typeof(IntProperty));
		}

        // tail template
   		// Kistl.Server.Generators.Templates.Implementation.ObjectClasses.Tail

        [System.Diagnostics.DebuggerHidden()]
        public override string ToString()
        {
            MethodReturnEventArgs<string> e = new MethodReturnEventArgs<string>();
            e.Result = base.ToString();
            if (OnToString_IntProperty != null)
            {
                OnToString_IntProperty(this, e);
            }
            return e.Result;
        }
        public event ToStringHandler<IntProperty> OnToString_IntProperty;

        public override void NotifyPreSave()
        {
            base.NotifyPreSave();
            if (OnPreSave_IntProperty != null) OnPreSave_IntProperty(this);
        }
        public event ObjectEventHandler<IntProperty> OnPreSave_IntProperty;

        public override void NotifyPostSave()
        {
            base.NotifyPostSave();
            if (OnPostSave_IntProperty != null) OnPostSave_IntProperty(this);
        }
        public event ObjectEventHandler<IntProperty> OnPostSave_IntProperty;


        internal IntProperty__Implementation__Frozen(int id)
            : base(id)
        { }


		internal new static Dictionary<int, IntProperty__Implementation__Frozen> DataStore = new Dictionary<int, IntProperty__Implementation__Frozen>(9);
		internal new static void CreateInstances()
		{
			Kistl.App.Base.Property__Implementation__Frozen.DataStore[157] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[157] = 
			DataStore[157] = new IntProperty__Implementation__Frozen(157);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[158] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[158] = 
			DataStore[158] = new IntProperty__Implementation__Frozen(158);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[165] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[165] = 
			DataStore[165] = new IntProperty__Implementation__Frozen(165);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[166] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[166] = 
			DataStore[166] = new IntProperty__Implementation__Frozen(166);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[169] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[169] = 
			DataStore[169] = new IntProperty__Implementation__Frozen(169);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[170] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[170] = 
			DataStore[170] = new IntProperty__Implementation__Frozen(170);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[171] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[171] = 
			DataStore[171] = new IntProperty__Implementation__Frozen(171);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[172] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[172] = 
			DataStore[172] = new IntProperty__Implementation__Frozen(172);

			Kistl.App.Base.Property__Implementation__Frozen.DataStore[173] = 
			Kistl.App.Base.ValueTypeProperty__Implementation__Frozen.DataStore[173] = 
			DataStore[173] = new IntProperty__Implementation__Frozen(173);

		}

		internal new static void FillDataStore() {
			DataStore[157].AltText = @"Which RelationEndRole this End has";
			DataStore[157].CategoryTags = null;
			DataStore[157].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(2) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[92],
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[115],
});
			DataStore[157].Description = @"Which RelationEndRole this End has";
			DataStore[157].ExportGuid = new Guid("377a7a10-b475-4259-8f35-a90d956f9331");
			DataStore[157].IsIndexed = false;
			DataStore[157].IsList = false;
			DataStore[157].IsNullable = false;
			DataStore[157].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[2];
			DataStore[157].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[3];
			DataStore[157].PropertyName = @"Role";
			DataStore[157].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[23];
			DataStore[157].Seal();
			DataStore[158].AltText = null;
			DataStore[158].CategoryTags = @"Summary";
			DataStore[158].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(0) {
});
			DataStore[158].Description = @"Version number of this schema";
			DataStore[158].ExportGuid = new Guid("193c24c4-5a42-418e-8ed8-6e1689beca50");
			DataStore[158].IsIndexed = false;
			DataStore[158].IsList = false;
			DataStore[158].IsNullable = false;
			DataStore[158].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[2];
			DataStore[158].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[38];
			DataStore[158].PropertyName = @"Version";
			DataStore[158].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[23];
			DataStore[158].Seal();
			DataStore[165].AltText = @"The CLR value of this entry";
			DataStore[165].CategoryTags = null;
			DataStore[165].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(1) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[117],
});
			DataStore[165].Description = @"The CLR value of this entry";
			DataStore[165].ExportGuid = new Guid("2fea1d2e-d5ed-457f-9828-4df8c3d3d3aa");
			DataStore[165].IsIndexed = false;
			DataStore[165].IsList = false;
			DataStore[165].IsNullable = false;
			DataStore[165].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[2];
			DataStore[165].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[21];
			DataStore[165].PropertyName = @"Value";
			DataStore[165].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[23];
			DataStore[165].Seal();
			DataStore[166].AltText = @"The biggest value accepted by this constraint";
			DataStore[166].CategoryTags = null;
			DataStore[166].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(1) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[118],
});
			DataStore[166].Description = @"The biggest value accepted by this constraint";
			DataStore[166].ExportGuid = new Guid("dff43695-5b93-4378-a01d-94a82d29dcef");
			DataStore[166].IsIndexed = false;
			DataStore[166].IsList = false;
			DataStore[166].IsNullable = false;
			DataStore[166].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[2];
			DataStore[166].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[10];
			DataStore[166].PropertyName = @"Max";
			DataStore[166].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[23];
			DataStore[166].Seal();
			DataStore[169].AltText = null;
			DataStore[169].CategoryTags = @"DataModel";
			DataStore[169].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(2) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[106],
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[107],
});
			DataStore[169].Description = @"";
			DataStore[169].ExportGuid = new Guid("3588888e-b280-4e8d-8a7b-53f452b81bf0");
			DataStore[169].IsIndexed = false;
			DataStore[169].IsList = false;
			DataStore[169].IsNullable = false;
			DataStore[169].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[2];
			DataStore[169].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[32];
			DataStore[169].PropertyName = @"Length";
			DataStore[169].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[23];
			DataStore[169].Seal();
			DataStore[170].AltText = @"test";
			DataStore[170].CategoryTags = null;
			DataStore[170].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(0) {
});
			DataStore[170].Description = @"test";
			DataStore[170].ExportGuid = new Guid("29c0242b-cd1c-42b4-8ca0-be0a209afcbf");
			DataStore[170].IsIndexed = false;
			DataStore[170].IsList = false;
			DataStore[170].IsNullable = true;
			DataStore[170].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[4];
			DataStore[170].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[51];
			DataStore[170].PropertyName = @"MyIntProperty";
			DataStore[170].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[23];
			DataStore[170].Seal();
			DataStore[171].AltText = @"The minimal length of this StringProperty";
			DataStore[171].CategoryTags = null;
			DataStore[171].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(2) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[104],
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[105],
});
			DataStore[171].Description = @"The minimal length of this StringProperty";
			DataStore[171].ExportGuid = new Guid("8d3e24f7-c8c8-4bb3-931e-d0452e7ee5b6");
			DataStore[171].IsIndexed = false;
			DataStore[171].IsList = false;
			DataStore[171].IsNullable = false;
			DataStore[171].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[2];
			DataStore[171].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[9];
			DataStore[171].PropertyName = @"MinLength";
			DataStore[171].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[23];
			DataStore[171].Seal();
			DataStore[172].AltText = @"The maximal length of this StringProperty";
			DataStore[172].CategoryTags = null;
			DataStore[172].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(2) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[110],
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[111],
});
			DataStore[172].Description = @"The maximal length of this StringProperty";
			DataStore[172].ExportGuid = new Guid("17aa679d-72d0-480e-9bd9-b37f4eba1d68");
			DataStore[172].IsIndexed = false;
			DataStore[172].IsList = false;
			DataStore[172].IsNullable = false;
			DataStore[172].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[2];
			DataStore[172].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[9];
			DataStore[172].PropertyName = @"MaxLength";
			DataStore[172].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[23];
			DataStore[172].Seal();
			DataStore[173].AltText = @"The smallest value accepted by this constraint";
			DataStore[173].CategoryTags = null;
			DataStore[173].Constraints = new System.Collections.ObjectModel.ReadOnlyCollection<Kistl.App.Base.Constraint>(new List<Kistl.App.Base.Constraint>(1) {
Kistl.App.Base.Constraint__Implementation__Frozen.DataStore[108],
});
			DataStore[173].Description = @"The smallest value accepted by this constraint";
			DataStore[173].ExportGuid = new Guid("8afdbf66-c979-4c09-8872-1a44aa1dbf72");
			DataStore[173].IsIndexed = false;
			DataStore[173].IsList = false;
			DataStore[173].IsNullable = false;
			DataStore[173].Module = Kistl.App.Base.Module__Implementation__Frozen.DataStore[2];
			DataStore[173].ObjectClass = Kistl.App.Base.DataType__Implementation__Frozen.DataStore[10];
			DataStore[173].PropertyName = @"Min";
			DataStore[173].ValueModelDescriptor = Kistl.App.GUI.PresentableModelDescriptor__Implementation__Frozen.DataStore[23];
			DataStore[173].Seal();
	
		}
#region Serializer

        public override void ToStream(System.IO.BinaryWriter binStream)
        {
            throw new NotImplementedException();
        }
        public override void FromStream(System.IO.BinaryReader binStream)
        {
            throw new NotImplementedException();
        }
        public override void ToStream(System.Xml.XmlWriter xml)
        {
            throw new NotImplementedException();
        }
        public override void FromStream(System.Xml.XmlReader xml)
        {
            throw new NotImplementedException();
        }
        public override void Export(System.Xml.XmlWriter xml, string[] modules)
        {
            throw new NotImplementedException();
        }
        public override void MergeImport(System.Xml.XmlReader xml)
        {
            throw new NotImplementedException();
        }

#endregion

    }


}