<?xml version="1.0"?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" 
                   default-cascade="save-update" >
    <class name="Zetbox.App.Base.DataTypeNHibernateImpl+DataTypeProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.DataTypeNHibernateImpl+DataTypeProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`DataTypes`"
           abstract="true"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`DataTypes_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <set name="Constraints" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_Constrained`" />
            <one-to-many class="Zetbox.App.Base.InstanceConstraintNHibernateImpl+InstanceConstraintProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="DefaultIcon" column="`fk_DefaultIcon`" class="Zetbox.App.GUI.IconNHibernateImpl+IconProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Description" 
                  column="`Description`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=DataType_implements_Interface_RelationEntry -->
        <!-- relEnd=DataType otherEnd=ImplementedInterfaces -->
        <set name="ImplementsInterfaces" table="`DataType_implements_ImplementedInterfaces`" inverse="true" cascade="all-delete-orphan" batch-size="100" >
            <key column="`fk_DataType`" />
            <one-to-many class="Zetbox.App.Base.DataType_implements_Interface_RelationEntryNHibernateImpl+DataType_implements_Interface_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <set name="Methods" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_ObjectClass`" />
            <one-to-many class="Zetbox.App.Base.MethodNHibernateImpl+MethodProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="Module" column="`fk_Module`" class="Zetbox.App.Base.ModuleNHibernateImpl+ModuleProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="Name" 
                  column="`Name`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="Properties" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_ObjectClass`" />
            <one-to-many class="Zetbox.App.Base.PropertyNHibernateImpl+PropertyProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="RequestedKind" column="`fk_ControlKind`" class="Zetbox.App.GUI.ControlKindNHibernateImpl+ControlKindProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ShowIconInLists" 
                  column="`ShowIconInLists`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ShowIdInLists" 
                  column="`ShowIdInLists`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ShowNameInLists" 
                  column="`ShowNameInLists`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->
        <joined-subclass name="Zetbox.App.Base.CompoundObjectNHibernateImpl+CompoundObjectProxy, Zetbox.Objects.NHibernateImpl"
                         proxy="Zetbox.App.Base.CompoundObjectNHibernateImpl+CompoundObjectProxy, Zetbox.Objects.NHibernateImpl"
                         schema="`base`"
                         table="`CompoundObjects`"
                         dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="DefaultPropertyViewModelDescriptor" column="`fk_DefaultPropViewModelDescriptor`" class="Zetbox.App.GUI.ViewModelDescriptorNHibernateImpl+ViewModelDescriptorProxy, Zetbox.Objects.NHibernateImpl" />


            <!-- define the subclasses -->

        </joined-subclass>
        <joined-subclass name="Zetbox.App.Base.EnumerationNHibernateImpl+EnumerationProxy, Zetbox.Objects.NHibernateImpl"
                         proxy="Zetbox.App.Base.EnumerationNHibernateImpl+EnumerationProxy, Zetbox.Objects.NHibernateImpl"
                         schema="`base`"
                         table="`Enumerations`"
                         dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->
        <!-- ValueTypeProperty isValue -->
        <property name="AreFlags" 
                  column="`AreFlags`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="EnumerationEntries" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_Enumeration`" />
            <one-to-many class="Zetbox.App.Base.EnumerationEntryNHibernateImpl+EnumerationEntryProxy, Zetbox.Objects.NHibernateImpl" />
        </set>


            <!-- define the subclasses -->

        </joined-subclass>
        <joined-subclass name="Zetbox.App.Base.InterfaceNHibernateImpl+InterfaceProxy, Zetbox.Objects.NHibernateImpl"
                         proxy="Zetbox.App.Base.InterfaceNHibernateImpl+InterfaceProxy, Zetbox.Objects.NHibernateImpl"
                         schema="`base`"
                         table="`Interfaces`"
                         dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->

            <!-- define the subclasses -->

        </joined-subclass>
        <joined-subclass name="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl"
                         proxy="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl"
                         schema="`base`"
                         table="`ObjectClasses`"
                         dynamic-update="true">
            
            <!-- base class reference -->
            <key column="`ID`" />

            <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <set name="AccessControlList" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_ObjectClass`" />
            <one-to-many class="Zetbox.App.Base.AccessControlNHibernateImpl+AccessControlProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="BaseObjectClass" column="`fk_BaseObjectClass`" class="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ValueTypeProperty CodeTemplate is calculated and persisted -->
        <!-- ValueTypeProperty isValue -->
        <property name="CodeTemplate" 
                  column="`CodeTemplate`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="DefaultViewModelDescriptor" column="`fk_DefaultViewModelDescriptor`" class="Zetbox.App.GUI.ViewModelDescriptorNHibernateImpl+ViewModelDescriptorProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <set name="FilterConfigurations" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_ObjectClass`" />
            <one-to-many class="Zetbox.App.GUI.ObjectClassFilterConfigurationNHibernateImpl+ObjectClassFilterConfigurationProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="IsAbstract" 
                  column="`IsAbstract`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsFrozenObject" 
                  column="`IsFrozenObject`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="IsSimpleObject" 
                  column="`IsSimpleObject`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <set name="SubClasses" batch-size="100" cascade="none" inverse="true" >
            <key column="`fk_BaseObjectClass`" />
            <one-to-many class="Zetbox.App.Base.ObjectClassNHibernateImpl+ObjectClassProxy, Zetbox.Objects.NHibernateImpl" />
        </set>

        <!-- ValueTypeProperty isValue -->
        <property name="TableName" 
                  column="`TableName`" 
                  optimistic-lock="false"/>

            <!-- define the subclasses -->

        </joined-subclass>

    </class>
</hibernate-mapping>