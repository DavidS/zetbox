<?xml version="1.0"?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" 
                   default-cascade="save-update" >
    <class name="Zetbox.App.Base.TypeRefNHibernateImpl+TypeRefProxy, Zetbox.Objects.NHibernateImpl"
           proxy="Zetbox.App.Base.TypeRefNHibernateImpl+TypeRefProxy, Zetbox.Objects.NHibernateImpl"
           schema="`base`"
           table="`TypeRefs`"
           abstract="false"
           dynamic-update="true"
           optimistic-lock="dirty"
           batch-size="100">

        <id name="ID" column="`ID`" type="Int32" unsaved-value="0">
            <generator class="native">
                <param name="schema">`base`</param>
                <param name="sequence">`TypeRefs_ID_seq`</param>
            </generator>
        </id>

        <!-- define the properties -->
<!-- ObjectReferenceProperty -->
        <many-to-one name="Assembly" column="`fk_Assembly`" class="Zetbox.App.Base.AssemblyNHibernateImpl+AssemblyProxy, Zetbox.Objects.NHibernateImpl" />

<!-- ObjectReferenceProperty -->
        <many-to-one name="ChangedBy" column="`fk_ChangedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ChangedOn" type="Timestamp"
                  column="`ChangedOn`" 
                  optimistic-lock="true"/>
<!-- ObjectReferenceProperty -->
        <many-to-one name="CreatedBy" column="`fk_CreatedBy`" class="Zetbox.App.Base.IdentityNHibernateImpl+IdentityProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="CreatedOn" type="Timestamp"
                  column="`CreatedOn`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="Deleted" 
                  column="`Deleted`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="ExportGuid" 
                  column="`ExportGuid`" 
                  optimistic-lock="false"/>
        <!-- ValueTypeProperty isValue -->
        <property name="FullName" 
                  column="`FullName`" 
                  optimistic-lock="false"/>
<!-- ObjectReferenceProperty -->
        <!-- NMProperty -->
        <!-- rel=TypeRef_hasGenericArguments_TypeRef_RelationEntry -->
        <!-- relEnd=TypeRef otherEnd=GenericArguments -->
        <set name="GenericArguments" table="`TypeRef_hasGenericArguments_GenericArguments`" inverse="true" cascade="all-delete-orphan" batch-size="100" >
            <key column="`fk_TypeRef`" />
            <one-to-many class="Zetbox.App.Base.TypeRef_hasGenericArguments_TypeRef_RelationEntryNHibernateImpl+TypeRef_hasGenericArguments_TypeRef_RelationEntryProxy,Zetbox.Objects.NHibernateImpl" />
        </set>

<!-- ObjectReferenceProperty -->
        <many-to-one name="Parent" column="`fk_Parent`" class="Zetbox.App.Base.TypeRefNHibernateImpl+TypeRefProxy, Zetbox.Objects.NHibernateImpl" />

        <!-- ValueTypeProperty isValue -->
        <property name="ToStringCache" 
                  column="`ToStringCache`" 
                  optimistic-lock="false"/>

        <!-- define the subclasses -->

    </class>
</hibernate-mapping>