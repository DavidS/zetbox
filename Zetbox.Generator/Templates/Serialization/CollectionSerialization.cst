<%@ CodeTemplate Language="C#"
    Name="ObjectClasses.CollectionSerialization"
    ClassName="Zetbox.Generator.Templates.Serialization.CollectionSerialization"
    Inherits="Zetbox.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="Zetbox.API" %>
<%@ Import Namespace="Zetbox.API.Server" %>
<%@ Import Namespace="Zetbox.App.Base" %>
<%@ Import Namespace="Zetbox.Generator" %>
<%@ Import Namespace="Zetbox.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IZetboxContext" %>
<%@ Parameter Name="direction" Type="SerializerDirection" %>
<%@ Parameter Name="streamName" Type="string" %>
<%@ Parameter Name="xmlnamespace" Type="string" %>
<%@ Parameter Name="xmlname" Type="string" %>
<%@ Parameter Name="collectionName" Type="string" %>
<%@ Parameter Name="orderByValue" Type="bool" %>
<%@ Parameter Name="inPlace" Type="bool" %>
<%
    if (ShouldSerialize())
    {
        switch(direction)
        {
            case SerializerDirection.ToStream:
%>
            <%= streamName %>.WriteCollectionEntries(this.<%= collectionName %>);
<%
                break;
            case SerializerDirection.FromStream:
%>
            <%= streamName %>.ReadCollectionEntries(this, this.<%= collectionName %>);
<%
                break;
        case SerializerDirection.Export:
%>
            if (modules.Contains("*") || modules.Contains("<%= xmlnamespace %>")) XmlStreamer.ExportCollectionEntries(this.<%= collectionName %><%= orderByValue ? ".OrderBy(i => i.Value)" : String.Empty %>, <%= streamName %>, "<%= xmlname %>", "<%= xmlnamespace %>");
<%
            break;
            case SerializerDirection.MergeImport:
%>
            case "<%= xmlnamespace %>|<%= xmlname %>":
                XmlStreamer.MergeImportCollectionEntries(this, this.<%= collectionName %>, <%= streamName %>);
                break;
<%
                break;
            default:
                throw new ArgumentOutOfRangeException("direction");
        }
    }
%>