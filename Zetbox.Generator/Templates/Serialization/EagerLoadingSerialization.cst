<%@ CodeTemplate Language="C#" 
    Name="Serialization.EagerLoadingSerialization"
    ClassName="Zetbox.Generator.Templates.Serialization.EagerLoadingSerialization" 
    Inherits="Zetbox.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="Zetbox.API" %>
<%@ Import Namespace="Zetbox.API.Server" %>
<%@ Import Namespace="Zetbox.App.Base" %>
<%@ Import Namespace="Zetbox.Generator" %>
<%@ Import Namespace="Zetbox.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IZetboxContext" %>
<%@ Parameter Name="direction" Type="SerializerDirection" %>
<%@ Parameter Name="streamName" Type="string" %>
<%@ Parameter Name="xmlnamespace" Type="string" %>
<%@ Parameter Name="xmlname" Type="string" %>
<%@ Parameter Name="collectionName" Type="string" %>
<%@ Parameter Name="serializeIds" Type="bool" %>
<%@ Parameter Name="serializeRelationEntries" Type="bool" %>

<%
    switch(direction)
    {
        case SerializerDirection.ToStream:
%>
            <%= streamName %>.Write(eagerLoadLists);
            if (eagerLoadLists && auxObjects != null)
            {
<% if (serializeIds) {                                                          %>
                <%= streamName %>.Write(true);
                <%= streamName %>.Write(<%= collectionName %>.Count);
<% }                                                                            %>
                foreach(var obj in <%= collectionName %>)
                {
                    auxObjects.Add(obj);
<% if (serializeIds) {                                                          %>
                    <%= streamName %>.Write(obj.ID);
<% }                                                                            %>
                }
<% if (serializeRelationEntries) { ApplyRelationEntrySerialization(); }         %>
            }
<% if (serializeIds) {                                                          %>
            else
            {
                <%= streamName %>.Write(false);
            }
<% }                                                                            %>
<%
            break;
        case SerializerDirection.FromStream:
%>
            <%= collectionName %>_was_eagerLoaded = <%= streamName %>.ReadBoolean();
<% if (serializeIds) {                                                          %>
            {
                bool containsList = <%= streamName %>.ReadBoolean();
                if (containsList)
                {
                    int numElements = <%= streamName %>.ReadInt32();
                    <%= collectionName %>Ids = new List<int>(numElements);
                    while (numElements-- > 0) 
                    {
                        int id = <%= streamName %>.ReadInt32();
                        <%= collectionName %>Ids.Add(id);
                    }
                }
            }
<% }                                                                            %>
<%
            break;
        default:
            throw new ArgumentOutOfRangeException("direction");
    }
%>