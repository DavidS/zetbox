<%@ CodeTemplate Language="C#" 
	Name="Properties.ValueCollectionProperty"
	ClassName="Zetbox.Generator.Templates.Properties.ValueCollectionProperty" 
	Inherits="Zetbox.Generator.MemberTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Diagnostics" %>
<%@ Import Namespace="Zetbox.API" %>
<%@ Import Namespace="Zetbox.API.Server" %>
<%@ Import Namespace="Zetbox.App.Base" %>
<%@ Import Namespace="Zetbox.Generator" %>
<%@ Import Namespace="Zetbox.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IZetboxContext" %>
<%@ Parameter Name="serializationList" Type="Zetbox.Generator.Templates.Serialization.SerializationMembersList" %>
<%@ Parameter Name="name" Type="string" %>
<%@ Parameter Name="backingName" Type="string" %>
<%@ Parameter Name="backingCollectionType" Type="string" %>
<%@ Parameter Name="exposedCollectionInterface" Type="string" %>
<%@ Parameter Name="thisInterface" Type="string" %>
<%@ Parameter Name="referencedType" Type="string" %>
<%@ Parameter Name="entryType" Type="string" %>
<%@ Parameter Name="entryTypeImpl" Type="string" %>
<%@ Parameter Name="providerCollectionType" Type="string" %>
<%@ Parameter Name="underlyingCollectionName" Type="string" %>
<%@ Parameter Name="orderByValue" Type="bool" %>
<%@ Parameter Name="moduleNamespace" Type="string" %>
<%

    AddSerialization(serializationList, underlyingCollectionName);
	var eventName = "On" + name + "_PostSetter";
%>
		// <%= this.GetType() %>
		<%= GetModifiers() %> <%= exposedCollectionInterface %><<%= referencedType %>> <%= name %>
		{
			get
			{
				if (<%= backingName %> == null)
				{
				    <%= backingName %> 
				        = new <%= backingCollectionType %><<%= thisInterface %>, <%= referencedType %>, <%= entryType %>, <%= entryTypeImpl %>, <%= providerCollectionType %>>(
							this.Context,
				            this, 
				            () => { this.NotifyPropertyChanged("<%= name %>", null, null); if(<%= eventName %> != null && IsAttached) <%= eventName%>(this); },
				            <%= underlyingCollectionName %>);
				}
				return <%= backingName %>;
			}
		}

		private <%= backingCollectionType %><<%= thisInterface %>, <%= referencedType %>, <%= entryType %>, <%= entryTypeImpl %>, <%= providerCollectionType %>> <%= backingName %>;
		private <%= providerCollectionType %> <%= underlyingCollectionName %> = new <%= providerCollectionType %>();
