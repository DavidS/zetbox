<%@ CodeTemplate Language="C#" 
    Name="Module"
    ClassName="Kistl.Generator.Templates.Module" 
    Inherits="Kistl.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="shortName" Type="string" %>
// <autogenerated/>

namespace Kistl.Objects
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using Autofac;
	using Kistl.API;
<% foreach(string ns in GetAdditionalImports().OrderBy(s => s).Distinct().OrderBy(s => s)) { %>
    using <%= ns %>;
<% } %>

    public class <%= shortName %>Module
        : Autofac.Module
    {
        protected override void Load(ContainerBuilder builder)
        {
            base.Load(builder);

<% ApplyRegistrations(); %>
        }
    }

<% ApplyTypeCheckerTemplate(); %>

    // marker class to provide stable and correct assembly reference
    internal sealed class <%= shortName %>ActionsManager
        : BaseCustomActionsManager, I<%= shortName %>ActionsManager
    {
        public <%= shortName %>ActionsManager(ILifetimeScope container, IDeploymentRestrictor restrictor)
            : base(container, restrictor, "<%= ImplementationSuffix %>")
        {
        }
    }
}
