<%@ CodeTemplate Language="C#" 
    Name="ProjectFile"
    ClassName="Kistl.Generator.Templates.ProjectFile" 
    Inherits="Kistl.Generator.ResourceTemplate" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Parameter Name="ctx" Type="Kistl.API.IKistlContext" %>
<%@ Parameter Name="projectGuid" Type="string" %>
<%@ Parameter Name="fileNames" Type="List<string>" %>
<%@ Parameter Name="schemaProviders" Type="IEnumerable<ISchemaProvider>" %>
<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>9.0.21022</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid><%= projectGuid %></ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace><%= GetAssemblyName() %></RootNamespace>
    <AssemblyName><%= GetAssemblyName() %></AssemblyName>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>Kistl.Objects.snk</AssemblyOriginatorKeyFile>
    <!-- this is referenced by the generator to put the results in their right place -->
    <RelativeOutputPath><%= GetRelativeOutputPath() %></RelativeOutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <NoWarn>1591,0168,0414,0219</NoWarn>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <!-- hardcode output path for external builds; the generator replaces this value from configuration -->
    <OutputPath Condition=" '$(OutputPathOverride)' == '' ">..\bin\Debug\<%= GetRelativeOutputPath() %>.Fallback\</OutputPath>
    <OutputPath Condition=" '$(OutputPathOverride)' != '' ">$(OutputPathOverride)\<%= GetRelativeOutputPath() %>.Generated\</OutputPath>
    <KistlAPIPath Condition=" '$(KistlAPIPathOverride)' == '' ">..\bin\Debug\</KistlAPIPath>
    <KistlAPIPath Condition=" '$(KistlAPIPathOverride)' != '' ">$(KistlAPIPathOverride)</KistlAPIPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <NoWarn>1591,0168,0414,0219</NoWarn>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <!-- hardcode output path for external builds; the generator replaces this value from configuration -->
    <OutputPath Condition=" '$(OutputPathOverride)' == '' ">..\bin\Release\<%= GetRelativeOutputPath() %>.Fallback\</OutputPath>
    <OutputPath Condition=" '$(OutputPathOverride)' != '' ">$(OutputPathOverride)\<%= GetRelativeOutputPath() %>.Generated\</OutputPath>
    <KistlAPIPath Condition=" '$(KistlAPIPathOverride)' == '' ">..\bin\Release\</KistlAPIPath>
    <KistlAPIPath Condition=" '$(KistlAPIPathOverride)' != '' ">$(KistlAPIPathOverride)</KistlAPIPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Linux.Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE;MONO</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <!-- mono is quite more pedantic; ignore superfluous local vars and fields for now -->
    <NoWarn>1591,0168,0414,0219</NoWarn>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <!-- hardcode output path for external builds; the generator replaces this value from configuration -->
    <OutputPath Condition=" '$(OutputPathOverride)' == '' ">..\bin\Debug\<%= GetRelativeOutputPath() %>.Fallback\</OutputPath>
    <OutputPath Condition=" '$(OutputPathOverride)' != '' ">$(OutputPathOverride)\<%= GetRelativeOutputPath() %>.Generated\</OutputPath>
    <KistlAPIPath Condition=" '$(KistlAPIPathOverride)' == '' ">..\bin\Debug\</KistlAPIPath>
    <KistlAPIPath Condition=" '$(KistlAPIPathOverride)' != '' ">$(KistlAPIPathOverride)</KistlAPIPath>
  </PropertyGroup>
  <!-- additional properties have to come in a separate group to receive correct $(OutputPath) -->
  <PropertyGroup>
<% ApplyAdditionalProperties(); %>
  </PropertyGroup>
  <ItemGroup>
    <AdditionalReferencePath Include="$(OutputPath)" />
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Xml" />
    <Reference Include="log4net">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(KistlAPIPath)\Common\Core\log4net.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Kistl.API">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(KistlAPIPath)\Common\Core\Kistl.API.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Autofac">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(KistlAPIPath)\Common\Core\Autofac.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="WindowsBase">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
<% ApplyAdditionalReferences(); %>
  </ItemGroup>
  <ItemGroup>
<% foreach (var name in fileNames) { %>
    <Compile Include="<%= name %>" />
<% } %>
  </ItemGroup>
  <ItemGroup>
    <None Include="Kistl.Objects.snk" />
  </ItemGroup>
<% ApplyAdditionalItemGroups(); %>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  -->
  <Target Name="AfterBuild">
  </Target>
<% ApplyAdditionalPropertyGroups(); %>
</Project>
