<%@ CodeTemplate Language="C#" 
    Name="Registrations"
    ClassName="Zetbox.Generator.Templates.Registrations" 
    Inherits="Zetbox.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Zetbox.API" %>
<%@ Parameter Name="ctx" Type="IZetboxContext" %>
<%@ Parameter Name="shortName" Type="string" %>
            builder
                .Register<<%= shortName %>ImplementationTypeChecker>(
                    c => new <%= shortName %>ImplementationTypeChecker(
                        c.Resolve<Func<IEnumerable<IImplementationTypeChecker>>>()))
                .As<I<%= shortName %>ImplementationTypeChecker>()
                .As<IImplementationTypeChecker>()
                .InstancePerDependency();
                
            builder
                .Register<<%= shortName %>ActionsManager>(
                    c => new <%= shortName %>ActionsManager(
                        c.Resolve<ILifetimeScope>(),
                        c.Resolve<IDeploymentRestrictor>()))
                .As<I<%= shortName %>ActionsManager>()
                .InstancePerLifetimeScope();
