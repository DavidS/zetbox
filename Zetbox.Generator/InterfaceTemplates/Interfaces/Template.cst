<%@ CodeTemplate Language="C#" 
    Name="Interfaces.Template"
    ClassName="Zetbox.Generator.InterfaceTemplates.Interfaces.Template" 
    Inherits="Zetbox.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Zetbox.API" %>
<%@ Import Namespace="Zetbox.API.Server" %>
<%@ Import Namespace="Zetbox.App.Base" %>
<%@ Import Namespace="Zetbox.Generator" %>
<%@ Import Namespace="Zetbox.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IZetboxContext" %>
<%@ Parameter Name="dataType" Type="DataType" %>
// <autogenerated/>

namespace <%= dataType.Module.Namespace %>
{
    using System;
    using System.Collections.Generic;

    using Zetbox.API;

    /// <summary>
    /// <%= UglyXmlEncode(dataType.Description) %>
    /// </summary>
    [Zetbox.API.DefinitionGuid("<%= dataType.ExportGuid %>")]
    public interface <%= dataType.Name %> <%= GetInheritance() %> 
    {
<%
    foreach(Property p in dataType.Properties.OrderBy(p => p.Name))
    {
        if (!IsDeclaredInImplementsInterface(p))
        {
%>

        /// <summary>
        /// <%= UglyXmlEncode(p.Description) %>
        /// </summary>
<%
            ApplyPropertyTemplate(p);
        }
    }

    foreach(var mg in MethodsToGenerate().GroupBy(m => m.Name).OrderBy(mg => mg.Key))
    {
        int index = 0;
        foreach(var m in mg.OrderByDefault())
        {
            if (!IsDeclaredInImplementsInterface(m))
            {
%>

        /// <summary>
        /// <%= UglyXmlEncode(m.Description) %>
        /// </summary>
<%
                ApplyMethodTemplate(m, index++);
            }
        }
    }
%>
    }
}
