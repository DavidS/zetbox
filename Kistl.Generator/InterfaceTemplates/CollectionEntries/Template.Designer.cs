using System;
using System.Linq;
using Kistl.API;
using Kistl.API.Server;
using Kistl.App.Base;
using Kistl.Generator;
using Kistl.Generator.Extensions;


namespace Kistl.Generator.InterfaceTemplates.CollectionEntries
{
    [Arebis.CodeGeneration.TemplateInfo(@"P:\Kistl\Kistl.Generator\InterfaceTemplates\CollectionEntries\Template.cst")]
    public partial class Template : Kistl.Generator.ResourceTemplate
    {
		protected IKistlContext ctx;
		protected Kistl.App.Base.Module module;


        public static void Call(Arebis.CodeGeneration.IGenerationHost _host, IKistlContext ctx, Kistl.App.Base.Module module)
        {
            if (_host == null) { throw new global::System.ArgumentNullException("_host"); }

            _host.CallTemplate("CollectionEntries.Template", ctx, module);
        }

        public Template(Arebis.CodeGeneration.IGenerationHost _host, IKistlContext ctx, Kistl.App.Base.Module module)
            : base(_host)
        {
			this.ctx = ctx;
			this.module = module;

        }

        public override void Generate()
        {
#line 14 "P:\Kistl\Kistl.Generator\InterfaceTemplates\CollectionEntries\Template.cst"
this.WriteObjects("// <autogenerated/>\r\n");
this.WriteObjects("\r\n");
this.WriteObjects("namespace ",  module.Namespace , "\r\n");
this.WriteObjects("{\r\n");
this.WriteObjects("    using Kistl.API;\r\n");
#line 20 "P:\Kistl\Kistl.Generator\InterfaceTemplates\CollectionEntries\Template.cst"
foreach(string ns in GetAdditionalImports().Distinct().OrderBy(s => s))
    {

#line 23 "P:\Kistl\Kistl.Generator\InterfaceTemplates\CollectionEntries\Template.cst"
this.WriteObjects("    using ",  ns , ";\r\n");
#line 25 "P:\Kistl\Kistl.Generator\InterfaceTemplates\CollectionEntries\Template.cst"
}

#line 27 "P:\Kistl\Kistl.Generator\InterfaceTemplates\CollectionEntries\Template.cst"
this.WriteObjects("\r\n");
this.WriteObjects("    /// <summary>\r\n");
this.WriteObjects("    /// ",  UglyXmlEncode(GetDescription()) , "\r\n");
this.WriteObjects("    /// </summary>\r\n");
this.WriteObjects("    public interface ",  GetCeClassName() , " : ",  GetCeInterface() , " \r\n");
this.WriteObjects("    {\r\n");
this.WriteObjects("\r\n");
this.WriteObjects("    }\r\n");
this.WriteObjects("}");

        }

    }
}