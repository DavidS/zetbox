<%@ CodeTemplate Language="C#"
    Name="ObjectClasses.CollectionSerialization"
    ClassName="Kistl.Generator.Templates.Serialization.CollectionSerialization"
    Inherits="Kistl.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.Generator" %>
<%@ Import Namespace="Kistl.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="direction" Type="SerializerDirection" %>
<%@ Parameter Name="streamName" Type="string" %>
<%@ Parameter Name="xmlnamespace" Type="string" %>
<%@ Parameter Name="xmlname" Type="string" %>
<%@ Parameter Name="collectionName" Type="string" %>
<%@ Parameter Name="orderByValue" Type="bool" %>
<%
    if (ShouldSerialize())
    {
        switch(direction)
        {
            case SerializerDirection.ToStream:
%>
            BinarySerializer.ToStreamCollectionEntries(this.<%= collectionName %>, <%= streamName %>);
<%
                break;
            case SerializerDirection.FromStream:
%>
            BinarySerializer.FromStreamCollectionEntries(this.<%= collectionName %>, <%= streamName %>);
<%
                break;
            case SerializerDirection.ToXmlStream:
%>
            XmlStreamer.ToStreamCollectionEntries(this.<%= collectionName %>, <%= streamName %>, "<%= xmlname %>", "<%= xmlnamespace %>");
<%
                break;
            case SerializerDirection.FromXmlStream:
%>
            XmlStreamer.FromStreamCollectionEntries(this.<%= collectionName %>, <%= streamName %>, "<%= xmlname %>", "<%= xmlnamespace %>");
<%
                break;
            case SerializerDirection.MergeImport:
%>
            XmlStreamer.MergeImportCollectionEntries(this.<%= collectionName %>, <%= streamName %>, "<%= xmlname %>", "<%= xmlnamespace %>");
<%
                break;
        case SerializerDirection.Export:
%>
            if (modules.Contains("*") || modules.Contains("<%= xmlnamespace %>")) XmlStreamer.ExportCollectionEntries(this.<%= collectionName %><%= orderByValue ? ".OrderBy(i => i.Value)" : String.Empty %>, <%= streamName %>, "<%= xmlname %>", "<%= xmlnamespace %>");
<%
            break;
            default:
                throw new ArgumentOutOfRangeException("direction");
        }
    }
%>