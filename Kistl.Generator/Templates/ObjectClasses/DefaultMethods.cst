<%@ CodeTemplate Language="C#"
    Name="ObjectClasses.DefaultMethods"
    ClassName="Kistl.Generator.Templates.ObjectClasses.DefaultMethods"
    Inherits="Kistl.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.Generator" %>
<%@ Import Namespace="Kistl.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="dt" Type="DataType" %>
        #region <%= this.GetType() %>

        [System.Diagnostics.DebuggerHidden()]
        [EventBasedMethod("OnToString_<%= dt.Name %>")]
        public override string ToString()
        {
            MethodReturnEventArgs<string> e = new MethodReturnEventArgs<string>();
            e.Result = base.ToString();
            if (OnToString_<%= dt.Name %> != null)
            {
                OnToString_<%= dt.Name %>(this, e);
            }
            return e.Result;
        }
        public static event ToStringHandler<<%= dt.Name %>> OnToString_<%= dt.Name %>;

		[System.Diagnostics.DebuggerHidden()]
        [EventBasedMethod("OnObjectIsValid_<%= dt.Name %>")]
        protected override ObjectIsValidResult ObjectIsValid()
        {
            ObjectIsValidEventArgs e = new ObjectIsValidEventArgs();
			var b = base.ObjectIsValid();
            e.IsValid = b.IsValid;
			e.Errors.AddRange(b.Errors);
            if (OnObjectIsValid_<%= dt.Name %> != null)
            {
                OnObjectIsValid_<%= dt.Name %>(this, e);
            }
            return new ObjectIsValidResult(e.IsValid, e.Errors);
        }
        public static event ObjectIsValidHandler<<%= dt.Name %>> OnObjectIsValid_<%= dt.Name %>;

        [EventBasedMethod("OnNotifyPreSave_<%= dt.Name %>")]
        public override void NotifyPreSave()
        {
<% ApplyPrePreSaveTemplate(); %>
            base.NotifyPreSave();
            if (OnNotifyPreSave_<%= dt.Name %> != null) OnNotifyPreSave_<%= dt.Name %>(this);
<% ApplyPostPreSaveTemplate(); %>
        }
        public static event ObjectEventHandler<<%= dt.Name %>> OnNotifyPreSave_<%= dt.Name %>;

        [EventBasedMethod("OnNotifyPostSave_<%= dt.Name %>")]
        public override void NotifyPostSave()
        {
<% ApplyPrePostSaveTemplate(); %>
            base.NotifyPostSave();
            if (OnNotifyPostSave_<%= dt.Name %> != null) OnNotifyPostSave_<%= dt.Name %>(this);
<% ApplyPostPostSaveTemplate(); %>
        }
        public static event ObjectEventHandler<<%= dt.Name %>> OnNotifyPostSave_<%= dt.Name %>;

        [EventBasedMethod("OnNotifyCreated_<%= dt.Name %>")]
        public override void NotifyCreated()
        {
<% ApplyPreCreatedTemplate(); %>
            base.NotifyCreated();
            if (OnNotifyCreated_<%= dt.Name %> != null) OnNotifyCreated_<%= dt.Name %>(this);
<% ApplyPostCreatedTemplate(); %>
        }
        public static event ObjectEventHandler<<%= dt.Name %>> OnNotifyCreated_<%= dt.Name %>;

        [EventBasedMethod("OnNotifyDeleting_<%= dt.Name %>")]
        public override void NotifyDeleting()
        {
<% ApplyPreDeletingTemplate(); %>
            base.NotifyDeleting();
            if (OnNotifyDeleting_<%= dt.Name %> != null) OnNotifyDeleting_<%= dt.Name %>(this);
<% ApplyPostDeletingTemplate(); %>
        }
        public static event ObjectEventHandler<<%= dt.Name %>> OnNotifyDeleting_<%= dt.Name %>;

        #endregion // <%= this.GetType() %>
