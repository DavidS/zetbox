<%@ CodeTemplate Language="C#" 
    Name="ObjectClasses.ReloadOneReference"
    ClassName="Kistl.Generator.Templates.ObjectClasses.ReloadOneReference" 
    Inherits="Kistl.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.App.Extensions" %>
<%@ Import Namespace="Kistl.Generator" %>
<%@ Import Namespace="Kistl.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="referencedInterface" Type="string" %>
<%@ Parameter Name="referencedImplementation" Type="string" %>
<%@ Parameter Name="name" Type="string" %>
<%@ Parameter Name="implName" Type="string" %>
<%@ Parameter Name="fkBackingName" Type="string" %>
<%@ Parameter Name="fkGuidBackingName" Type="string" %>
<%@ Parameter Name="isExportable" Type="bool" %>

<% if (isExportable) { %>
            if (<%= fkGuidBackingName %>.HasValue)
                <%= implName %> = (<%= referencedImplementation %>)Context.FindPersistenceObject<<%= referencedInterface %>>(<%= fkGuidBackingName %>.Value);
            else
<% } %>
            if (<%= fkBackingName %>.HasValue)
                <%= implName %> = (<%= referencedImplementation %>)Context.Find<<%= referencedInterface %>>(<%= fkBackingName %>.Value);
            else
                <%= implName %> = null;
