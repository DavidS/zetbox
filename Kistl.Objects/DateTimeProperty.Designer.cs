//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1378
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kistl.App.Base
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Collections;
    using System.Xml;
    using System.Xml.Serialization;
    using Kistl.API;
    
    
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="DateTimeProperty")]
    public class DateTimeProperty : Kistl.App.Base.ValueTypeProperty
    {
        
        public event ToStringHandler<DateTimeProperty> OnToString_DateTimeProperty;
        
        public event ObjectEventHandler<DateTimeProperty> OnPreSave_DateTimeProperty;
        
        public event ObjectEventHandler<DateTimeProperty> OnPostSave_DateTimeProperty;
        
        public event GetDatabaseType_Handler<DateTimeProperty> OnGetDatabaseType_DateTimeProperty;
        
        public event GetDataType_Handler<DateTimeProperty> OnGetDataType_DateTimeProperty;
        
        public override string ToString()
        {
            MethodReturnEventArgs<string> e = new MethodReturnEventArgs<string>();
            e.Result = base.ToString();
            if (OnToString_DateTimeProperty != null)
            {
                OnToString_DateTimeProperty(this, e);
            }
            return e.Result;
        }
        
        public override void NotifyPreSave()
        {
            base.NotifyPreSave();
            if (OnPreSave_DateTimeProperty != null) OnPreSave_DateTimeProperty(this);
        }
        
        public override void NotifyPostSave()
        {
            base.NotifyPostSave();
            if (OnPostSave_DateTimeProperty != null) OnPostSave_DateTimeProperty(this);
        }
        
        public override string GetDatabaseType()
        {
            MethodReturnEventArgs<string> e = new MethodReturnEventArgs<string>();
            e.Result = base.GetDatabaseType();
            if (OnGetDatabaseType_DateTimeProperty != null)
            {
                OnGetDatabaseType_DateTimeProperty(this, e);
            }
            return e.Result;
        }
        
        public override string GetDataType()
        {
            MethodReturnEventArgs<string> e = new MethodReturnEventArgs<string>();
            e.Result = base.GetDataType();
            if (OnGetDataType_DateTimeProperty != null)
            {
                OnGetDataType_DateTimeProperty(this, e);
            }
            return e.Result;
        }
    }
}
