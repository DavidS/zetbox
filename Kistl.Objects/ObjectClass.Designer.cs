//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kistl.App.Base
{
    using System;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Linq;
    using System.Text;
    using System.Collections;
    using System.Xml;
    using System.Xml.Serialization;
    using Kistl.API;
    
    
    /// <summary>
    /// Metadefinition Object for ObjectClasses.
    /// </summary>
    public interface ObjectClass : Kistl.App.Base.DataType
    {
        
        /// <summary>
        /// Tabellenname in der Datenbank
        /// </summary>
        string TableName
        {
            get;
            set;
        }
        
        /// <summary>
        /// Pointer auf die Basisklasse
        /// </summary>
        Kistl.App.Base.ObjectClass BaseObjectClass
        {
            get;
            set;
        }
        
        /// <summary>
        /// Liste der vererbten Klassen
        /// </summary>
        ICollection<Kistl.App.Base.ObjectClass> SubClasses
        {
            get;
        }
        
        /// <summary>
        /// Interfaces der Objektklasse
        /// </summary>
        ICollection<Kistl.App.Base.Interface> ImplementsInterfaces
        {
            get;
        }
        
        /// <summary>
        /// Setting this to true marks the instances of this class as "simple." At first this will only mean that they'll be displayed inline.
        /// </summary>
        bool IsSimpleObject
        {
            get;
            set;
        }
        
        /// <summary>
        /// if true then all Instances appear in FozenContext.
        /// </summary>
        bool IsFrozenObject
        {
            get;
            set;
        }
        
        /// <summary>
        /// The default model to use for the UI
        /// </summary>
        Kistl.App.Base.TypeRef DefaultModel
        {
            get;
            set;
        }
        
        IList<Kistl.App.Base.Method> GetInheritedMethods();
        
        /// <returns>
        /// returns the TypeRef of the default model for this ObjectClass
        /// </returns>
        Kistl.App.Base.TypeRef GetDefaultModelRef();
    }
}
