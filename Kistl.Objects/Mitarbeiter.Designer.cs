//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1378
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kistl.App.Projekte
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Collections;
    using System.Xml;
    using System.Xml.Serialization;
    using Kistl.API;
    
    
    [Table(Name="Mitarbeiter")]
    public sealed class Mitarbeiter : BaseDataObject
    {
        
        private int _ID = Helper.INVALIDID;
        
        private string _Name;
        
        private EntitySet<Kistl.App.Projekte.Projekt> _Projekte = new EntitySet<Kistl.App.Projekte.Projekt>();
        
        [Column(IsDbGenerated=true, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never, Storage="_ID")]
        public override int ID
        {
            get
            {
                return _ID;
            }
            set
            {
                _ID = value;
            }
        }
        
        [Column(UpdateCheck=UpdateCheck.Never, Storage="_Name")]
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                _Name = value;
            }
        }
        
        [Association(Storage="_Projekte", OtherKey="fk_Mitarbeiter")]
        [XmlIgnore()]
        public EntitySet<Kistl.App.Projekte.Projekt> Projekte
        {
            get
            {
                return _Projekte;
            }
            set
            {
                _Projekte.Assign(value);
            }
        }
        
        public event ToStringHandler<Mitarbeiter> OnToString;
        
        public event ObjectEventHandler<Mitarbeiter> OnPreSave;
        
        public event ObjectEventHandler<Mitarbeiter> OnPostSave;
        
        public override string ToString()
        {
            if (OnToString != null)
            {
                ToStringEventArgs e = new ToStringEventArgs();
                OnToString(this, e);
                return e.Result;
            }
            return base.ToString();
        }
        
        public override void NotifyPreSave()
        {
            if (OnPreSave != null) OnPreSave(this);
        }
        
        public override void NotifyPostSave()
        {
            if (OnPostSave != null) OnPostSave(this);
        }
    }
}
