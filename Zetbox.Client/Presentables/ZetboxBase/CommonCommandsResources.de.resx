<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DataObjectCommand_IsReadOnly" xml:space="preserve">
    <value>Dieser Bereich ist schreibgeschützt.</value>
  </data>
  <data name="DataObjectCommand_NotAllowed" xml:space="preserve">
    <value>Datensätze löschen ist hier nicht erlaubt.</value>
  </data>
  <data name="DataObjectCommand_NothingSelected" xml:space="preserve">
    <value>Keine Auswahl.</value>
  </data>
  <data name="DataObjectCommand_ProgrammerError" xml:space="preserve">
    <value>Programmierfehler: "{0}" als Parameter.</value>
  </data>
  <data name="DeleteDataObjectCommand_Confirm" xml:space="preserve">
    <value>Sind Sie sicher, dass Sie diese Datensätze löschen möchten?</value>
  </data>
  <data name="DeleteDataObjectCommand_Confirm_Title" xml:space="preserve">
    <value>Löschen von Datensätzen</value>
  </data>
  <data name="DeleteDataObjectCommand_Name" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="DeleteDataObjectCommand_SomeMayNotBeDeleted" xml:space="preserve">
    <value>Einige der ausgewählten Datensätze dürfen nicht gelöscht werden.</value>
  </data>
  <data name="DeleteDataObjectCommand_Tooltip" xml:space="preserve">
    <value>Löscht die aktuell ausgewählten Datensätze</value>
  </data>
  <data name="EditDataObjectClassCommand_Name" xml:space="preserve">
    <value>Klasse bearbeiten</value>
  </data>
  <data name="EditDataObjectClassCommand_Tooltip" xml:space="preserve">
    <value>Öffnet den Editor für die aktuelle Listen-Klasse</value>
  </data>
  <data name="ElevatedModeCommand_Error" xml:space="preserve">
    <value>Sie haben keine Berechtigunen um in den Elevated Mode zu wechseln</value>
  </data>
  <data name="ElevatedModeCommand_Name" xml:space="preserve">
    <value>Elevated Mode</value>
  </data>
  <data name="ElevatedModeCommand_Tooltip" xml:space="preserve">
    <value>Wechselt in den Elevated Mode</value>
  </data>
  <data name="NewDataObjectCommand_Name" xml:space="preserve">
    <value>Neu</value>
  </data>
  <data name="NewDataObjectCommand_Tooltip" xml:space="preserve">
    <value>Erstellt ein neuen Datensatz</value>
  </data>
  <data name="OpenDataObjectCommand_Name" xml:space="preserve">
    <value>Öffnen</value>
  </data>
  <data name="OpenDataObjectCommand_Tooltip" xml:space="preserve">
    <value>Öffnet den aktuell gewählten Datensatz</value>
  </data>
  <data name="RefreshCommand_Name" xml:space="preserve">
    <value>Aktualisieren</value>
  </data>
  <data name="RefreshCommand_Tooltip" xml:space="preserve">
    <value>Aktualisiert die aktuelle Liste</value>
  </data>
  <data name="ReportProblemCommand_DescriptionTemplate" xml:space="preserve">
    <value>Bitte fügen Sie Ihre Kommentare hier ein</value>
  </data>
  <data name="ReportProblemCommand_Error" xml:space="preserve">
    <value>Problem kann nicht gesendet werden:\n{0}</value>
  </data>
  <data name="ReportProblemCommand_Error_Title" xml:space="preserve">
    <value>Fehler</value>
  </data>
  <data name="ReportProblemCommand_MessageTemplate" xml:space="preserve">
    <value>Bitte fügen Sie Ihre Nachricht hier ein</value>
  </data>
  <data name="ReportProblemCommand_Name" xml:space="preserve">
    <value>Ein Problem melden</value>
  </data>
  <data name="ReportProblemCommand_Tooltip" xml:space="preserve">
    <value>Meldet ein Problem</value>
  </data>
</root>