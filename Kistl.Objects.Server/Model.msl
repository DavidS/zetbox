<?xml version="1.0" encoding="utf-8"?>
<Mapping Space="C-S" xmlns="urn:schemas-microsoft-com:windows:storage:mapping:CS">
  <EntityContainerMapping StorageEntityContainer="dbo" CdmEntityContainer="Entities">
    
    <!-- EntitySetMappings for classes -->
    <EntitySetMapping Name="AccessControl">
      <EntityTypeMapping TypeName="IsTypeOf(Model.AccessControl)">
	    <MappingFragment StoreEntitySet="AccessControl">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Name" ColumnName="Name" />
<ScalarProperty Name="Rights__Implementation__" ColumnName="Rights" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.GroupMembership)">
	    <MappingFragment StoreEntitySet="GroupMembership">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.RoleMembership)">
	    <MappingFragment StoreEntitySet="RoleMembership">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="ANewObjectClass">
      <EntityTypeMapping TypeName="IsTypeOf(Model.ANewObjectClass)">
	    <MappingFragment StoreEntitySet="ANewObjectClass">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="TestString" ColumnName="TestString" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="AnotherTest">
      <EntityTypeMapping TypeName="IsTypeOf(Model.AnotherTest)">
	    <MappingFragment StoreEntitySet="AnotherTest">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Antwort">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Antwort)">
	    <MappingFragment StoreEntitySet="Antwort">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Fragebogen_pos" ColumnName="fk_Ein_Fragebogen_pos" />
<ScalarProperty Name="Frage" ColumnName="Frage" />
<ScalarProperty Name="FragenNummer" ColumnName="FragenNummer" />
<ScalarProperty Name="GegebeneAntwort" ColumnName="GegebeneAntwort" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Assembly">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Assembly)">
	    <MappingFragment StoreEntitySet="Assembly">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="DeploymentRestrictions__Implementation__" ColumnName="DeploymentRestrictions" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Auftrag">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Auftrag)">
	    <MappingFragment StoreEntitySet="Auftrag">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Auftragsname" ColumnName="Auftragsname" />
<ScalarProperty Name="Auftragswert" ColumnName="Auftragswert" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Auftrag_Rights">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Auftrag_Rights)">
        <MappingFragment StoreEntitySet="Auftrag_Rights">
          <ScalarProperty Name="ID" ColumnName="ID" />
          <ScalarProperty Name="Identity" ColumnName="Identity" />
          <ScalarProperty Name="Right" ColumnName="Right" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <AssociationSetMapping Name="FK_Auftraege_Rights" TypeName="Model.FK_Auftraege_Rights" StoreEntitySet="Auftrag_Rights">
      <EndProperty Name="Auftrag">
        <ScalarProperty Name="ID" ColumnName="ID" />
      </EndProperty>
      <EndProperty Name="Auftrag_Rights">
        <ScalarProperty Name="ID" ColumnName="ID" />
        <ScalarProperty Name="Identity" ColumnName="Identity" />
      </EndProperty>
    </AssociationSetMapping>
    <EntitySetMapping Name="BaseParameter">
      <EntityTypeMapping TypeName="IsTypeOf(Model.BaseParameter)">
	    <MappingFragment StoreEntitySet="BaseParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Method_pos" ColumnName="fk_Method_pos" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="IsList" ColumnName="IsList" />
<ScalarProperty Name="IsReturnParameter" ColumnName="IsReturnParameter" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.BoolParameter)">
	    <MappingFragment StoreEntitySet="BoolParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.CLRObjectParameter)">
	    <MappingFragment StoreEntitySet="CLRObjectParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DateTimeParameter)">
	    <MappingFragment StoreEntitySet="DateTimeParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DoubleParameter)">
	    <MappingFragment StoreEntitySet="DoubleParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.IntParameter)">
	    <MappingFragment StoreEntitySet="IntParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectParameter)">
	    <MappingFragment StoreEntitySet="ObjectParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.StringParameter)">
	    <MappingFragment StoreEntitySet="StringParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Blob">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Blob)">
	    <MappingFragment StoreEntitySet="Blob">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="MimeType" ColumnName="MimeType" />
<ScalarProperty Name="OriginalName" ColumnName="OriginalName" />
<ScalarProperty Name="StoragePath" ColumnName="StoragePath" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Company">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Company)">
	    <MappingFragment StoreEntitySet="Company">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Constraint">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Constraint)">
	    <MappingFragment StoreEntitySet="Constraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Reason" ColumnName="Reason" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ConsistentNavigatorConstraint)">
	    <MappingFragment StoreEntitySet="ConsistentNavigatorConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.IntegerRangeConstraint)">
	    <MappingFragment StoreEntitySet="IntegerRangeConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Max" ColumnName="Max" />
<ScalarProperty Name="Min" ColumnName="Min" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.IsValidIdentifierConstraint)">
	    <MappingFragment StoreEntitySet="IsValidIdentifierConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.IsValidNamespaceConstraint)">
	    <MappingFragment StoreEntitySet="IsValidNamespaceConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.MethodInvocationConstraint)">
	    <MappingFragment StoreEntitySet="MethodInvocationConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.NotNullableConstraint)">
	    <MappingFragment StoreEntitySet="NotNullableConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.StringRangeConstraint)">
	    <MappingFragment StoreEntitySet="StringRangeConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="MaxLength" ColumnName="MaxLength" />
<ScalarProperty Name="MinLength" ColumnName="MinLength" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="ControlKind">
      <EntityTypeMapping TypeName="IsTypeOf(Model.ControlKind)">
	    <MappingFragment StoreEntitySet="ControlKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="RequestedWidth" ColumnName="RequestedWidth" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ActionKind)">
	    <MappingFragment StoreEntitySet="ActionKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.CheckboxKind)">
	    <MappingFragment StoreEntitySet="CheckboxKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DataObjectKind)">
	    <MappingFragment StoreEntitySet="DataObjectKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.RelationEditorKind)">
	    <MappingFragment StoreEntitySet="RelationEditorKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DataObjectSelectionTaskKind)">
	    <MappingFragment StoreEntitySet="DataObjectSelectionTaskKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DataObjectSummaryKind)">
	    <MappingFragment StoreEntitySet="DataObjectSummaryKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.EnumerationSelectorKind)">
	    <MappingFragment StoreEntitySet="EnumerationSelectorKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.LabelKind)">
	    <MappingFragment StoreEntitySet="LabelKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.LauncherKind)">
	    <MappingFragment StoreEntitySet="LauncherKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectListKind)">
	    <MappingFragment StoreEntitySet="ObjectListKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectRefGridCellKind)">
	    <MappingFragment StoreEntitySet="ObjectRefGridCellKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectRefKind)">
	    <MappingFragment StoreEntitySet="ObjectRefKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.TypeRefRefKind)">
	    <MappingFragment StoreEntitySet="TypeRefRefKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.PropertyGroupKind)">
	    <MappingFragment StoreEntitySet="PropertyGroupKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.SingleLineDataObjectKind)">
	    <MappingFragment StoreEntitySet="SingleLineDataObjectKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.StringListKind)">
	    <MappingFragment StoreEntitySet="StringListKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.StringSelectorKind)">
	    <MappingFragment StoreEntitySet="StringSelectorKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.TextboxKind)">
	    <MappingFragment StoreEntitySet="TextboxKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.WorkspaceKind)">
	    <MappingFragment StoreEntitySet="WorkspaceKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="CurrentSchema">
      <EntityTypeMapping TypeName="IsTypeOf(Model.CurrentSchema)">
	    <MappingFragment StoreEntitySet="CurrentSchema">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Schema" ColumnName="Schema" />
<ScalarProperty Name="Version" ColumnName="Version" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="DataType">
      <EntityTypeMapping TypeName="IsTypeOf(Model.DataType)">
	    <MappingFragment StoreEntitySet="DataType">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Name" ColumnName="Name" />
<ScalarProperty Name="ShowIconInLists" ColumnName="ShowIconInLists" />
<ScalarProperty Name="ShowIdInLists" ColumnName="ShowIdInLists" />
<ScalarProperty Name="ShowNameInLists" ColumnName="ShowNameInLists" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.CompoundObject)">
	    <MappingFragment StoreEntitySet="CompoundObject">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.Enumeration)">
	    <MappingFragment StoreEntitySet="Enumeration">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="AreFlags" ColumnName="AreFlags" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.Interface)">
	    <MappingFragment StoreEntitySet="Interface">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectClass)">
	    <MappingFragment StoreEntitySet="ObjectClass">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="IsAbstract" ColumnName="IsAbstract" />
<ScalarProperty Name="IsFrozenObject" ColumnName="IsFrozenObject" />
<ScalarProperty Name="IsSimpleObject" ColumnName="IsSimpleObject" />
<ScalarProperty Name="TableName" ColumnName="TableName" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ControlKindClass)">
	    <MappingFragment StoreEntitySet="ControlKindClass">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="DefaultPropertyValue">
      <EntityTypeMapping TypeName="IsTypeOf(Model.DefaultPropertyValue)">
	    <MappingFragment StoreEntitySet="DefaultPropertyValue">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.NewGuidDefaultValue)">
	    <MappingFragment StoreEntitySet="NewGuidDefaultValue">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="EnumerationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.EnumerationEntry)">
	    <MappingFragment StoreEntitySet="EnumerationEntry">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Name" ColumnName="Name" />
<ScalarProperty Name="Value" ColumnName="Value" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Exam">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Exam)">
	    <MappingFragment StoreEntitySet="Exam">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Date" ColumnName="Date" />
<ScalarProperty Name="MaxScores" ColumnName="MaxScores" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Exercise">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Exercise)">
	    <MappingFragment StoreEntitySet="Exercise">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Date" ColumnName="Date" />
<ScalarProperty Name="MaxScores" ColumnName="MaxScores" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="File">
      <EntityTypeMapping TypeName="IsTypeOf(Model.File)">
	    <MappingFragment StoreEntitySet="File">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.Document)">
	    <MappingFragment StoreEntitySet="Document">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DynamicFile)">
	    <MappingFragment StoreEntitySet="DynamicFile">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.StaticFile)">
	    <MappingFragment StoreEntitySet="StaticFile">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Fragebogen">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Fragebogen)">
	    <MappingFragment StoreEntitySet="Fragebogen">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="BogenNummer" ColumnName="BogenNummer" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Group">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Group)">
	    <MappingFragment StoreEntitySet="Group">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="GroupExcercise">
      <EntityTypeMapping TypeName="IsTypeOf(Model.GroupExcercise)">
	    <MappingFragment StoreEntitySet="GroupExcercise">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Score" ColumnName="Score" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Icon">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Icon)">
	    <MappingFragment StoreEntitySet="Icon">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="IconFile" ColumnName="IconFile" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Identity">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Identity)">
	    <MappingFragment StoreEntitySet="Identity">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="DisplayName" ColumnName="DisplayName" />
<ScalarProperty Name="Password" ColumnName="Password" />
<ScalarProperty Name="UserName" ColumnName="UserName" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="InstanceConstraint">
      <EntityTypeMapping TypeName="IsTypeOf(Model.InstanceConstraint)">
	    <MappingFragment StoreEntitySet="InstanceConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Kunde">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Kunde)">
	    <MappingFragment StoreEntitySet="Kunde">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Adresse" ColumnName="Adresse" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="Kundenname" ColumnName="Kundenname" />
<ScalarProperty Name="Land" ColumnName="Land" />
<ScalarProperty Name="Ort" ColumnName="Ort" />
<ScalarProperty Name="PLZ" ColumnName="PLZ" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Method">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Method)">
	    <MappingFragment StoreEntitySet="Method">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="IsDisplayable" ColumnName="IsDisplayable" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="MethodInvocation">
      <EntityTypeMapping TypeName="IsTypeOf(Model.MethodInvocation)">
	    <MappingFragment StoreEntitySet="MethodInvocation">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="MemberName" ColumnName="MemberName" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Mitarbeiter">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Mitarbeiter)">
	    <MappingFragment StoreEntitySet="Mitarbeiter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="Geburtstag" ColumnName="Geburtstag" />
<ScalarProperty Name="Name" ColumnName="Name" />
<ScalarProperty Name="SVNr" ColumnName="SVNr" />
<ScalarProperty Name="TelefonNummer" ColumnName="TelefonNummer" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Module">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Module)">
	    <MappingFragment StoreEntitySet="Module">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Name" ColumnName="Name" />
<ScalarProperty Name="Namespace" ColumnName="Namespace" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Muhblah">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Muhblah)">
	    <MappingFragment StoreEntitySet="Muhblah">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="TestBool" ColumnName="TestBool" />
<ScalarProperty Name="TestDateTime" ColumnName="TestDateTime" />
<ScalarProperty Name="TestEnum__Implementation__" ColumnName="TestEnum" />
<ScalarProperty Name="TestString" ColumnName="TestString" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="PresenceRecord">
      <EntityTypeMapping TypeName="IsTypeOf(Model.PresenceRecord)">
	    <MappingFragment StoreEntitySet="PresenceRecord">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="From" ColumnName="From" />
<ScalarProperty Name="Thru" ColumnName="Thru" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="PresentableModelDescriptor">
      <EntityTypeMapping TypeName="IsTypeOf(Model.PresentableModelDescriptor)">
	    <MappingFragment StoreEntitySet="PresentableModelDescriptor">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Projekt">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Projekt)">
	    <MappingFragment StoreEntitySet="Projekt">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="AufwandGes" ColumnName="AufwandGes" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="Kundenname" ColumnName="Kundenname" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Projekt_Rights">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Projekt_Rights)">
        <MappingFragment StoreEntitySet="Projekt_Rights">
          <ScalarProperty Name="ID" ColumnName="ID" />
          <ScalarProperty Name="Identity" ColumnName="Identity" />
          <ScalarProperty Name="Right" ColumnName="Right" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <AssociationSetMapping Name="FK_Projekte_Rights" TypeName="Model.FK_Projekte_Rights" StoreEntitySet="Projekt_Rights">
      <EndProperty Name="Projekt">
        <ScalarProperty Name="ID" ColumnName="ID" />
      </EndProperty>
      <EndProperty Name="Projekt_Rights">
        <ScalarProperty Name="ID" ColumnName="ID" />
        <ScalarProperty Name="Identity" ColumnName="Identity" />
      </EndProperty>
    </AssociationSetMapping>
    <EntitySetMapping Name="Property">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Property)">
	    <MappingFragment StoreEntitySet="Property">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ObjectClass_pos" ColumnName="fk_ObjectClass_pos" />
<ScalarProperty Name="CategoryTags" ColumnName="CategoryTags" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.CalculatedObjectReferenceProperty)">
	    <MappingFragment StoreEntitySet="CalculatedObjectReferenceProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.CompoundObjectProperty)">
	    <MappingFragment StoreEntitySet="CompoundObjectProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="HasPersistentOrder" ColumnName="HasPersistentOrder" />
<ScalarProperty Name="IsList" ColumnName="IsList" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectReferencePlaceholderProperty)">
	    <MappingFragment StoreEntitySet="ObjectReferencePlaceholderProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="HasPersistentOrder" ColumnName="HasPersistentOrder" />
<ScalarProperty Name="ImplementorRoleName" ColumnName="ImplementorRoleName" />
<ScalarProperty Name="IsList" ColumnName="IsList" />
<ScalarProperty Name="ItemRoleName" ColumnName="ItemRoleName" />
<ScalarProperty Name="Verb" ColumnName="Verb" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectReferenceProperty)">
	    <MappingFragment StoreEntitySet="ObjectReferenceProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="EagerLoading" ColumnName="EagerLoading" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ValueTypeProperty)">
	    <MappingFragment StoreEntitySet="ValueTypeProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="HasPersistentOrder" ColumnName="HasPersistentOrder" />
<ScalarProperty Name="IsList" ColumnName="IsList" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.BoolProperty)">
	    <MappingFragment StoreEntitySet="BoolProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DateTimeProperty)">
	    <MappingFragment StoreEntitySet="DateTimeProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DoubleProperty)">
	    <MappingFragment StoreEntitySet="DoubleProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.EnumerationProperty)">
	    <MappingFragment StoreEntitySet="EnumerationProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.GuidProperty)">
	    <MappingFragment StoreEntitySet="GuidProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.IntProperty)">
	    <MappingFragment StoreEntitySet="IntProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.StringProperty)">
	    <MappingFragment StoreEntitySet="StringProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="PropertyInvocation">
      <EntityTypeMapping TypeName="IsTypeOf(Model.PropertyInvocation)">
	    <MappingFragment StoreEntitySet="PropertyInvocation">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="InvocationType__Implementation__" ColumnName="InvocationType" />
<ScalarProperty Name="MemberName" ColumnName="MemberName" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Relation">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Relation)">
	    <MappingFragment StoreEntitySet="Relation">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="Containment__Implementation__" ColumnName="Containment" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Storage__Implementation__" ColumnName="Storage" />
<ScalarProperty Name="Verb" ColumnName="Verb" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="RelationEnd">
      <EntityTypeMapping TypeName="IsTypeOf(Model.RelationEnd)">
	    <MappingFragment StoreEntitySet="RelationEnd">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="HasPersistentOrder" ColumnName="HasPersistentOrder" />
<ScalarProperty Name="Multiplicity__Implementation__" ColumnName="Multiplicity" />
<ScalarProperty Name="RoleName" ColumnName="RoleName" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Semester">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Semester)">
	    <MappingFragment StoreEntitySet="Semester">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="CourseName" ColumnName="CourseName" />
<ScalarProperty Name="Period__Implementation__" ColumnName="Period" />
<ScalarProperty Name="Year" ColumnName="Year" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Student">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Student)">
	    <MappingFragment StoreEntitySet="Student">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="MatriculationNumber" ColumnName="MatriculationNumber" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="StudentExam">
      <EntityTypeMapping TypeName="IsTypeOf(Model.StudentExam)">
	    <MappingFragment StoreEntitySet="StudentExam">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Score" ColumnName="Score" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Task">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Task)">
	    <MappingFragment StoreEntitySet="Task">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Aufwand" ColumnName="Aufwand" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="DatumBis" ColumnName="DatumBis" />
<ScalarProperty Name="DatumVon" ColumnName="DatumVon" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Task_Rights">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Task_Rights)">
        <MappingFragment StoreEntitySet="Task_Rights">
          <ScalarProperty Name="ID" ColumnName="ID" />
          <ScalarProperty Name="Identity" ColumnName="Identity" />
          <ScalarProperty Name="Right" ColumnName="Right" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <AssociationSetMapping Name="FK_Tasks_Rights" TypeName="Model.FK_Tasks_Rights" StoreEntitySet="Task_Rights">
      <EndProperty Name="Task">
        <ScalarProperty Name="ID" ColumnName="ID" />
      </EndProperty>
      <EndProperty Name="Task_Rights">
        <ScalarProperty Name="ID" ColumnName="ID" />
        <ScalarProperty Name="Identity" ColumnName="Identity" />
      </EndProperty>
    </AssociationSetMapping>
    <EntitySetMapping Name="Template">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Template)">
	    <MappingFragment StoreEntitySet="Template">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="DisplayedTypeFullName" ColumnName="DisplayedTypeFullName" />
<ScalarProperty Name="DisplayName" ColumnName="DisplayName" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="TestCustomObject">
      <EntityTypeMapping TypeName="IsTypeOf(Model.TestCustomObject)">
	    <MappingFragment StoreEntitySet="TestCustomObject">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Birthday" ColumnName="Birthday" />
<ScalarProperty Name="PersonName" ColumnName="PersonName" />
<ComplexProperty Name="PhoneNumberMobile__Implementation__" TypeName="Model.TestPhoneCompoundObject">
  <ScalarProperty Name="CompoundObject_IsNull" ColumnName="PhoneNumberMobile" />
<ScalarProperty Name="AreaCode" ColumnName="PhoneNumberMobile_AreaCode" />
<ScalarProperty Name="Number" ColumnName="PhoneNumberMobile_Number" />
</ComplexProperty>
<ComplexProperty Name="PhoneNumberOffice__Implementation__" TypeName="Model.TestPhoneCompoundObject">
  <ScalarProperty Name="CompoundObject_IsNull" ColumnName="PhoneNumberOffice" />
<ScalarProperty Name="AreaCode" ColumnName="PhoneNumberOffice_AreaCode" />
<ScalarProperty Name="Number" ColumnName="PhoneNumberOffice_Number" />
</ComplexProperty>
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="TestObjClass">
      <EntityTypeMapping TypeName="IsTypeOf(Model.TestObjClass)">
	    <MappingFragment StoreEntitySet="TestObjClass">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="MyIntProperty" ColumnName="MyIntProperty" />
<ScalarProperty Name="StringProp" ColumnName="StringProp" />
<ScalarProperty Name="TestEnumProp__Implementation__" ColumnName="TestEnumProp" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="TestStudent">
      <EntityTypeMapping TypeName="IsTypeOf(Model.TestStudent)">
	    <MappingFragment StoreEntitySet="TestStudent">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="TypeRef">
      <EntityTypeMapping TypeName="IsTypeOf(Model.TypeRef)">
	    <MappingFragment StoreEntitySet="TypeRef">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ChangedOn" ColumnName="ChangedOn" />
<ScalarProperty Name="CreatedOn" ColumnName="CreatedOn" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="FullName" ColumnName="FullName" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="ViewDescriptor">
      <EntityTypeMapping TypeName="IsTypeOf(Model.ViewDescriptor)">
	    <MappingFragment StoreEntitySet="ViewDescriptor">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Toolkit__Implementation__" ColumnName="Toolkit" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Visual">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Visual)">
	    <MappingFragment StoreEntitySet="Visual">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Description" ColumnName="Description" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="WorkEffort">
      <EntityTypeMapping TypeName="IsTypeOf(Model.WorkEffort)">
	    <MappingFragment StoreEntitySet="WorkEffort">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="From" ColumnName="From" />
<ScalarProperty Name="Name" ColumnName="Name" />
<ScalarProperty Name="Notes" ColumnName="Notes" />
<ScalarProperty Name="Thru" ColumnName="Thru" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="WorkEffortAccount">
      <EntityTypeMapping TypeName="IsTypeOf(Model.WorkEffortAccount)">
	    <MappingFragment StoreEntitySet="WorkEffortAccount">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="BudgetHours" ColumnName="BudgetHours" />
<ScalarProperty Name="Name" ColumnName="Name" />
<ScalarProperty Name="Notes" ColumnName="Notes" />
<ScalarProperty Name="SpentHours" ColumnName="SpentHours" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>


    <!-- EntitySetMappings and AssociationSetMappings for object-object relations with a CollectionEntry -->
    <!--
    Relation: FK_CalculatedReference_dependsOn_InputProperties
    A: ZeroOrMore CalculatedObjectReferenceProperty as CalculatedReference
    B: ZeroOrMore Property as InputProperties
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="CalculatedObjectReferenceProperty_dependsOn_Property_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.CalculatedObjectReferenceProperty_dependsOn_Property_RelationEntry)">
        <MappingFragment StoreEntitySet="CalculatedObjectReferenceProperty_dependsOn_Property_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
		  <ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_CalculatedReference_dependsOn_InputProperties_A"
                           TypeName="Model.FK_CalculatedReference_dependsOn_InputProperties_A"
                           StoreEntitySet="CalculatedObjectReferenceProperty_dependsOn_Property_RelationEntry" >
      <EndProperty Name="CalculatedReference">
        <ScalarProperty Name="ID" ColumnName="fk_CalculatedReference"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CalculatedReference" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_CalculatedReference_dependsOn_InputProperties_B"
                           TypeName="Model.FK_CalculatedReference_dependsOn_InputProperties_B"
                           StoreEntitySet="CalculatedObjectReferenceProperty_dependsOn_Property_RelationEntry" >
      <EndProperty Name="InputProperties">
        <ScalarProperty Name="ID" ColumnName="fk_InputProperties"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_InputProperties" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_ControlKindClass_supports_SupportedInterfaces
    A: ZeroOrMore ControlKindClass as ControlKindClass
    B: ZeroOrMore TypeRef as SupportedInterfaces
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="ControlKindClass_supports_TypeRef_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.ControlKindClass_supports_TypeRef_RelationEntry)">
        <MappingFragment StoreEntitySet="ControlKindClass_supports_TypeRef_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
		  <ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_ControlKindClass_supports_SupportedInterfaces_A"
                           TypeName="Model.FK_ControlKindClass_supports_SupportedInterfaces_A"
                           StoreEntitySet="ControlKindClass_supports_TypeRef_RelationEntry" >
      <EndProperty Name="ControlKindClass">
        <ScalarProperty Name="ID" ColumnName="fk_ControlKindClass"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ControlKindClass" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_ControlKindClass_supports_SupportedInterfaces_B"
                           TypeName="Model.FK_ControlKindClass_supports_SupportedInterfaces_B"
                           StoreEntitySet="ControlKindClass_supports_TypeRef_RelationEntry" >
      <EndProperty Name="SupportedInterfaces">
        <ScalarProperty Name="ID" ColumnName="fk_SupportedInterfaces"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_SupportedInterfaces" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_Document_has_Revisions
    A: ZeroOrMore Document as Document
    B: ZeroOrMore Blob as Revisions
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="Document_has_Blob_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Document_has_Blob_RelationEntry)">
        <MappingFragment StoreEntitySet="Document_has_Blob_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
		  <ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
          <ScalarProperty Name="A_pos" ColumnName="fk_Document_pos" />
          <ScalarProperty Name="B_pos" ColumnName="fk_Revisions_pos" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_Document_has_Revisions_A"
                           TypeName="Model.FK_Document_has_Revisions_A"
                           StoreEntitySet="Document_has_Blob_RelationEntry" >
      <EndProperty Name="Document">
        <ScalarProperty Name="ID" ColumnName="fk_Document"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Document" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_Document_has_Revisions_B"
                           TypeName="Model.FK_Document_has_Revisions_B"
                           StoreEntitySet="Document_has_Blob_RelationEntry" >
      <EndProperty Name="Revisions">
        <ScalarProperty Name="ID" ColumnName="fk_Revisions"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Revisions" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_Group_memberOf_ParentGroup
    A: ZeroOrMore Group as Group
    B: ZeroOrMore Group as ParentGroup
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="Group_memberOf_Group_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Group_memberOf_Group_RelationEntry)">
        <MappingFragment StoreEntitySet="Group_memberOf_Group_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
		  <ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_Group_memberOf_ParentGroup_A"
                           TypeName="Model.FK_Group_memberOf_ParentGroup_A"
                           StoreEntitySet="Group_memberOf_Group_RelationEntry" >
      <EndProperty Name="Group">
        <ScalarProperty Name="ID" ColumnName="fk_Group"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Group" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_Group_memberOf_ParentGroup_B"
                           TypeName="Model.FK_Group_memberOf_ParentGroup_B"
                           StoreEntitySet="Group_memberOf_Group_RelationEntry" >
      <EndProperty Name="ParentGroup">
        <ScalarProperty Name="ID" ColumnName="fk_ParentGroup"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ParentGroup" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_GroupExcercise_accomplished_by_Students
    A: ZeroOrMore GroupExcercise as GroupExcercise
    B: ZeroOrMore Student as Students
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="GroupExcercise_accomplished_by_Student_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.GroupExcercise_accomplished_by_Student_RelationEntry)">
        <MappingFragment StoreEntitySet="GroupExcercise_accomplished_by_Student_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_GroupExcercise_accomplished_by_Students_A"
                           TypeName="Model.FK_GroupExcercise_accomplished_by_Students_A"
                           StoreEntitySet="GroupExcercise_accomplished_by_Student_RelationEntry" >
      <EndProperty Name="GroupExcercise">
        <ScalarProperty Name="ID" ColumnName="fk_GroupExcercise"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_GroupExcercise" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_GroupExcercise_accomplished_by_Students_B"
                           TypeName="Model.FK_GroupExcercise_accomplished_by_Students_B"
                           StoreEntitySet="GroupExcercise_accomplished_by_Student_RelationEntry" >
      <EndProperty Name="Students">
        <ScalarProperty Name="ID" ColumnName="fk_Students"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Students" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_Identities_memberOf_Groups
    A: ZeroOrMore Identity as Identities
    B: ZeroOrMore Group as Groups
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="Identity_memberOf_Group_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Identity_memberOf_Group_RelationEntry)">
        <MappingFragment StoreEntitySet="Identity_memberOf_Group_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_Identities_memberOf_Groups_A"
                           TypeName="Model.FK_Identities_memberOf_Groups_A"
                           StoreEntitySet="Identity_memberOf_Group_RelationEntry" >
      <EndProperty Name="Identities">
        <ScalarProperty Name="ID" ColumnName="fk_Identities"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Identities" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_Identities_memberOf_Groups_B"
                           TypeName="Model.FK_Identities_memberOf_Groups_B"
                           StoreEntitySet="Identity_memberOf_Group_RelationEntry" >
      <EndProperty Name="Groups">
        <ScalarProperty Name="ID" ColumnName="fk_Groups"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Groups" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_MuhBlah_ManyList_Role_has_TestCustomObjects_ManyList_Role
    A: ZeroOrMore Muhblah as MuhBlah_ManyList_Role
    B: ZeroOrMore TestCustomObject as TestCustomObjects_ManyList_Role
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="Muhblah_has_TestCustomObject_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Muhblah_has_TestCustomObject_RelationEntry)">
        <MappingFragment StoreEntitySet="Muhblah_has_TestCustomObject_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_MuhBlah_ManyList_Role_has_TestCustomObjects_ManyList_Role_A"
                           TypeName="Model.FK_MuhBlah_ManyList_Role_has_TestCustomObjects_ManyList_Role_A"
                           StoreEntitySet="Muhblah_has_TestCustomObject_RelationEntry" >
      <EndProperty Name="MuhBlah_ManyList_Role">
        <ScalarProperty Name="ID" ColumnName="fk_MuhBlah_ManyList_Role"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_MuhBlah_ManyList_Role" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_MuhBlah_ManyList_Role_has_TestCustomObjects_ManyList_Role_B"
                           TypeName="Model.FK_MuhBlah_ManyList_Role_has_TestCustomObjects_ManyList_Role_B"
                           StoreEntitySet="Muhblah_has_TestCustomObject_RelationEntry" >
      <EndProperty Name="TestCustomObjects_ManyList_Role">
        <ScalarProperty Name="ID" ColumnName="fk_TestCustomObjects_ManyList_Role"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_TestCustomObjects_ManyList_Role" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_ObjectClass_implements_ImplementsInterfaces
    A: ZeroOrMore ObjectClass as ObjectClass
    B: ZeroOrMore Interface as ImplementsInterfaces
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="ObjectClass_implements_Interface_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectClass_implements_Interface_RelationEntry)">
        <MappingFragment StoreEntitySet="ObjectClass_implements_Interface_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
		  <ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_ObjectClass_implements_ImplementsInterfaces_A"
                           TypeName="Model.FK_ObjectClass_implements_ImplementsInterfaces_A"
                           StoreEntitySet="ObjectClass_implements_Interface_RelationEntry" >
      <EndProperty Name="ObjectClass">
        <ScalarProperty Name="ID" ColumnName="fk_ObjectClass"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ObjectClass" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_ObjectClass_implements_ImplementsInterfaces_B"
                           TypeName="Model.FK_ObjectClass_implements_ImplementsInterfaces_B"
                           StoreEntitySet="ObjectClass_implements_Interface_RelationEntry" >
      <EndProperty Name="ImplementsInterfaces">
        <ScalarProperty Name="ID" ColumnName="fk_ImplementsInterfaces"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ImplementsInterfaces" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_Presentable_displayedBy_SecondaryControlKinds
    A: ZeroOrMore PresentableModelDescriptor as Presentable
    B: ZeroOrMore ControlKind as SecondaryControlKinds
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="PresentableModelDescriptor_displayedBy_ControlKind_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.PresentableModelDescriptor_displayedBy_ControlKind_RelationEntry)">
        <MappingFragment StoreEntitySet="PresentableModelDescriptor_displayedBy_ControlKind_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
		  <ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_Presentable_displayedBy_SecondaryControlKinds_A"
                           TypeName="Model.FK_Presentable_displayedBy_SecondaryControlKinds_A"
                           StoreEntitySet="PresentableModelDescriptor_displayedBy_ControlKind_RelationEntry" >
      <EndProperty Name="Presentable">
        <ScalarProperty Name="ID" ColumnName="fk_Presentable"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Presentable" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_Presentable_displayedBy_SecondaryControlKinds_B"
                           TypeName="Model.FK_Presentable_displayedBy_SecondaryControlKinds_B"
                           StoreEntitySet="PresentableModelDescriptor_displayedBy_ControlKind_RelationEntry" >
      <EndProperty Name="SecondaryControlKinds">
        <ScalarProperty Name="ID" ColumnName="fk_SecondaryControlKinds"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_SecondaryControlKinds" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_Projekte_haben_Mitarbeiter
    A: ZeroOrMore Projekt as Projekte
    B: ZeroOrMore Mitarbeiter as Mitarbeiter
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="Projekt_haben_Mitarbeiter_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Projekt_haben_Mitarbeiter_RelationEntry)">
        <MappingFragment StoreEntitySet="Projekt_haben_Mitarbeiter_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
          <ScalarProperty Name="A_pos" ColumnName="fk_Projekte_pos" />
          <ScalarProperty Name="B_pos" ColumnName="fk_Mitarbeiter_pos" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_Projekte_haben_Mitarbeiter_A"
                           TypeName="Model.FK_Projekte_haben_Mitarbeiter_A"
                           StoreEntitySet="Projekt_haben_Mitarbeiter_RelationEntry" >
      <EndProperty Name="Projekte">
        <ScalarProperty Name="ID" ColumnName="fk_Projekte"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Projekte" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_Projekte_haben_Mitarbeiter_B"
                           TypeName="Model.FK_Projekte_haben_Mitarbeiter_B"
                           StoreEntitySet="Projekt_haben_Mitarbeiter_RelationEntry" >
      <EndProperty Name="Mitarbeiter">
        <ScalarProperty Name="ID" ColumnName="fk_Mitarbeiter"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Mitarbeiter" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_RoleMembership_resolves_Relations
    A: ZeroOrMore RoleMembership as RoleMembership
    B: ZeroOrMore Relation as Relations
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="RoleMembership_resolves_Relation_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.RoleMembership_resolves_Relation_RelationEntry)">
        <MappingFragment StoreEntitySet="RoleMembership_resolves_Relation_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
		  <ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
          <ScalarProperty Name="A_pos" ColumnName="fk_RoleMembership_pos" />
          <ScalarProperty Name="B_pos" ColumnName="fk_Relations_pos" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_RoleMembership_resolves_Relations_A"
                           TypeName="Model.FK_RoleMembership_resolves_Relations_A"
                           StoreEntitySet="RoleMembership_resolves_Relation_RelationEntry" >
      <EndProperty Name="RoleMembership">
        <ScalarProperty Name="ID" ColumnName="fk_RoleMembership"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_RoleMembership" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_RoleMembership_resolves_Relations_B"
                           TypeName="Model.FK_RoleMembership_resolves_Relations_B"
                           StoreEntitySet="RoleMembership_resolves_Relation_RelationEntry" >
      <EndProperty Name="Relations">
        <ScalarProperty Name="ID" ColumnName="fk_Relations"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Relations" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_Students_attend_Semesters
    A: ZeroOrMore Student as Students
    B: ZeroOrMore Semester as Semesters
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="Student_attend_Semester_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Student_attend_Semester_RelationEntry)">
        <MappingFragment StoreEntitySet="Student_attend_Semester_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_Students_attend_Semesters_A"
                           TypeName="Model.FK_Students_attend_Semesters_A"
                           StoreEntitySet="Student_attend_Semester_RelationEntry" >
      <EndProperty Name="Students">
        <ScalarProperty Name="ID" ColumnName="fk_Students"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Students" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_Students_attend_Semesters_B"
                           TypeName="Model.FK_Students_attend_Semesters_B"
                           StoreEntitySet="Student_attend_Semester_RelationEntry" >
      <EndProperty Name="Semesters">
        <ScalarProperty Name="ID" ColumnName="fk_Semesters"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Semesters" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_Template_hasMenu_Menu
    A: ZeroOrMore Template as Template
    B: ZeroOrMore Visual as Menu
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="Template_hasMenu_Visual_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Template_hasMenu_Visual_RelationEntry)">
        <MappingFragment StoreEntitySet="Template_hasMenu_Visual_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_Template_hasMenu_Menu_A"
                           TypeName="Model.FK_Template_hasMenu_Menu_A"
                           StoreEntitySet="Template_hasMenu_Visual_RelationEntry" >
      <EndProperty Name="Template">
        <ScalarProperty Name="ID" ColumnName="fk_Template"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Template" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_Template_hasMenu_Menu_B"
                           TypeName="Model.FK_Template_hasMenu_Menu_B"
                           StoreEntitySet="Template_hasMenu_Visual_RelationEntry" >
      <EndProperty Name="Menu">
        <ScalarProperty Name="ID" ColumnName="fk_Menu"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Menu" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_TypeRef_hasGenericArguments_GenericArguments
    A: ZeroOrMore TypeRef as TypeRef
    B: ZeroOrMore TypeRef as GenericArguments
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="TypeRef_hasGenericArguments_TypeRef_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.TypeRef_hasGenericArguments_TypeRef_RelationEntry)">
        <MappingFragment StoreEntitySet="TypeRef_hasGenericArguments_TypeRef_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
		  <ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
          <ScalarProperty Name="A_pos" ColumnName="fk_TypeRef_pos" />
          <ScalarProperty Name="B_pos" ColumnName="fk_GenericArguments_pos" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_TypeRef_hasGenericArguments_GenericArguments_A"
                           TypeName="Model.FK_TypeRef_hasGenericArguments_GenericArguments_A"
                           StoreEntitySet="TypeRef_hasGenericArguments_TypeRef_RelationEntry" >
      <EndProperty Name="TypeRef">
        <ScalarProperty Name="ID" ColumnName="fk_TypeRef"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_TypeRef" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_TypeRef_hasGenericArguments_GenericArguments_B"
                           TypeName="Model.FK_TypeRef_hasGenericArguments_GenericArguments_B"
                           StoreEntitySet="TypeRef_hasGenericArguments_TypeRef_RelationEntry" >
      <EndProperty Name="GenericArguments">
        <ScalarProperty Name="ID" ColumnName="fk_GenericArguments"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_GenericArguments" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_Visual_contains_Children
    A: ZeroOrMore Visual as Visual
    B: ZeroOrMore Visual as Children
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="Visual_contains_Visual_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Visual_contains_Visual_RelationEntry)">
        <MappingFragment StoreEntitySet="Visual_contains_Visual_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_Visual_contains_Children_A"
                           TypeName="Model.FK_Visual_contains_Children_A"
                           StoreEntitySet="Visual_contains_Visual_RelationEntry" >
      <EndProperty Name="Visual">
        <ScalarProperty Name="ID" ColumnName="fk_Visual"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Visual" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_Visual_contains_Children_B"
                           TypeName="Model.FK_Visual_contains_Children_B"
                           StoreEntitySet="Visual_contains_Visual_RelationEntry" >
      <EndProperty Name="Children">
        <ScalarProperty Name="ID" ColumnName="fk_Children"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Children" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_Visual_hasContextMenu_ContextMenu
    A: ZeroOrMore Visual as Visual
    B: ZeroOrMore Visual as ContextMenu
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="Visual_hasContextMenu_Visual_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Visual_hasContextMenu_Visual_RelationEntry)">
        <MappingFragment StoreEntitySet="Visual_hasContextMenu_Visual_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_Visual_hasContextMenu_ContextMenu_A"
                           TypeName="Model.FK_Visual_hasContextMenu_ContextMenu_A"
                           StoreEntitySet="Visual_hasContextMenu_Visual_RelationEntry" >
      <EndProperty Name="Visual">
        <ScalarProperty Name="ID" ColumnName="fk_Visual"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Visual" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_Visual_hasContextMenu_ContextMenu_B"
                           TypeName="Model.FK_Visual_hasContextMenu_ContextMenu_B"
                           StoreEntitySet="Visual_hasContextMenu_Visual_RelationEntry" >
      <EndProperty Name="ContextMenu">
        <ScalarProperty Name="ID" ColumnName="fk_ContextMenu"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ContextMenu" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_WorkEffortAccount_has_Mitarbeiter
    A: ZeroOrMore WorkEffortAccount as WorkEffortAccount
    B: ZeroOrMore Mitarbeiter as Mitarbeiter
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="WorkEffortAccount_has_Mitarbeiter_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.WorkEffortAccount_has_Mitarbeiter_RelationEntry)">
        <MappingFragment StoreEntitySet="WorkEffortAccount_has_Mitarbeiter_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_WorkEffortAccount_has_Mitarbeiter_A"
                           TypeName="Model.FK_WorkEffortAccount_has_Mitarbeiter_A"
                           StoreEntitySet="WorkEffortAccount_has_Mitarbeiter_RelationEntry" >
      <EndProperty Name="WorkEffortAccount">
        <ScalarProperty Name="ID" ColumnName="fk_WorkEffortAccount"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_WorkEffortAccount" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_WorkEffortAccount_has_Mitarbeiter_B"
                           TypeName="Model.FK_WorkEffortAccount_has_Mitarbeiter_B"
                           StoreEntitySet="WorkEffortAccount_has_Mitarbeiter_RelationEntry" >
      <EndProperty Name="Mitarbeiter">
        <ScalarProperty Name="ID" ColumnName="fk_Mitarbeiter"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Mitarbeiter" IsNull="false"/>
    </AssociationSetMapping>



    <!-- AssociationSetMappings for direct object-object relations without a CollectionEntry -->
    <!--
    Relation: FK_AccessControl_has_Module
    A: ZeroOrMore AccessControl as AccessControl
    B: One Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_AccessControl_has_Module"
                           TypeName="Model.FK_AccessControl_has_Module"
                           StoreEntitySet="AccessControl" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="AccessControl">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_AccessControl_was_ChangedBy
    A: ZeroOrMore AccessControl as AccessControl
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_AccessControl_was_ChangedBy"
                           TypeName="Model.FK_AccessControl_was_ChangedBy"
                           StoreEntitySet="AccessControl" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="AccessControl">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_AccessControl_was_CreatedBy
    A: ZeroOrMore AccessControl as AccessControl
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_AccessControl_was_CreatedBy"
                           TypeName="Model.FK_AccessControl_was_CreatedBy"
                           StoreEntitySet="AccessControl" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="AccessControl">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Assembly_was_ChangedBy
    A: ZeroOrMore Assembly as Assembly
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Assembly_was_ChangedBy"
                           TypeName="Model.FK_Assembly_was_ChangedBy"
                           StoreEntitySet="Assembly" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="Assembly">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Assembly_was_CreatedBy
    A: ZeroOrMore Assembly as Assembly
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Assembly_was_CreatedBy"
                           TypeName="Model.FK_Assembly_was_CreatedBy"
                           StoreEntitySet="Assembly" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="Assembly">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Auftrag_ChangedBy_ChangedBy
    A: ZeroOrMore Auftrag as Auftrag
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Auftrag_ChangedBy_ChangedBy"
                           TypeName="Model.FK_Auftrag_ChangedBy_ChangedBy"
                           StoreEntitySet="Auftrag" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="Auftrag">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Auftrag_CreatedBy_CreatedBy
    A: ZeroOrMore Auftrag as Auftrag
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Auftrag_CreatedBy_CreatedBy"
                           TypeName="Model.FK_Auftrag_CreatedBy_CreatedBy"
                           StoreEntitySet="Auftrag" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="Auftrag">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Auftrag_has_Kunde
    A: ZeroOrMore Auftrag as Auftrag
    B: ZeroOrOne Kunde as Kunde
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Auftrag_has_Kunde"
                           TypeName="Model.FK_Auftrag_has_Kunde"
                           StoreEntitySet="Auftrag" >
      <EndProperty Name="Kunde">
        <ScalarProperty Name="ID" ColumnName="fk_Kunde"/>
      </EndProperty>
      <EndProperty Name="Auftrag">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Kunde" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Auftrag_has_Mitarbeiter
    A: ZeroOrMore Auftrag as Auftrag
    B: ZeroOrOne Mitarbeiter as Mitarbeiter
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Auftrag_has_Mitarbeiter"
                           TypeName="Model.FK_Auftrag_has_Mitarbeiter"
                           StoreEntitySet="Auftrag" >
      <EndProperty Name="Mitarbeiter">
        <ScalarProperty Name="ID" ColumnName="fk_Mitarbeiter"/>
      </EndProperty>
      <EndProperty Name="Auftrag">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Mitarbeiter" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_BaseObjectClass_has_SubClasses
    A: ZeroOrOne ObjectClass as BaseObjectClass
    B: ZeroOrMore ObjectClass as SubClasses
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_BaseObjectClass_has_SubClasses"
                           TypeName="Model.FK_BaseObjectClass_has_SubClasses"
                           StoreEntitySet="ObjectClass" >
      <EndProperty Name="BaseObjectClass">
        <ScalarProperty Name="ID" ColumnName="fk_BaseObjectClass"/>
      </EndProperty>
      <EndProperty Name="SubClasses">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_BaseObjectClass" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_BaseParameter_was_ChangedBy
    A: ZeroOrMore BaseParameter as BaseParameter
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_BaseParameter_was_ChangedBy"
                           TypeName="Model.FK_BaseParameter_was_ChangedBy"
                           StoreEntitySet="BaseParameter" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="BaseParameter">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_BaseParameter_was_CreatedBy
    A: ZeroOrMore BaseParameter as BaseParameter
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_BaseParameter_was_CreatedBy"
                           TypeName="Model.FK_BaseParameter_was_CreatedBy"
                           StoreEntitySet="BaseParameter" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="BaseParameter">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_BaseProperty_has_Module
    A: ZeroOrMore Property as BaseProperty
    B: One Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_BaseProperty_has_Module"
                           TypeName="Model.FK_BaseProperty_has_Module"
                           StoreEntitySet="Property" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="BaseProperty">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_CalculatedReference_references_ReferencedClass
    A: ZeroOrMore CalculatedObjectReferenceProperty as CalculatedReference
    B: One ObjectClass as ReferencedClass
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_CalculatedReference_references_ReferencedClass"
                           TypeName="Model.FK_CalculatedReference_references_ReferencedClass"
                           StoreEntitySet="CalculatedObjectReferenceProperty" >
      <EndProperty Name="ReferencedClass">
        <ScalarProperty Name="ID" ColumnName="fk_ReferencedClass"/>
      </EndProperty>
      <EndProperty Name="CalculatedReference">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ReferencedClass" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Child_has_Parent
    A: ZeroOrMore TypeRef as Child
    B: ZeroOrOne TypeRef as Parent
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Child_has_Parent"
                           TypeName="Model.FK_Child_has_Parent"
                           StoreEntitySet="TypeRef" >
      <EndProperty Name="Parent">
        <ScalarProperty Name="ID" ColumnName="fk_Parent"/>
      </EndProperty>
      <EndProperty Name="Child">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Parent" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ClrObjectParameter_isOf_Type
    A: ZeroOrMore CLRObjectParameter as ClrObjectParameter
    B: One TypeRef as Type
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_ClrObjectParameter_isOf_Type"
                           TypeName="Model.FK_ClrObjectParameter_isOf_Type"
                           StoreEntitySet="CLRObjectParameter" >
      <EndProperty Name="Type">
        <ScalarProperty Name="ID" ColumnName="fk_Type"/>
      </EndProperty>
      <EndProperty Name="ClrObjectParameter">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Type" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_CompoundObjectProperty_has_CompoundObjectDefinition
    A: ZeroOrMore CompoundObjectProperty as CompoundObjectProperty
    B: One CompoundObject as CompoundObjectDefinition
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_CompoundObjectProperty_has_CompoundObjectDefinition"
                           TypeName="Model.FK_CompoundObjectProperty_has_CompoundObjectDefinition"
                           StoreEntitySet="CompoundObjectProperty" >
      <EndProperty Name="CompoundObjectDefinition">
        <ScalarProperty Name="ID" ColumnName="fk_CompoundObjectDefinition"/>
      </EndProperty>
      <EndProperty Name="CompoundObjectProperty">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CompoundObjectDefinition" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ConstrainedProperty_has_Constraints
    A: One Property as ConstrainedProperty
    B: ZeroOrMore Constraint as Constraints
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_ConstrainedProperty_has_Constraints"
                           TypeName="Model.FK_ConstrainedProperty_has_Constraints"
                           StoreEntitySet="Constraint" >
      <EndProperty Name="ConstrainedProperty">
        <ScalarProperty Name="ID" ColumnName="fk_ConstrainedProperty"/>
      </EndProperty>
      <EndProperty Name="Constraints">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ConstrainedProperty" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Constraint_on_Constrained
    A: ZeroOrMore InstanceConstraint as Constraint
    B: ZeroOrOne ObjectClass as Constrained
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Constraint_on_Constrained"
                           TypeName="Model.FK_Constraint_on_Constrained"
                           StoreEntitySet="InstanceConstraint" >
      <EndProperty Name="Constrained">
        <ScalarProperty Name="ID" ColumnName="fk_Constrained"/>
      </EndProperty>
      <EndProperty Name="Constraint">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Constrained" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Constraint_was_ChangedBy
    A: ZeroOrMore Constraint as Constraint
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Constraint_was_ChangedBy"
                           TypeName="Model.FK_Constraint_was_ChangedBy"
                           StoreEntitySet="Constraint" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="Constraint">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Constraint_was_CreatedBy
    A: ZeroOrMore Constraint as Constraint
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Constraint_was_CreatedBy"
                           TypeName="Model.FK_Constraint_was_CreatedBy"
                           StoreEntitySet="Constraint" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="Constraint">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Control_isof_Kind
    A: ZeroOrMore ViewDescriptor as Control
    B: One ControlKindClass as Kind
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Control_isof_Kind"
                           TypeName="Model.FK_Control_isof_Kind"
                           StoreEntitySet="ViewDescriptor" >
      <EndProperty Name="Kind">
        <ScalarProperty Name="ID" ColumnName="fk_Kind"/>
      </EndProperty>
      <EndProperty Name="Control">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Kind" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_DataType_has_DefaultIcon
    A: ZeroOrMore DataType as DataType
    B: ZeroOrOne Icon as DefaultIcon
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_DataType_has_DefaultIcon"
                           TypeName="Model.FK_DataType_has_DefaultIcon"
                           StoreEntitySet="DataType" >
      <EndProperty Name="DefaultIcon">
        <ScalarProperty Name="ID" ColumnName="fk_DefaultIcon"/>
      </EndProperty>
      <EndProperty Name="DataType">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_DefaultIcon" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_DataType_was_ChangedBy
    A: ZeroOrMore DataType as DataType
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_DataType_was_ChangedBy"
                           TypeName="Model.FK_DataType_was_ChangedBy"
                           StoreEntitySet="DataType" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="DataType">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_DataType_was_CreatedBy
    A: ZeroOrMore DataType as DataType
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_DataType_was_CreatedBy"
                           TypeName="Model.FK_DataType_was_CreatedBy"
                           StoreEntitySet="DataType" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="DataType">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_DefaultPropertyValue_was_ChangedBy
    A: ZeroOrMore DefaultPropertyValue as DefaultPropertyValue
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_DefaultPropertyValue_was_ChangedBy"
                           TypeName="Model.FK_DefaultPropertyValue_was_ChangedBy"
                           StoreEntitySet="DefaultPropertyValue" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="DefaultPropertyValue">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_DefaultPropertyValue_was_CreatedBy
    A: ZeroOrMore DefaultPropertyValue as DefaultPropertyValue
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_DefaultPropertyValue_was_CreatedBy"
                           TypeName="Model.FK_DefaultPropertyValue_was_CreatedBy"
                           StoreEntitySet="DefaultPropertyValue" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="DefaultPropertyValue">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Descriptor_has_PresentableModelRef
    A: ZeroOrMore PresentableModelDescriptor as Descriptor
    B: One TypeRef as PresentableModelRef
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Descriptor_has_PresentableModelRef"
                           TypeName="Model.FK_Descriptor_has_PresentableModelRef"
                           StoreEntitySet="PresentableModelDescriptor" >
      <EndProperty Name="PresentableModelRef">
        <ScalarProperty Name="ID" ColumnName="fk_PresentableModelRef"/>
      </EndProperty>
      <EndProperty Name="Descriptor">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_PresentableModelRef" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Document_was_ChangedBy
    A: ZeroOrMore Blob as Document
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Document_was_ChangedBy"
                           TypeName="Model.FK_Document_was_ChangedBy"
                           StoreEntitySet="Blob" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="Document">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Document_was_CreatedBy
    A: ZeroOrMore Blob as Document
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Document_was_CreatedBy"
                           TypeName="Model.FK_Document_was_CreatedBy"
                           StoreEntitySet="Blob" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="Document">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Ein_Fragebogen_enthaelt_gute_Antworten
    A: One Fragebogen as Ein_Fragebogen
    B: ZeroOrMore Antwort as gute_Antworten
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Ein_Fragebogen_enthaelt_gute_Antworten"
                           TypeName="Model.FK_Ein_Fragebogen_enthaelt_gute_Antworten"
                           StoreEntitySet="Antwort" >
      <EndProperty Name="Ein_Fragebogen">
        <ScalarProperty Name="ID" ColumnName="fk_Ein_Fragebogen"/>
      </EndProperty>
      <EndProperty Name="gute_Antworten">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Ein_Fragebogen" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Enumeration_has_EnumerationEntries
    A: One Enumeration as Enumeration
    B: ZeroOrMore EnumerationEntry as EnumerationEntries
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Enumeration_has_EnumerationEntries"
                           TypeName="Model.FK_Enumeration_has_EnumerationEntries"
                           StoreEntitySet="EnumerationEntry" >
      <EndProperty Name="Enumeration">
        <ScalarProperty Name="ID" ColumnName="fk_Enumeration"/>
      </EndProperty>
      <EndProperty Name="EnumerationEntries">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Enumeration" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_EnumerationEntry_was_ChangedBy
    A: ZeroOrMore EnumerationEntry as EnumerationEntry
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_EnumerationEntry_was_ChangedBy"
                           TypeName="Model.FK_EnumerationEntry_was_ChangedBy"
                           StoreEntitySet="EnumerationEntry" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="EnumerationEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_EnumerationEntry_was_CreatedBy
    A: ZeroOrMore EnumerationEntry as EnumerationEntry
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_EnumerationEntry_was_CreatedBy"
                           TypeName="Model.FK_EnumerationEntry_was_CreatedBy"
                           StoreEntitySet="EnumerationEntry" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="EnumerationEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_EnumerationProperty_has_Enumeration
    A: ZeroOrMore EnumerationProperty as EnumerationProperty
    B: One Enumeration as Enumeration
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_EnumerationProperty_has_Enumeration"
                           TypeName="Model.FK_EnumerationProperty_has_Enumeration"
                           StoreEntitySet="EnumerationProperty" >
      <EndProperty Name="Enumeration">
        <ScalarProperty Name="ID" ColumnName="fk_Enumeration"/>
      </EndProperty>
      <EndProperty Name="EnumerationProperty">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Enumeration" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Exam_happens_in_Semester
    A: ZeroOrMore Exam as Exam
    B: One Semester as Semester
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Exam_happens_in_Semester"
                           TypeName="Model.FK_Exam_happens_in_Semester"
                           StoreEntitySet="Exam" >
      <EndProperty Name="Semester">
        <ScalarProperty Name="ID" ColumnName="fk_Semester"/>
      </EndProperty>
      <EndProperty Name="Exam">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Semester" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Excercise_happens_in_Semester
    A: ZeroOrMore Exercise as Excercise
    B: One Semester as Semester
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Excercise_happens_in_Semester"
                           TypeName="Model.FK_Excercise_happens_in_Semester"
                           StoreEntitySet="Exercise" >
      <EndProperty Name="Semester">
        <ScalarProperty Name="ID" ColumnName="fk_Semester"/>
      </EndProperty>
      <EndProperty Name="Excercise">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Semester" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_File_has_Blob
    A: ZeroOrMore File as File
    B: One Blob as Blob
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_File_has_Blob"
                           TypeName="Model.FK_File_has_Blob"
                           StoreEntitySet="File" >
      <EndProperty Name="Blob">
        <ScalarProperty Name="ID" ColumnName="fk_Blob"/>
      </EndProperty>
      <EndProperty Name="File">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Blob" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_File_was_ChangedBy
    A: ZeroOrMore File as File
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_File_was_ChangedBy"
                           TypeName="Model.FK_File_was_ChangedBy"
                           StoreEntitySet="File" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="File">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_File_was_CreatedBy
    A: ZeroOrMore File as File
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_File_was_CreatedBy"
                           TypeName="Model.FK_File_was_CreatedBy"
                           StoreEntitySet="File" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="File">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Group_has_Module
    A: ZeroOrMore Group as Group
    B: One Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Group_has_Module"
                           TypeName="Model.FK_Group_has_Module"
                           StoreEntitySet="Group" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="Group">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_GroupExcercise_passes_Excercise
    A: ZeroOrMore GroupExcercise as GroupExcercise
    B: One Exercise as Excercise
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_GroupExcercise_passes_Excercise"
                           TypeName="Model.FK_GroupExcercise_passes_Excercise"
                           StoreEntitySet="GroupExcercise" >
      <EndProperty Name="Excercise">
        <ScalarProperty Name="ID" ColumnName="fk_Excercise"/>
      </EndProperty>
      <EndProperty Name="GroupExcercise">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Excercise" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_GroupMembership_has_Group
    A: ZeroOrMore GroupMembership as GroupMembership
    B: One Group as Group
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_GroupMembership_has_Group"
                           TypeName="Model.FK_GroupMembership_has_Group"
                           StoreEntitySet="GroupMembership" >
      <EndProperty Name="Group">
        <ScalarProperty Name="ID" ColumnName="fk_Group"/>
      </EndProperty>
      <EndProperty Name="GroupMembership">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Group" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Icon_has_Module
    A: ZeroOrMore Icon as Icon
    B: One Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Icon_has_Module"
                           TypeName="Model.FK_Icon_has_Module"
                           StoreEntitySet="Icon" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="Icon">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_InvokeOnObjectClass_has_MethodInvocations
    A: One DataType as InvokeOnObjectClass
    B: ZeroOrMore MethodInvocation as MethodInvocations
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_InvokeOnObjectClass_has_MethodInvocations"
                           TypeName="Model.FK_InvokeOnObjectClass_has_MethodInvocations"
                           StoreEntitySet="MethodInvocation" >
      <EndProperty Name="InvokeOnObjectClass">
        <ScalarProperty Name="ID" ColumnName="fk_InvokeOnObjectClass"/>
      </EndProperty>
      <EndProperty Name="MethodInvocations">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_InvokeOnObjectClass" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_InvokeOnProperty_has_Invocations
    A: One Property as InvokeOnProperty
    B: ZeroOrMore PropertyInvocation as Invocations
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_InvokeOnProperty_has_Invocations"
                           TypeName="Model.FK_InvokeOnProperty_has_Invocations"
                           StoreEntitySet="PropertyInvocation" >
      <EndProperty Name="InvokeOnProperty">
        <ScalarProperty Name="ID" ColumnName="fk_InvokeOnProperty"/>
      </EndProperty>
      <EndProperty Name="Invocations">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_InvokeOnProperty" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Kunde_was_ChangedBy
    A: ZeroOrMore Kunde as Kunde
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Kunde_was_ChangedBy"
                           TypeName="Model.FK_Kunde_was_ChangedBy"
                           StoreEntitySet="Kunde" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="Kunde">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Kunde_was_CreatedBy
    A: ZeroOrMore Kunde as Kunde
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Kunde_was_CreatedBy"
                           TypeName="Model.FK_Kunde_was_CreatedBy"
                           StoreEntitySet="Kunde" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="Kunde">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_List_has_ItemKind
    A: ZeroOrMore StringListKind as List
    B: One ControlKindClass as ItemKind
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_List_has_ItemKind"
                           TypeName="Model.FK_List_has_ItemKind"
                           StoreEntitySet="StringListKind" >
      <EndProperty Name="ItemKind">
        <ScalarProperty Name="ID" ColumnName="fk_ItemKind"/>
      </EndProperty>
      <EndProperty Name="List">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ItemKind" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Method_has_MethodInvocations
    A: One Method as Method
    B: ZeroOrMore MethodInvocation as MethodInvocations
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Method_has_MethodInvocations"
                           TypeName="Model.FK_Method_has_MethodInvocations"
                           StoreEntitySet="MethodInvocation" >
      <EndProperty Name="Method">
        <ScalarProperty Name="ID" ColumnName="fk_Method"/>
      </EndProperty>
      <EndProperty Name="MethodInvocations">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Method" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Method_has_Module
    A: ZeroOrMore Method as Method
    B: One Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Method_has_Module"
                           TypeName="Model.FK_Method_has_Module"
                           StoreEntitySet="Method" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="Method">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Method_has_Parameter
    A: One Method as Method
    B: ZeroOrMore BaseParameter as Parameter
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Method_has_Parameter"
                           TypeName="Model.FK_Method_has_Parameter"
                           StoreEntitySet="BaseParameter" >
      <EndProperty Name="Method">
        <ScalarProperty Name="ID" ColumnName="fk_Method"/>
      </EndProperty>
      <EndProperty Name="Parameter">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Method" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Method_was_ChangedBy
    A: ZeroOrMore Method as Method
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Method_was_ChangedBy"
                           TypeName="Model.FK_Method_was_ChangedBy"
                           StoreEntitySet="Method" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="Method">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Method_was_CreatedBy
    A: ZeroOrMore Method as Method
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Method_was_CreatedBy"
                           TypeName="Model.FK_Method_was_CreatedBy"
                           StoreEntitySet="Method" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="Method">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_MethodInvocation_has_Implementor
    A: ZeroOrMore MethodInvocation as MethodInvocation
    B: One TypeRef as Implementor
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_MethodInvocation_has_Implementor"
                           TypeName="Model.FK_MethodInvocation_has_Implementor"
                           StoreEntitySet="MethodInvocation" >
      <EndProperty Name="Implementor">
        <ScalarProperty Name="ID" ColumnName="fk_Implementor"/>
      </EndProperty>
      <EndProperty Name="MethodInvocation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Implementor" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_MethodInvocation_has_Module
    A: ZeroOrMore MethodInvocation as MethodInvocation
    B: One Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_MethodInvocation_has_Module"
                           TypeName="Model.FK_MethodInvocation_has_Module"
                           StoreEntitySet="MethodInvocation" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="MethodInvocation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_MethodInvocation_was_ChangedBy
    A: ZeroOrMore MethodInvocation as MethodInvocation
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_MethodInvocation_was_ChangedBy"
                           TypeName="Model.FK_MethodInvocation_was_ChangedBy"
                           StoreEntitySet="MethodInvocation" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="MethodInvocation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_MethodInvocation_was_CreatedBy
    A: ZeroOrMore MethodInvocation as MethodInvocation
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_MethodInvocation_was_CreatedBy"
                           TypeName="Model.FK_MethodInvocation_was_CreatedBy"
                           StoreEntitySet="MethodInvocation" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="MethodInvocation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Mitarbeiter_is_a_Identity
    A: ZeroOrOne Mitarbeiter as Mitarbeiter
    B: ZeroOrOne Identity as Identity
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Mitarbeiter_is_a_Identity"
                           TypeName="Model.FK_Mitarbeiter_is_a_Identity"
                           StoreEntitySet="Mitarbeiter" >
      <EndProperty Name="Identity">
        <ScalarProperty Name="ID" ColumnName="fk_Identity"/>
      </EndProperty>
      <EndProperty Name="Mitarbeiter">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Identity" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Mitarbeiter_was_ChangedBy
    A: ZeroOrMore Mitarbeiter as Mitarbeiter
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Mitarbeiter_was_ChangedBy"
                           TypeName="Model.FK_Mitarbeiter_was_ChangedBy"
                           StoreEntitySet="Mitarbeiter" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="Mitarbeiter">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Mitarbeiter_was_CreatedBy
    A: ZeroOrMore Mitarbeiter as Mitarbeiter
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Mitarbeiter_was_CreatedBy"
                           TypeName="Model.FK_Mitarbeiter_was_CreatedBy"
                           StoreEntitySet="Mitarbeiter" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="Mitarbeiter">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Module_contains_Assemblies
    A: One Module as Module
    B: ZeroOrMore Assembly as Assemblies
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Module_contains_Assemblies"
                           TypeName="Model.FK_Module_contains_Assemblies"
                           StoreEntitySet="Assembly" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="Assemblies">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Module_contains_DataTypes
    A: One Module as Module
    B: ZeroOrMore DataType as DataTypes
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Module_contains_DataTypes"
                           TypeName="Model.FK_Module_contains_DataTypes"
                           StoreEntitySet="DataType" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="DataTypes">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Module_has_Relation
    A: One Module as Module
    B: ZeroOrMore Relation as Relation
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Module_has_Relation"
                           TypeName="Model.FK_Module_has_Relation"
                           StoreEntitySet="Relation" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="Relation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Module_was_ChangedBy
    A: ZeroOrMore Module as Module
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Module_was_ChangedBy"
                           TypeName="Model.FK_Module_was_ChangedBy"
                           StoreEntitySet="Module" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Module_was_CreatedBy
    A: ZeroOrMore Module as Module
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Module_was_CreatedBy"
                           TypeName="Model.FK_Module_was_CreatedBy"
                           StoreEntitySet="Module" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_MuhBlah_List_Role_hasOther_TestCustomObjects_Role
    A: ZeroOrMore Muhblah as MuhBlah_List_Role
    B: ZeroOrOne TestCustomObject as TestCustomObjects_Role
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_MuhBlah_List_Role_hasOther_TestCustomObjects_Role"
                           TypeName="Model.FK_MuhBlah_List_Role_hasOther_TestCustomObjects_Role"
                           StoreEntitySet="Muhblah" >
      <EndProperty Name="TestCustomObjects_Role">
        <ScalarProperty Name="ID" ColumnName="fk_TestCustomObjects_Role"/>
      </EndProperty>
      <EndProperty Name="MuhBlah_List_Role">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_TestCustomObjects_Role" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_MuhBlah_One_Role_loves_TestCustomObjects_One_Role
    A: ZeroOrOne Muhblah as MuhBlah_One_Role
    B: ZeroOrOne TestCustomObject as TestCustomObjects_One_Role
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_MuhBlah_One_Role_loves_TestCustomObjects_One_Role"
                           TypeName="Model.FK_MuhBlah_One_Role_loves_TestCustomObjects_One_Role"
                           StoreEntitySet="Muhblah" >
      <EndProperty Name="TestCustomObjects_One_Role">
        <ScalarProperty Name="ID" ColumnName="fk_TestCustomObjects_One_Role"/>
      </EndProperty>
      <EndProperty Name="MuhBlah_One_Role">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_TestCustomObjects_One_Role" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_MuhBlah_Role_has_TestCustomObjects_List_Role
    A: ZeroOrOne Muhblah as MuhBlah_Role
    B: ZeroOrMore TestCustomObject as TestCustomObjects_List_Role
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_MuhBlah_Role_has_TestCustomObjects_List_Role"
                           TypeName="Model.FK_MuhBlah_Role_has_TestCustomObjects_List_Role"
                           StoreEntitySet="TestCustomObject" >
      <EndProperty Name="MuhBlah_Role">
        <ScalarProperty Name="ID" ColumnName="fk_MuhBlah_Role"/>
      </EndProperty>
      <EndProperty Name="TestCustomObjects_List_Role">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_MuhBlah_Role" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ObjectClass_has_AccessControlList
    A: One ObjectClass as ObjectClass
    B: ZeroOrMore AccessControl as AccessControlList
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_ObjectClass_has_AccessControlList"
                           TypeName="Model.FK_ObjectClass_has_AccessControlList"
                           StoreEntitySet="AccessControl" >
      <EndProperty Name="ObjectClass">
        <ScalarProperty Name="ID" ColumnName="fk_ObjectClass"/>
      </EndProperty>
      <EndProperty Name="AccessControlList">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ObjectClass" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ObjectClass_has_Methods
    A: One DataType as ObjectClass
    B: ZeroOrMore Method as Methods
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_ObjectClass_has_Methods"
                           TypeName="Model.FK_ObjectClass_has_Methods"
                           StoreEntitySet="Method" >
      <EndProperty Name="ObjectClass">
        <ScalarProperty Name="ID" ColumnName="fk_ObjectClass"/>
      </EndProperty>
      <EndProperty Name="Methods">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ObjectClass" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ObjectClass_has_Properties
    A: One DataType as ObjectClass
    B: ZeroOrMore Property as Properties
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_ObjectClass_has_Properties"
                           TypeName="Model.FK_ObjectClass_has_Properties"
                           StoreEntitySet="Property" >
      <EndProperty Name="ObjectClass">
        <ScalarProperty Name="ID" ColumnName="fk_ObjectClass"/>
      </EndProperty>
      <EndProperty Name="Properties">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ObjectClass" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ObjectParameter_has_DataType
    A: ZeroOrMore ObjectParameter as ObjectParameter
    B: One DataType as DataType
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_ObjectParameter_has_DataType"
                           TypeName="Model.FK_ObjectParameter_has_DataType"
                           StoreEntitySet="ObjectParameter" >
      <EndProperty Name="DataType">
        <ScalarProperty Name="ID" ColumnName="fk_DataType"/>
      </EndProperty>
      <EndProperty Name="ObjectParameter">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_DataType" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ObjectReferencePlaceholderProperty_ofType_ReferencedObjectClass
    A: ZeroOrMore ObjectReferencePlaceholderProperty as ObjectReferencePlaceholderProperty
    B: One ObjectClass as ReferencedObjectClass
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_ObjectReferencePlaceholderProperty_ofType_ReferencedObjectClass"
                           TypeName="Model.FK_ObjectReferencePlaceholderProperty_ofType_ReferencedObjectClass"
                           StoreEntitySet="ObjectReferencePlaceholderProperty" >
      <EndProperty Name="ReferencedObjectClass">
        <ScalarProperty Name="ID" ColumnName="fk_ReferencedObjectClass"/>
      </EndProperty>
      <EndProperty Name="ObjectReferencePlaceholderProperty">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ReferencedObjectClass" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_PresenceRecord_has_Mitarbeiter
    A: ZeroOrMore PresenceRecord as PresenceRecord
    B: One Mitarbeiter as Mitarbeiter
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_PresenceRecord_has_Mitarbeiter"
                           TypeName="Model.FK_PresenceRecord_has_Mitarbeiter"
                           StoreEntitySet="PresenceRecord" >
      <EndProperty Name="Mitarbeiter">
        <ScalarProperty Name="ID" ColumnName="fk_Mitarbeiter"/>
      </EndProperty>
      <EndProperty Name="PresenceRecord">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Mitarbeiter" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Presentable_has_DefaultKind
    A: ZeroOrOne PresentableModelDescriptor as Presentable
    B: ZeroOrOne ControlKind as DefaultKind
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Presentable_has_DefaultKind"
                           TypeName="Model.FK_Presentable_has_DefaultKind"
                           StoreEntitySet="PresentableModelDescriptor" >
      <EndProperty Name="DefaultKind">
        <ScalarProperty Name="ID" ColumnName="fk_DefaultKind"/>
      </EndProperty>
      <EndProperty Name="Presentable">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_DefaultKind" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Presentable_has_DefaultPresentableModelDescriptor
    A: ZeroOrMore ObjectClass as Presentable
    B: One PresentableModelDescriptor as DefaultPresentableModelDescriptor
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Presentable_has_DefaultPresentableModelDescriptor"
                           TypeName="Model.FK_Presentable_has_DefaultPresentableModelDescriptor"
                           StoreEntitySet="ObjectClass" >
      <EndProperty Name="DefaultPresentableModelDescriptor">
        <ScalarProperty Name="ID" ColumnName="fk_DefaultPresentableModelDescriptor"/>
      </EndProperty>
      <EndProperty Name="Presentable">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_DefaultPresentableModelDescriptor" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_PresentableModelDescriptor_displayedInGridBy_DefaultGridCellKind
    A: ZeroOrMore PresentableModelDescriptor as PresentableModelDescriptor
    B: ZeroOrOne ControlKind as DefaultGridCellKind
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_PresentableModelDescriptor_displayedInGridBy_DefaultGridCellKind"
                           TypeName="Model.FK_PresentableModelDescriptor_displayedInGridBy_DefaultGridCellKind"
                           StoreEntitySet="PresentableModelDescriptor" >
      <EndProperty Name="DefaultGridCellKind">
        <ScalarProperty Name="ID" ColumnName="fk_DefaultGridCellKind"/>
      </EndProperty>
      <EndProperty Name="PresentableModelDescriptor">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_DefaultGridCellKind" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_PresentableModelDescriptor_has_Module
    A: ZeroOrMore PresentableModelDescriptor as PresentableModelDescriptor
    B: One Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_PresentableModelDescriptor_has_Module"
                           TypeName="Model.FK_PresentableModelDescriptor_has_Module"
                           StoreEntitySet="PresentableModelDescriptor" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="PresentableModelDescriptor">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Projekt_has_Auftraege
    A: ZeroOrOne Projekt as Projekt
    B: ZeroOrMore Auftrag as Auftraege
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Projekt_has_Auftraege"
                           TypeName="Model.FK_Projekt_has_Auftraege"
                           StoreEntitySet="Auftrag" >
      <EndProperty Name="Projekt">
        <ScalarProperty Name="ID" ColumnName="fk_Projekt"/>
      </EndProperty>
      <EndProperty Name="Auftraege">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Projekt" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Projekt_has_Tasks
    A: One Projekt as Projekt
    B: ZeroOrMore Task as Tasks
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Projekt_has_Tasks"
                           TypeName="Model.FK_Projekt_has_Tasks"
                           StoreEntitySet="Task" >
      <EndProperty Name="Projekt">
        <ScalarProperty Name="ID" ColumnName="fk_Projekt"/>
      </EndProperty>
      <EndProperty Name="Tasks">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Projekt" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Projekt_was_ChangedBy
    A: ZeroOrMore Projekt as Projekt
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Projekt_was_ChangedBy"
                           TypeName="Model.FK_Projekt_was_ChangedBy"
                           StoreEntitySet="Projekt" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="Projekt">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Projekt_was_CreatedBy
    A: ZeroOrMore Projekt as Projekt
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Projekt_was_CreatedBy"
                           TypeName="Model.FK_Projekt_was_CreatedBy"
                           StoreEntitySet="Projekt" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="Projekt">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Property_has_DefaultValue
    A: One Property as Property
    B: ZeroOrOne DefaultPropertyValue as DefaultValue
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Property_has_DefaultValue"
                           TypeName="Model.FK_Property_has_DefaultValue"
                           StoreEntitySet="DefaultPropertyValue" >
      <EndProperty Name="Property">
        <ScalarProperty Name="ID" ColumnName="fk_Property"/>
      </EndProperty>
      <EndProperty Name="DefaultValue">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Property" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Property_has_ValueModelDescriptor
    A: ZeroOrMore Property as Property
    B: One PresentableModelDescriptor as ValueModelDescriptor
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Property_has_ValueModelDescriptor"
                           TypeName="Model.FK_Property_has_ValueModelDescriptor"
                           StoreEntitySet="Property" >
      <EndProperty Name="ValueModelDescriptor">
        <ScalarProperty Name="ID" ColumnName="fk_ValueModelDescriptor"/>
      </EndProperty>
      <EndProperty Name="Property">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ValueModelDescriptor" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Property_was_ChangedBy
    A: ZeroOrMore Property as Property
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Property_was_ChangedBy"
                           TypeName="Model.FK_Property_was_ChangedBy"
                           StoreEntitySet="Property" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="Property">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Property_was_CreatedBy
    A: ZeroOrMore Property as Property
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Property_was_CreatedBy"
                           TypeName="Model.FK_Property_was_CreatedBy"
                           StoreEntitySet="Property" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="Property">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_PropertyInvocation_has_Implementor
    A: ZeroOrMore PropertyInvocation as PropertyInvocation
    B: One TypeRef as Implementor
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_PropertyInvocation_has_Implementor"
                           TypeName="Model.FK_PropertyInvocation_has_Implementor"
                           StoreEntitySet="PropertyInvocation" >
      <EndProperty Name="Implementor">
        <ScalarProperty Name="ID" ColumnName="fk_Implementor"/>
      </EndProperty>
      <EndProperty Name="PropertyInvocation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Implementor" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_PropertyInvocation_was_ChangedBy
    A: ZeroOrMore PropertyInvocation as PropertyInvocation
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_PropertyInvocation_was_ChangedBy"
                           TypeName="Model.FK_PropertyInvocation_was_ChangedBy"
                           StoreEntitySet="PropertyInvocation" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="PropertyInvocation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_PropertyInvocation_was_CreatedBy
    A: ZeroOrMore PropertyInvocation as PropertyInvocation
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_PropertyInvocation_was_CreatedBy"
                           TypeName="Model.FK_PropertyInvocation_was_CreatedBy"
                           StoreEntitySet="PropertyInvocation" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="PropertyInvocation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Relation_hasA_A
    A: One Relation as Relation
    B: One RelationEnd as A
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Relation_hasA_A"
                           TypeName="Model.FK_Relation_hasA_A"
                           StoreEntitySet="Relation" >
      <EndProperty Name="A">
        <ScalarProperty Name="ID" ColumnName="fk_A"/>
      </EndProperty>
      <EndProperty Name="Relation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_A" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Relation_hasB_B
    A: One Relation as Relation
    B: One RelationEnd as B
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Relation_hasB_B"
                           TypeName="Model.FK_Relation_hasB_B"
                           StoreEntitySet="Relation" >
      <EndProperty Name="B">
        <ScalarProperty Name="ID" ColumnName="fk_B"/>
      </EndProperty>
      <EndProperty Name="Relation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_B" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Relation_was_ChangedBy
    A: ZeroOrMore Relation as Relation
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Relation_was_ChangedBy"
                           TypeName="Model.FK_Relation_was_ChangedBy"
                           StoreEntitySet="Relation" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="Relation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Relation_was_CreatedBy
    A: ZeroOrMore Relation as Relation
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Relation_was_CreatedBy"
                           TypeName="Model.FK_Relation_was_CreatedBy"
                           StoreEntitySet="Relation" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="Relation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_RelationEnd_has_Navigator
    A: ZeroOrOne RelationEnd as RelationEnd
    B: ZeroOrOne ObjectReferenceProperty as Navigator
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_RelationEnd_has_Navigator"
                           TypeName="Model.FK_RelationEnd_has_Navigator"
                           StoreEntitySet="RelationEnd" >
      <EndProperty Name="Navigator">
        <ScalarProperty Name="ID" ColumnName="fk_Navigator"/>
      </EndProperty>
      <EndProperty Name="RelationEnd">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Navigator" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_RelationEnd_has_Type
    A: ZeroOrMore RelationEnd as RelationEnd
    B: One ObjectClass as Type
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_RelationEnd_has_Type"
                           TypeName="Model.FK_RelationEnd_has_Type"
                           StoreEntitySet="RelationEnd" >
      <EndProperty Name="Type">
        <ScalarProperty Name="ID" ColumnName="fk_Type"/>
      </EndProperty>
      <EndProperty Name="RelationEnd">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Type" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_RelationEnd_was_ChangedBy
    A: ZeroOrMore RelationEnd as RelationEnd
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_RelationEnd_was_ChangedBy"
                           TypeName="Model.FK_RelationEnd_was_ChangedBy"
                           StoreEntitySet="RelationEnd" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="RelationEnd">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_RelationEnd_was_CreatedBy
    A: ZeroOrMore RelationEnd as RelationEnd
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_RelationEnd_was_CreatedBy"
                           TypeName="Model.FK_RelationEnd_was_CreatedBy"
                           StoreEntitySet="RelationEnd" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="RelationEnd">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Student_füllt_aus_Testbogen
    A: One TestStudent as Student
    B: ZeroOrOne Fragebogen as Testbogen
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Student_füllt_aus_Testbogen"
                           TypeName="Model.FK_Student_füllt_aus_Testbogen"
                           StoreEntitySet="Fragebogen" >
      <EndProperty Name="Student">
        <ScalarProperty Name="ID" ColumnName="fk_Student"/>
      </EndProperty>
      <EndProperty Name="Testbogen">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Student" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_StudentExam_passes_Exam
    A: ZeroOrMore StudentExam as StudentExam
    B: One Exam as Exam
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_StudentExam_passes_Exam"
                           TypeName="Model.FK_StudentExam_passes_Exam"
                           StoreEntitySet="StudentExam" >
      <EndProperty Name="Exam">
        <ScalarProperty Name="ID" ColumnName="fk_Exam"/>
      </EndProperty>
      <EndProperty Name="StudentExam">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Exam" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_StudentExam_writtenby_Student
    A: ZeroOrMore StudentExam as StudentExam
    B: One Student as Student
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_StudentExam_writtenby_Student"
                           TypeName="Model.FK_StudentExam_writtenby_Student"
                           StoreEntitySet="StudentExam" >
      <EndProperty Name="Student">
        <ScalarProperty Name="ID" ColumnName="fk_Student"/>
      </EndProperty>
      <EndProperty Name="StudentExam">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Student" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Task_was_ChangedBy
    A: ZeroOrMore Task as Task
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Task_was_ChangedBy"
                           TypeName="Model.FK_Task_was_ChangedBy"
                           StoreEntitySet="Task" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="Task">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Task_was_CreatedBy
    A: ZeroOrMore Task as Task
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Task_was_CreatedBy"
                           TypeName="Model.FK_Task_was_CreatedBy"
                           StoreEntitySet="Task" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="Task">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Template_has_DisplayedTypeAssembly
    A: ZeroOrMore Template as Template
    B: ZeroOrOne Assembly as DisplayedTypeAssembly
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Template_has_DisplayedTypeAssembly"
                           TypeName="Model.FK_Template_has_DisplayedTypeAssembly"
                           StoreEntitySet="Template" >
      <EndProperty Name="DisplayedTypeAssembly">
        <ScalarProperty Name="ID" ColumnName="fk_DisplayedTypeAssembly"/>
      </EndProperty>
      <EndProperty Name="Template">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_DisplayedTypeAssembly" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Template_has_VisualTree
    A: ZeroOrMore Template as Template
    B: ZeroOrOne Visual as VisualTree
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Template_has_VisualTree"
                           TypeName="Model.FK_Template_has_VisualTree"
                           StoreEntitySet="Template" >
      <EndProperty Name="VisualTree">
        <ScalarProperty Name="ID" ColumnName="fk_VisualTree"/>
      </EndProperty>
      <EndProperty Name="Template">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_VisualTree" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_TestObjClass_has_ObjectProp
    A: ZeroOrMore TestObjClass as TestObjClass
    B: ZeroOrOne Kunde as ObjectProp
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_TestObjClass_has_ObjectProp"
                           TypeName="Model.FK_TestObjClass_has_ObjectProp"
                           StoreEntitySet="TestObjClass" >
      <EndProperty Name="ObjectProp">
        <ScalarProperty Name="ID" ColumnName="fk_ObjectProp"/>
      </EndProperty>
      <EndProperty Name="TestObjClass">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ObjectProp" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_TypeRef_has_Assembly
    A: ZeroOrMore TypeRef as TypeRef
    B: One Assembly as Assembly
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_TypeRef_has_Assembly"
                           TypeName="Model.FK_TypeRef_has_Assembly"
                           StoreEntitySet="TypeRef" >
      <EndProperty Name="Assembly">
        <ScalarProperty Name="ID" ColumnName="fk_Assembly"/>
      </EndProperty>
      <EndProperty Name="TypeRef">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Assembly" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_TypeRef_was_ChangedBy
    A: ZeroOrMore TypeRef as TypeRef
    B: ZeroOrOne Identity as ChangedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_TypeRef_was_ChangedBy"
                           TypeName="Model.FK_TypeRef_was_ChangedBy"
                           StoreEntitySet="TypeRef" >
      <EndProperty Name="ChangedBy">
        <ScalarProperty Name="ID" ColumnName="fk_ChangedBy"/>
      </EndProperty>
      <EndProperty Name="TypeRef">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ChangedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_TypeRef_was_CreatedBy
    A: ZeroOrMore TypeRef as TypeRef
    B: ZeroOrOne Identity as CreatedBy
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_TypeRef_was_CreatedBy"
                           TypeName="Model.FK_TypeRef_was_CreatedBy"
                           StoreEntitySet="TypeRef" >
      <EndProperty Name="CreatedBy">
        <ScalarProperty Name="ID" ColumnName="fk_CreatedBy"/>
      </EndProperty>
      <EndProperty Name="TypeRef">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_CreatedBy" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_View_has_ControlRef
    A: ZeroOrMore ViewDescriptor as View
    B: One TypeRef as ControlRef
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_View_has_ControlRef"
                           TypeName="Model.FK_View_has_ControlRef"
                           StoreEntitySet="ViewDescriptor" >
      <EndProperty Name="ControlRef">
        <ScalarProperty Name="ID" ColumnName="fk_ControlRef"/>
      </EndProperty>
      <EndProperty Name="View">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ControlRef" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ViewDescriptor_has_Module
    A: ZeroOrMore ViewDescriptor as ViewDescriptor
    B: One Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_ViewDescriptor_has_Module"
                           TypeName="Model.FK_ViewDescriptor_has_Module"
                           StoreEntitySet="ViewDescriptor" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="ViewDescriptor">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Visual_has_Method
    A: ZeroOrMore Visual as Visual
    B: ZeroOrOne Method as Method
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Visual_has_Method"
                           TypeName="Model.FK_Visual_has_Method"
                           StoreEntitySet="Visual" >
      <EndProperty Name="Method">
        <ScalarProperty Name="ID" ColumnName="fk_Method"/>
      </EndProperty>
      <EndProperty Name="Visual">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Method" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Visual_has_Property
    A: ZeroOrMore Visual as Visual
    B: ZeroOrOne Property as Property
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Visual_has_Property"
                           TypeName="Model.FK_Visual_has_Property"
                           StoreEntitySet="Visual" >
      <EndProperty Name="Property">
        <ScalarProperty Name="ID" ColumnName="fk_Property"/>
      </EndProperty>
      <EndProperty Name="Visual">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Property" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_WorkEffort_has_Mitarbeiter
    A: ZeroOrMore WorkEffort as WorkEffort
    B: One Mitarbeiter as Mitarbeiter
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_WorkEffort_has_Mitarbeiter"
                           TypeName="Model.FK_WorkEffort_has_Mitarbeiter"
                           StoreEntitySet="WorkEffort" >
      <EndProperty Name="Mitarbeiter">
        <ScalarProperty Name="ID" ColumnName="fk_Mitarbeiter"/>
      </EndProperty>
      <EndProperty Name="WorkEffort">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Mitarbeiter" IsNull="false"/>
    </AssociationSetMapping>

    <!-- EntitySetMappings and AssociationSetMappings for object-value CollectionEntrys -->
    <EntitySetMapping Name="Kunde_EMails_CollectionEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Kunde_EMails_CollectionEntry)">
        <MappingFragment StoreEntitySet="Kunde_EMails_CollectionEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
          <ScalarProperty Name="B" ColumnName="EMails" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <AssociationSetMapping Name="FK_Kunde_value_EMails"
                           TypeName="Model.FK_Kunde_value_EMails"
                           StoreEntitySet="Kunde_EMails_CollectionEntry" >
      <EndProperty Name="Kunde">
        <ScalarProperty Name="ID" ColumnName="fk_Kunde"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Kunde" IsNull="false"/>
    </AssociationSetMapping>

    <!-- EntitySetMappings and AssociationSetMappings for object-struct CollectionEntrys -->
    <EntitySetMapping Name="TestCustomObject_PhoneNumbersOther_CollectionEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.TestCustomObject_PhoneNumbersOther_CollectionEntry)">
        <MappingFragment StoreEntitySet="TestCustomObject_PhoneNumbersOther_CollectionEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
          <ComplexProperty Name="B__Implementation__" TypeName="Model.TestPhoneCompoundObject">
  <ScalarProperty Name="CompoundObject_IsNull" ColumnName="PhoneNumbersOther" />
<ScalarProperty Name="AreaCode" ColumnName="PhoneNumbersOther_AreaCode" />
<ScalarProperty Name="Number" ColumnName="PhoneNumbersOther_Number" />
</ComplexProperty>
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <AssociationSetMapping Name="FK_TestCustomObject_value_PhoneNumbersOther"
                           TypeName="Model.FK_TestCustomObject_value_PhoneNumbersOther"
                           StoreEntitySet="TestCustomObject_PhoneNumbersOther_CollectionEntry" >
      <EndProperty Name="TestCustomObject">
        <ScalarProperty Name="ID" ColumnName="fk_TestCustomObject"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_TestCustomObject" IsNull="false"/>
    </AssociationSetMapping>

  </EntityContainerMapping>
</Mapping>