<?xml version="1.0" encoding="utf-8"?>
<Mapping Space="C-S" xmlns="urn:schemas-microsoft-com:windows:storage:mapping:CS">
  <EntityContainerMapping StorageEntityContainer="dbo" CdmEntityContainer="Entities">
    
    <!-- EntitySetMappings for classes -->
    <EntitySetMapping Name="ANewObjectClass">
      <EntityTypeMapping TypeName="IsTypeOf(Model.ANewObjectClass)">
	    <MappingFragment StoreEntitySet="ANewObjectClass">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="TestString" ColumnName="TestString" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="AnotherTest">
      <EntityTypeMapping TypeName="IsTypeOf(Model.AnotherTest)">
	    <MappingFragment StoreEntitySet="AnotherTest">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Assembly">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Assembly)">
	    <MappingFragment StoreEntitySet="Assembly">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="AssemblyName" ColumnName="AssemblyName" />
<ScalarProperty Name="DeploymentRestrictions__Implementation__" ColumnName="DeploymentRestrictions" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Auftrag">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Auftrag)">
	    <MappingFragment StoreEntitySet="Auftrag">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Auftragsname" ColumnName="Auftragsname" />
<ScalarProperty Name="Auftragswert" ColumnName="Auftragswert" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="BaseParameter">
      <EntityTypeMapping TypeName="IsTypeOf(Model.BaseParameter)">
	    <MappingFragment StoreEntitySet="BaseParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="IsList" ColumnName="IsList" />
<ScalarProperty Name="IsReturnParameter" ColumnName="IsReturnParameter" />
<ScalarProperty Name="Method_pos" ColumnName="fk_Method_pos" />
<ScalarProperty Name="ParameterName" ColumnName="ParameterName" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.BoolParameter)">
	    <MappingFragment StoreEntitySet="BoolParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.CLRObjectParameter)">
	    <MappingFragment StoreEntitySet="CLRObjectParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="FullTypeName" ColumnName="FullTypeName" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DateTimeParameter)">
	    <MappingFragment StoreEntitySet="DateTimeParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DoubleParameter)">
	    <MappingFragment StoreEntitySet="DoubleParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.IntParameter)">
	    <MappingFragment StoreEntitySet="IntParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectParameter)">
	    <MappingFragment StoreEntitySet="ObjectParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.StringParameter)">
	    <MappingFragment StoreEntitySet="StringParameter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Company">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Company)">
	    <MappingFragment StoreEntitySet="Company">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Constraint">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Constraint)">
	    <MappingFragment StoreEntitySet="Constraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Reason" ColumnName="Reason" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ConsistentNavigatorConstraint)">
	    <MappingFragment StoreEntitySet="ConsistentNavigatorConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.IntegerRangeConstraint)">
	    <MappingFragment StoreEntitySet="IntegerRangeConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Max" ColumnName="Max" />
<ScalarProperty Name="Min" ColumnName="Min" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.IsValidIdentifierConstraint)">
	    <MappingFragment StoreEntitySet="IsValidIdentifierConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.IsValidNamespaceConstraint)">
	    <MappingFragment StoreEntitySet="IsValidNamespaceConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.MethodInvocationConstraint)">
	    <MappingFragment StoreEntitySet="MethodInvocationConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.NotNullableConstraint)">
	    <MappingFragment StoreEntitySet="NotNullableConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.StringRangeConstraint)">
	    <MappingFragment StoreEntitySet="StringRangeConstraint">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="MaxLength" ColumnName="MaxLength" />
<ScalarProperty Name="MinLength" ColumnName="MinLength" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="ControlKind">
      <EntityTypeMapping TypeName="IsTypeOf(Model.ControlKind)">
	    <MappingFragment StoreEntitySet="ControlKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ActionKind)">
	    <MappingFragment StoreEntitySet="ActionKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.CheckboxKind)">
	    <MappingFragment StoreEntitySet="CheckboxKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DataObjectKind)">
	    <MappingFragment StoreEntitySet="DataObjectKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.RelationEditorKind)">
	    <MappingFragment StoreEntitySet="RelationEditorKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DataObjectSelectionTaskKind)">
	    <MappingFragment StoreEntitySet="DataObjectSelectionTaskKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DataObjectSummaryKind)">
	    <MappingFragment StoreEntitySet="DataObjectSummaryKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.EnumerationSelectorKind)">
	    <MappingFragment StoreEntitySet="EnumerationSelectorKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.LabelKind)">
	    <MappingFragment StoreEntitySet="LabelKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.LauncherKind)">
	    <MappingFragment StoreEntitySet="LauncherKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectListKind)">
	    <MappingFragment StoreEntitySet="ObjectListKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectRefGridCellKind)">
	    <MappingFragment StoreEntitySet="ObjectRefGridCellKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectRefKind)">
	    <MappingFragment StoreEntitySet="ObjectRefKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.TypeRefRefKind)">
	    <MappingFragment StoreEntitySet="TypeRefRefKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.PropertyGroupKind)">
	    <MappingFragment StoreEntitySet="PropertyGroupKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.SingleLineDataObjectKind)">
	    <MappingFragment StoreEntitySet="SingleLineDataObjectKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.StringSelectorKind)">
	    <MappingFragment StoreEntitySet="StringSelectorKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.TextboxKind)">
	    <MappingFragment StoreEntitySet="TextboxKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.WorkspaceKind)">
	    <MappingFragment StoreEntitySet="WorkspaceKind">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="CurrentSchema">
      <EntityTypeMapping TypeName="IsTypeOf(Model.CurrentSchema)">
	    <MappingFragment StoreEntitySet="CurrentSchema">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Schema" ColumnName="Schema" />
<ScalarProperty Name="Version" ColumnName="Version" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="DataType">
      <EntityTypeMapping TypeName="IsTypeOf(Model.DataType)">
	    <MappingFragment StoreEntitySet="DataType">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ClassName" ColumnName="ClassName" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="ShowIconInLists" ColumnName="ShowIconInLists" />
<ScalarProperty Name="ShowIdInLists" ColumnName="ShowIdInLists" />
<ScalarProperty Name="ShowNameInLists" ColumnName="ShowNameInLists" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.Enumeration)">
	    <MappingFragment StoreEntitySet="Enumeration">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.Interface)">
	    <MappingFragment StoreEntitySet="Interface">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectClass)">
	    <MappingFragment StoreEntitySet="ObjectClass">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="IsFrozenObject" ColumnName="IsFrozenObject" />
<ScalarProperty Name="IsSimpleObject" ColumnName="IsSimpleObject" />
<ScalarProperty Name="TableName" ColumnName="TableName" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ControlKindClass)">
	    <MappingFragment StoreEntitySet="ControlKindClass">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.Struct)">
	    <MappingFragment StoreEntitySet="Struct">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="DefaultPropertyValue">
      <EntityTypeMapping TypeName="IsTypeOf(Model.DefaultPropertyValue)">
	    <MappingFragment StoreEntitySet="DefaultPropertyValue">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.NewGuidDefaultValue)">
	    <MappingFragment StoreEntitySet="NewGuidDefaultValue">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="EnumerationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.EnumerationEntry)">
	    <MappingFragment StoreEntitySet="EnumerationEntry">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Name" ColumnName="Name" />
<ScalarProperty Name="Value" ColumnName="Value" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Icon">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Icon)">
	    <MappingFragment StoreEntitySet="Icon">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="IconFile" ColumnName="IconFile" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Kunde">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Kunde)">
	    <MappingFragment StoreEntitySet="Kunde">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Adresse" ColumnName="Adresse" />
<ScalarProperty Name="Kundenname" ColumnName="Kundenname" />
<ScalarProperty Name="Land" ColumnName="Land" />
<ScalarProperty Name="Ort" ColumnName="Ort" />
<ScalarProperty Name="PLZ" ColumnName="PLZ" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Method">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Method)">
	    <MappingFragment StoreEntitySet="Method">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="IsDisplayable" ColumnName="IsDisplayable" />
<ScalarProperty Name="MethodName" ColumnName="MethodName" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="MethodInvocation">
      <EntityTypeMapping TypeName="IsTypeOf(Model.MethodInvocation)">
	    <MappingFragment StoreEntitySet="MethodInvocation">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="MemberName" ColumnName="MemberName" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Mitarbeiter">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Mitarbeiter)">
	    <MappingFragment StoreEntitySet="Mitarbeiter">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Geburtstag" ColumnName="Geburtstag" />
<ScalarProperty Name="Name" ColumnName="Name" />
<ScalarProperty Name="SVNr" ColumnName="SVNr" />
<ScalarProperty Name="TelefonNummer" ColumnName="TelefonNummer" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Module">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Module)">
	    <MappingFragment StoreEntitySet="Module">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="ModuleName" ColumnName="ModuleName" />
<ScalarProperty Name="Namespace" ColumnName="Namespace" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Muhblah">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Muhblah)">
	    <MappingFragment StoreEntitySet="Muhblah">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="PresenceRecord">
      <EntityTypeMapping TypeName="IsTypeOf(Model.PresenceRecord)">
	    <MappingFragment StoreEntitySet="PresenceRecord">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="From" ColumnName="From" />
<ScalarProperty Name="Thru" ColumnName="Thru" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="PresentableModelDescriptor">
      <EntityTypeMapping TypeName="IsTypeOf(Model.PresentableModelDescriptor)">
	    <MappingFragment StoreEntitySet="PresentableModelDescriptor">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Projekt">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Projekt)">
	    <MappingFragment StoreEntitySet="Projekt">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="AufwandGes" ColumnName="AufwandGes" />
<ScalarProperty Name="Kundenname" ColumnName="Kundenname" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Property">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Property)">
	    <MappingFragment StoreEntitySet="Property">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="CategoryTags" ColumnName="CategoryTags" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="IsIndexed" ColumnName="IsIndexed" />
<ScalarProperty Name="IsList" ColumnName="IsList" />
<ScalarProperty Name="IsNullable" ColumnName="IsNullable" />
<ScalarProperty Name="PropertyName" ColumnName="PropertyName" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectReferenceProperty)">
	    <MappingFragment StoreEntitySet="ObjectReferenceProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="EagerLoading" ColumnName="EagerLoading" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.StructProperty)">
	    <MappingFragment StoreEntitySet="StructProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.ValueTypeProperty)">
	    <MappingFragment StoreEntitySet="ValueTypeProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.BoolProperty)">
	    <MappingFragment StoreEntitySet="BoolProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DateTimeProperty)">
	    <MappingFragment StoreEntitySet="DateTimeProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.DoubleProperty)">
	    <MappingFragment StoreEntitySet="DoubleProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.EnumerationProperty)">
	    <MappingFragment StoreEntitySet="EnumerationProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.GuidProperty)">
	    <MappingFragment StoreEntitySet="GuidProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.IntProperty)">
	    <MappingFragment StoreEntitySet="IntProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
	    </MappingFragment>
      </EntityTypeMapping>
      <EntityTypeMapping TypeName="IsTypeOf(Model.StringProperty)">
	    <MappingFragment StoreEntitySet="StringProperty">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Length" ColumnName="Length" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="PropertyInvocation">
      <EntityTypeMapping TypeName="IsTypeOf(Model.PropertyInvocation)">
	    <MappingFragment StoreEntitySet="PropertyInvocation">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="InvocationType__Implementation__" ColumnName="InvocationType" />
<ScalarProperty Name="MemberName" ColumnName="MemberName" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Relation">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Relation)">
	    <MappingFragment StoreEntitySet="Relation">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Description" ColumnName="Description" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Storage__Implementation__" ColumnName="Storage" />
<ScalarProperty Name="Verb" ColumnName="Verb" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="RelationEnd">
      <EntityTypeMapping TypeName="IsTypeOf(Model.RelationEnd)">
	    <MappingFragment StoreEntitySet="RelationEnd">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="HasPersistentOrder" ColumnName="HasPersistentOrder" />
<ScalarProperty Name="Multiplicity__Implementation__" ColumnName="Multiplicity" />
<ScalarProperty Name="Role" ColumnName="Role" />
<ScalarProperty Name="RoleName" ColumnName="RoleName" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Task">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Task)">
	    <MappingFragment StoreEntitySet="Task">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Aufwand" ColumnName="Aufwand" />
<ScalarProperty Name="DatumBis" ColumnName="DatumBis" />
<ScalarProperty Name="DatumVon" ColumnName="DatumVon" />
<ScalarProperty Name="Name" ColumnName="Name" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Template">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Template)">
	    <MappingFragment StoreEntitySet="Template">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="DisplayedTypeFullName" ColumnName="DisplayedTypeFullName" />
<ScalarProperty Name="DisplayName" ColumnName="DisplayName" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="TestCustomObject">
      <EntityTypeMapping TypeName="IsTypeOf(Model.TestCustomObject)">
	    <MappingFragment StoreEntitySet="TestCustomObject">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Birthday" ColumnName="Birthday" />
<ScalarProperty Name="PersonName" ColumnName="PersonName" />
<ComplexProperty Name="PhoneNumberMobile__Implementation__" TypeName="Model.TestPhoneStruct">
<ScalarProperty Name="AreaCode" ColumnName="PhoneNumberMobile_AreaCode" />
<ScalarProperty Name="Number" ColumnName="PhoneNumberMobile_Number" />
</ComplexProperty>
<ComplexProperty Name="PhoneNumberOffice__Implementation__" TypeName="Model.TestPhoneStruct">
<ScalarProperty Name="AreaCode" ColumnName="PhoneNumberOffice_AreaCode" />
<ScalarProperty Name="Number" ColumnName="PhoneNumberOffice_Number" />
</ComplexProperty>
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="TestObjClass">
      <EntityTypeMapping TypeName="IsTypeOf(Model.TestObjClass)">
	    <MappingFragment StoreEntitySet="TestObjClass">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="MyIntProperty" ColumnName="MyIntProperty" />
<ScalarProperty Name="StringProp" ColumnName="StringProp" />
<ScalarProperty Name="TestEnumProp__Implementation__" ColumnName="TestEnumProp" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="TypeRef">
      <EntityTypeMapping TypeName="IsTypeOf(Model.TypeRef)">
	    <MappingFragment StoreEntitySet="TypeRef">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="FullName" ColumnName="FullName" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="ViewDescriptor">
      <EntityTypeMapping TypeName="IsTypeOf(Model.ViewDescriptor)">
	    <MappingFragment StoreEntitySet="ViewDescriptor">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
<ScalarProperty Name="Toolkit__Implementation__" ColumnName="Toolkit" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Visual">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Visual)">
	    <MappingFragment StoreEntitySet="Visual">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="Description" ColumnName="Description" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="WorkEffort">
      <EntityTypeMapping TypeName="IsTypeOf(Model.WorkEffort)">
	    <MappingFragment StoreEntitySet="WorkEffort">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="From" ColumnName="From" />
<ScalarProperty Name="Name" ColumnName="Name" />
<ScalarProperty Name="Notes" ColumnName="Notes" />
<ScalarProperty Name="Thru" ColumnName="Thru" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="WorkEffortAccount">
      <EntityTypeMapping TypeName="IsTypeOf(Model.WorkEffortAccount)">
	    <MappingFragment StoreEntitySet="WorkEffortAccount">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<ScalarProperty Name="BudgetHours" ColumnName="BudgetHours" />
<ScalarProperty Name="Name" ColumnName="Name" />
<ScalarProperty Name="Notes" ColumnName="Notes" />
<ScalarProperty Name="SpentHours" ColumnName="SpentHours" />
	    </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>


    <!-- EntitySetMappings and AssociationSetMappings for object-object relations with a CollectionEntry -->
    <!--
    Relation: FK_ControlKindClass_supports_TypeRef
    A: ZeroOrMore ControlKindClass as ControlKindClass
    B: ZeroOrMore TypeRef as SupportedInterfaces
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="ControlKindClass_supports_TypeRef_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.ControlKindClass_supports_TypeRef_RelationEntry)">
        <MappingFragment StoreEntitySet="ControlKindClass_supports_TypeRef_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
		  <ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_ControlKindClass_supports_TypeRef_ControlKindClass"
                           TypeName="Model.FK_ControlKindClass_supports_TypeRef_ControlKindClass"
                           StoreEntitySet="ControlKindClass_supports_TypeRef_RelationEntry" >
      <EndProperty Name="ControlKindClass">
        <ScalarProperty Name="ID" ColumnName="fk_ControlKindClass"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ControlKindClass" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_ControlKindClass_supports_TypeRef_SupportedInterfaces"
                           TypeName="Model.FK_ControlKindClass_supports_TypeRef_SupportedInterfaces"
                           StoreEntitySet="ControlKindClass_supports_TypeRef_RelationEntry" >
      <EndProperty Name="SupportedInterfaces">
        <ScalarProperty Name="ID" ColumnName="fk_SupportedInterfaces"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_SupportedInterfaces" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_ObjectClass_implements_Interface
    A: ZeroOrMore ObjectClass as ObjectClass
    B: ZeroOrMore Interface as ImplementsInterfaces
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="ObjectClass_implements_Interface_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.ObjectClass_implements_Interface_RelationEntry)">
        <MappingFragment StoreEntitySet="ObjectClass_implements_Interface_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
		  <ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_ObjectClass_implements_Interface_ObjectClass"
                           TypeName="Model.FK_ObjectClass_implements_Interface_ObjectClass"
                           StoreEntitySet="ObjectClass_implements_Interface_RelationEntry" >
      <EndProperty Name="ObjectClass">
        <ScalarProperty Name="ID" ColumnName="fk_ObjectClass"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ObjectClass" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_ObjectClass_implements_Interface_ImplementsInterfaces"
                           TypeName="Model.FK_ObjectClass_implements_Interface_ImplementsInterfaces"
                           StoreEntitySet="ObjectClass_implements_Interface_RelationEntry" >
      <EndProperty Name="ImplementsInterfaces">
        <ScalarProperty Name="ID" ColumnName="fk_ImplementsInterfaces"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ImplementsInterfaces" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_PresentableModelDescriptor_displayedBy_ControlKind
    A: ZeroOrMore PresentableModelDescriptor as Presentable
    B: ZeroOrMore ControlKind as SecondaryControlKinds
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="PresentableModelDescriptor_displayedBy_ControlKind_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.PresentableModelDescriptor_displayedBy_ControlKind_RelationEntry)">
        <MappingFragment StoreEntitySet="PresentableModelDescriptor_displayedBy_ControlKind_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
		  <ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_PresentableModelDescriptor_displayedBy_ControlKind_Presentable"
                           TypeName="Model.FK_PresentableModelDescriptor_displayedBy_ControlKind_Presentable"
                           StoreEntitySet="PresentableModelDescriptor_displayedBy_ControlKind_RelationEntry" >
      <EndProperty Name="Presentable">
        <ScalarProperty Name="ID" ColumnName="fk_PresentableModelDescriptor"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_PresentableModelDescriptor" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_PresentableModelDescriptor_displayedBy_ControlKind_SecondaryControlKinds"
                           TypeName="Model.FK_PresentableModelDescriptor_displayedBy_ControlKind_SecondaryControlKinds"
                           StoreEntitySet="PresentableModelDescriptor_displayedBy_ControlKind_RelationEntry" >
      <EndProperty Name="SecondaryControlKinds">
        <ScalarProperty Name="ID" ColumnName="fk_SecondaryControlKinds"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_SecondaryControlKinds" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_Projekt_haben_Mitarbeiter
    A: ZeroOrMore Projekt as Projekte
    B: ZeroOrMore Mitarbeiter as Mitarbeiter
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="Projekt_haben_Mitarbeiter_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Projekt_haben_Mitarbeiter_RelationEntry)">
        <MappingFragment StoreEntitySet="Projekt_haben_Mitarbeiter_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
          <ScalarProperty Name="A_pos" ColumnName="fk_Projekt_pos" />
          <ScalarProperty Name="B_pos" ColumnName="fk_Mitarbeiter_pos" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_Projekt_haben_Mitarbeiter_Projekte"
                           TypeName="Model.FK_Projekt_haben_Mitarbeiter_Projekte"
                           StoreEntitySet="Projekt_haben_Mitarbeiter_RelationEntry" >
      <EndProperty Name="Projekte">
        <ScalarProperty Name="ID" ColumnName="fk_Projekt"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Projekt" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_Projekt_haben_Mitarbeiter_Mitarbeiter"
                           TypeName="Model.FK_Projekt_haben_Mitarbeiter_Mitarbeiter"
                           StoreEntitySet="Projekt_haben_Mitarbeiter_RelationEntry" >
      <EndProperty Name="Mitarbeiter">
        <ScalarProperty Name="ID" ColumnName="fk_Mitarbeiter"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Mitarbeiter" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_Template_hasMenu_Visual
    A: ZeroOrMore Template as Template
    B: ZeroOrMore Visual as Menu
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="Template_hasMenu_Visual_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Template_hasMenu_Visual_RelationEntry)">
        <MappingFragment StoreEntitySet="Template_hasMenu_Visual_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_Template_hasMenu_Visual_Template"
                           TypeName="Model.FK_Template_hasMenu_Visual_Template"
                           StoreEntitySet="Template_hasMenu_Visual_RelationEntry" >
      <EndProperty Name="Template">
        <ScalarProperty Name="ID" ColumnName="fk_Template"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Template" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_Template_hasMenu_Visual_Menu"
                           TypeName="Model.FK_Template_hasMenu_Visual_Menu"
                           StoreEntitySet="Template_hasMenu_Visual_RelationEntry" >
      <EndProperty Name="Menu">
        <ScalarProperty Name="ID" ColumnName="fk_Menu"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Menu" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_TypeRef_hasGenericArguments_TypeRef
    A: ZeroOrMore TypeRef as TypeRef
    B: ZeroOrMore TypeRef as GenericArguments
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="TypeRef_hasGenericArguments_TypeRef_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.TypeRef_hasGenericArguments_TypeRef_RelationEntry)">
        <MappingFragment StoreEntitySet="TypeRef_hasGenericArguments_TypeRef_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
		  <ScalarProperty Name="ExportGuid" ColumnName="ExportGuid" />
          <ScalarProperty Name="A_pos" ColumnName="fk_TypeRef_pos" />
          <ScalarProperty Name="B_pos" ColumnName="fk_GenericArguments_pos" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_TypeRef_hasGenericArguments_TypeRef_TypeRef"
                           TypeName="Model.FK_TypeRef_hasGenericArguments_TypeRef_TypeRef"
                           StoreEntitySet="TypeRef_hasGenericArguments_TypeRef_RelationEntry" >
      <EndProperty Name="TypeRef">
        <ScalarProperty Name="ID" ColumnName="fk_TypeRef"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_TypeRef" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_TypeRef_hasGenericArguments_TypeRef_GenericArguments"
                           TypeName="Model.FK_TypeRef_hasGenericArguments_TypeRef_GenericArguments"
                           StoreEntitySet="TypeRef_hasGenericArguments_TypeRef_RelationEntry" >
      <EndProperty Name="GenericArguments">
        <ScalarProperty Name="ID" ColumnName="fk_GenericArguments"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_GenericArguments" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_Visual_contains_Visual
    A: ZeroOrMore Visual as Visual
    B: ZeroOrMore Visual as Children
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="Visual_contains_Visual_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Visual_contains_Visual_RelationEntry)">
        <MappingFragment StoreEntitySet="Visual_contains_Visual_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_Visual_contains_Visual_Visual"
                           TypeName="Model.FK_Visual_contains_Visual_Visual"
                           StoreEntitySet="Visual_contains_Visual_RelationEntry" >
      <EndProperty Name="Visual">
        <ScalarProperty Name="ID" ColumnName="fk_Visual"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Visual" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_Visual_contains_Visual_Children"
                           TypeName="Model.FK_Visual_contains_Visual_Children"
                           StoreEntitySet="Visual_contains_Visual_RelationEntry" >
      <EndProperty Name="Children">
        <ScalarProperty Name="ID" ColumnName="fk_Children"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Children" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_Visual_hasContextMenu_Visual
    A: ZeroOrMore Visual as Visual
    B: ZeroOrMore Visual as ContextMenu
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="Visual_hasContextMenu_Visual_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Visual_hasContextMenu_Visual_RelationEntry)">
        <MappingFragment StoreEntitySet="Visual_hasContextMenu_Visual_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_Visual_hasContextMenu_Visual_Visual"
                           TypeName="Model.FK_Visual_hasContextMenu_Visual_Visual"
                           StoreEntitySet="Visual_hasContextMenu_Visual_RelationEntry" >
      <EndProperty Name="Visual">
        <ScalarProperty Name="ID" ColumnName="fk_Visual"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Visual" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_Visual_hasContextMenu_Visual_ContextMenu"
                           TypeName="Model.FK_Visual_hasContextMenu_Visual_ContextMenu"
                           StoreEntitySet="Visual_hasContextMenu_Visual_RelationEntry" >
      <EndProperty Name="ContextMenu">
        <ScalarProperty Name="ID" ColumnName="fk_ContextMenu"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ContextMenu" IsNull="false"/>
    </AssociationSetMapping>

    <!--
    Relation: FK_WorkEffortAccount_has_Mitarbeiter
    A: ZeroOrMore WorkEffortAccount as WorkEffortAccount
    B: ZeroOrMore Mitarbeiter as Mitarbeiter
    Preferred Storage: Separate
    -->
    <EntitySetMapping Name="WorkEffortAccount_has_Mitarbeiter_RelationEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.WorkEffortAccount_has_Mitarbeiter_RelationEntry)">
        <MappingFragment StoreEntitySet="WorkEffortAccount_has_Mitarbeiter_RelationEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <!-- A to CollectionEntry -->
    <AssociationSetMapping Name="FK_WorkEffortAccount_has_Mitarbeiter_WorkEffortAccount"
                           TypeName="Model.FK_WorkEffortAccount_has_Mitarbeiter_WorkEffortAccount"
                           StoreEntitySet="WorkEffortAccount_has_Mitarbeiter_RelationEntry" >
      <EndProperty Name="WorkEffortAccount">
        <ScalarProperty Name="ID" ColumnName="fk_WorkEffortAccount"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_WorkEffortAccount" IsNull="false"/>
    </AssociationSetMapping>
    <!-- B to CollectionEntry -->
    <AssociationSetMapping Name="FK_WorkEffortAccount_has_Mitarbeiter_Mitarbeiter"
                           TypeName="Model.FK_WorkEffortAccount_has_Mitarbeiter_Mitarbeiter"
                           StoreEntitySet="WorkEffortAccount_has_Mitarbeiter_RelationEntry" >
      <EndProperty Name="Mitarbeiter">
        <ScalarProperty Name="ID" ColumnName="fk_Mitarbeiter"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Mitarbeiter" IsNull="false"/>
    </AssociationSetMapping>



    <!-- AssociationSetMappings for direct object-object relations without a CollectionEntry -->
    <!--
    Relation: FK_Auftrag_has_Kunde
    A: ZeroOrMore Auftrag as Auftrag
    B: ZeroOrOne Kunde as Kunde
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Auftrag_has_Kunde"
                           TypeName="Model.FK_Auftrag_has_Kunde"
                           StoreEntitySet="Auftrag" >
      <EndProperty Name="Kunde">
        <ScalarProperty Name="ID" ColumnName="fk_Kunde"/>
      </EndProperty>
      <EndProperty Name="Auftrag">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Kunde" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Auftrag_has_Mitarbeiter
    A: ZeroOrMore Auftrag as Auftrag
    B: ZeroOrOne Mitarbeiter as Mitarbeiter
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Auftrag_has_Mitarbeiter"
                           TypeName="Model.FK_Auftrag_has_Mitarbeiter"
                           StoreEntitySet="Auftrag" >
      <EndProperty Name="Mitarbeiter">
        <ScalarProperty Name="ID" ColumnName="fk_Mitarbeiter"/>
      </EndProperty>
      <EndProperty Name="Auftrag">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Mitarbeiter" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_CLRObjectParameter_has_Assembly
    A: ZeroOrMore CLRObjectParameter as CLRObjectParameter
    B: ZeroOrOne Assembly as Assembly
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_CLRObjectParameter_has_Assembly"
                           TypeName="Model.FK_CLRObjectParameter_has_Assembly"
                           StoreEntitySet="CLRObjectParameter" >
      <EndProperty Name="Assembly">
        <ScalarProperty Name="ID" ColumnName="fk_Assembly"/>
      </EndProperty>
      <EndProperty Name="CLRObjectParameter">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Assembly" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_DataType_has_Icon
    A: ZeroOrMore DataType as DataType
    B: ZeroOrOne Icon as DefaultIcon
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_DataType_has_Icon"
                           TypeName="Model.FK_DataType_has_Icon"
                           StoreEntitySet="DataType" >
      <EndProperty Name="DefaultIcon">
        <ScalarProperty Name="ID" ColumnName="fk_DefaultIcon"/>
      </EndProperty>
      <EndProperty Name="DataType">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_DefaultIcon" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_DataType_has_Method
    A: One DataType as ObjectClass
    B: ZeroOrMore Method as Methods
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_DataType_has_Method"
                           TypeName="Model.FK_DataType_has_Method"
                           StoreEntitySet="Method" >
      <EndProperty Name="ObjectClass">
        <ScalarProperty Name="ID" ColumnName="fk_ObjectClass"/>
      </EndProperty>
      <EndProperty Name="Methods">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ObjectClass" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_DataType_has_MethodInvocation
    A: One DataType as InvokeOnObjectClass
    B: ZeroOrMore MethodInvocation as MethodInvocations
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_DataType_has_MethodInvocation"
                           TypeName="Model.FK_DataType_has_MethodInvocation"
                           StoreEntitySet="MethodInvocation" >
      <EndProperty Name="InvokeOnObjectClass">
        <ScalarProperty Name="ID" ColumnName="fk_InvokeOnObjectClass"/>
      </EndProperty>
      <EndProperty Name="MethodInvocations">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_InvokeOnObjectClass" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_DataType_has_Property
    A: One DataType as ObjectClass
    B: ZeroOrMore Property as Properties
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_DataType_has_Property"
                           TypeName="Model.FK_DataType_has_Property"
                           StoreEntitySet="Property" >
      <EndProperty Name="ObjectClass">
        <ScalarProperty Name="ID" ColumnName="fk_ObjectClass"/>
      </EndProperty>
      <EndProperty Name="Properties">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ObjectClass" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Enumeration_has_EnumerationEntry
    A: One Enumeration as Enumeration
    B: ZeroOrMore EnumerationEntry as EnumerationEntries
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Enumeration_has_EnumerationEntry"
                           TypeName="Model.FK_Enumeration_has_EnumerationEntry"
                           StoreEntitySet="EnumerationEntry" >
      <EndProperty Name="Enumeration">
        <ScalarProperty Name="ID" ColumnName="fk_Enumeration"/>
      </EndProperty>
      <EndProperty Name="EnumerationEntries">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Enumeration" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_EnumerationProperty_has_Enumeration
    A: ZeroOrMore EnumerationProperty as EnumerationProperty
    B: ZeroOrOne Enumeration as Enumeration
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_EnumerationProperty_has_Enumeration"
                           TypeName="Model.FK_EnumerationProperty_has_Enumeration"
                           StoreEntitySet="EnumerationProperty" >
      <EndProperty Name="Enumeration">
        <ScalarProperty Name="ID" ColumnName="fk_Enumeration"/>
      </EndProperty>
      <EndProperty Name="EnumerationProperty">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Enumeration" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Icon_has_Module
    A: ZeroOrMore Icon as Icon
    B: ZeroOrOne Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Icon_has_Module"
                           TypeName="Model.FK_Icon_has_Module"
                           StoreEntitySet="Icon" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="Icon">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Method_has_BaseParameter
    A: One Method as Method
    B: ZeroOrMore BaseParameter as Parameter
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Method_has_BaseParameter"
                           TypeName="Model.FK_Method_has_BaseParameter"
                           StoreEntitySet="BaseParameter" >
      <EndProperty Name="Method">
        <ScalarProperty Name="ID" ColumnName="fk_Method"/>
      </EndProperty>
      <EndProperty Name="Parameter">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Method" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Method_has_MethodInvocation
    A: One Method as Method
    B: ZeroOrMore MethodInvocation as MethodInvokations
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Method_has_MethodInvocation"
                           TypeName="Model.FK_Method_has_MethodInvocation"
                           StoreEntitySet="MethodInvocation" >
      <EndProperty Name="Method">
        <ScalarProperty Name="ID" ColumnName="fk_Method"/>
      </EndProperty>
      <EndProperty Name="MethodInvokations">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Method" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Method_has_Module
    A: ZeroOrMore Method as Method
    B: ZeroOrOne Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Method_has_Module"
                           TypeName="Model.FK_Method_has_Module"
                           StoreEntitySet="Method" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="Method">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_MethodInvocation_has_Module
    A: ZeroOrMore MethodInvocation as MethodInvocation
    B: ZeroOrOne Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_MethodInvocation_has_Module"
                           TypeName="Model.FK_MethodInvocation_has_Module"
                           StoreEntitySet="MethodInvocation" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="MethodInvocation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_MethodInvocation_has_TypeRef
    A: ZeroOrMore MethodInvocation as MethodInvocation
    B: ZeroOrOne TypeRef as Implementor
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_MethodInvocation_has_TypeRef"
                           TypeName="Model.FK_MethodInvocation_has_TypeRef"
                           StoreEntitySet="MethodInvocation" >
      <EndProperty Name="Implementor">
        <ScalarProperty Name="ID" ColumnName="fk_Implementor"/>
      </EndProperty>
      <EndProperty Name="MethodInvocation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Implementor" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Module_has_Assembly
    A: One Module as Module
    B: ZeroOrMore Assembly as Assemblies
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Module_has_Assembly"
                           TypeName="Model.FK_Module_has_Assembly"
                           StoreEntitySet="Assembly" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="Assemblies">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Module_has_DataType
    A: One Module as Module
    B: ZeroOrMore DataType as DataTypes
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Module_has_DataType"
                           TypeName="Model.FK_Module_has_DataType"
                           StoreEntitySet="DataType" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="DataTypes">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Module_has_Relation
    A: One Module as Module
    B: ZeroOrMore Relation as Relation
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Module_has_Relation"
                           TypeName="Model.FK_Module_has_Relation"
                           StoreEntitySet="Relation" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="Relation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ObjectClass_has_ObjectClass
    A: ZeroOrOne ObjectClass as BaseObjectClass
    B: ZeroOrMore ObjectClass as SubClasses
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_ObjectClass_has_ObjectClass"
                           TypeName="Model.FK_ObjectClass_has_ObjectClass"
                           StoreEntitySet="ObjectClass" >
      <EndProperty Name="BaseObjectClass">
        <ScalarProperty Name="ID" ColumnName="fk_BaseObjectClass"/>
      </EndProperty>
      <EndProperty Name="SubClasses">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_BaseObjectClass" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ObjectClass_has_PresentableModelDescriptor
    A: ZeroOrMore ObjectClass as Presentable
    B: One PresentableModelDescriptor as DefaultPresentableModelDescriptor
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_ObjectClass_has_PresentableModelDescriptor"
                           TypeName="Model.FK_ObjectClass_has_PresentableModelDescriptor"
                           StoreEntitySet="ObjectClass" >
      <EndProperty Name="DefaultPresentableModelDescriptor">
        <ScalarProperty Name="ID" ColumnName="fk_DefaultPresentableModelDescriptor"/>
      </EndProperty>
      <EndProperty Name="Presentable">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_DefaultPresentableModelDescriptor" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ObjectParameter_has_DataType
    A: ZeroOrMore ObjectParameter as ObjectParameter
    B: ZeroOrOne DataType as DataType
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_ObjectParameter_has_DataType"
                           TypeName="Model.FK_ObjectParameter_has_DataType"
                           StoreEntitySet="ObjectParameter" >
      <EndProperty Name="DataType">
        <ScalarProperty Name="ID" ColumnName="fk_DataType"/>
      </EndProperty>
      <EndProperty Name="ObjectParameter">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_DataType" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ObjectReferenceProperty_has_ObjectClass
    A: ZeroOrMore ObjectReferenceProperty as ObjectReferenceProperty
    B: ZeroOrOne ObjectClass as ReferenceObjectClass
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_ObjectReferenceProperty_has_ObjectClass"
                           TypeName="Model.FK_ObjectReferenceProperty_has_ObjectClass"
                           StoreEntitySet="ObjectReferenceProperty" >
      <EndProperty Name="ReferenceObjectClass">
        <ScalarProperty Name="ID" ColumnName="fk_ReferenceObjectClass"/>
      </EndProperty>
      <EndProperty Name="ObjectReferenceProperty">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ReferenceObjectClass" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_PresenceRecord_has_Mitarbeiter
    A: ZeroOrMore PresenceRecord as PresenceRecord
    B: One Mitarbeiter as Mitarbeiter
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_PresenceRecord_has_Mitarbeiter"
                           TypeName="Model.FK_PresenceRecord_has_Mitarbeiter"
                           StoreEntitySet="PresenceRecord" >
      <EndProperty Name="Mitarbeiter">
        <ScalarProperty Name="ID" ColumnName="fk_Mitarbeiter"/>
      </EndProperty>
      <EndProperty Name="PresenceRecord">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Mitarbeiter" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_PresentableModelDescriptor_displayedInGridBy_ControlKind
    A: ZeroOrMore PresentableModelDescriptor as PresentableModelDescriptor
    B: ZeroOrOne ControlKind as DefaultGridCellKind
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_PresentableModelDescriptor_displayedInGridBy_ControlKind"
                           TypeName="Model.FK_PresentableModelDescriptor_displayedInGridBy_ControlKind"
                           StoreEntitySet="PresentableModelDescriptor" >
      <EndProperty Name="DefaultGridCellKind">
        <ScalarProperty Name="ID" ColumnName="fk_DefaultGridCellKind"/>
      </EndProperty>
      <EndProperty Name="PresentableModelDescriptor">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_DefaultGridCellKind" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_PresentableModelDescriptor_has_ControlKind
    A: ZeroOrOne PresentableModelDescriptor as Presentable
    B: ZeroOrOne ControlKind as DefaultKind
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_PresentableModelDescriptor_has_ControlKind"
                           TypeName="Model.FK_PresentableModelDescriptor_has_ControlKind"
                           StoreEntitySet="PresentableModelDescriptor" >
      <EndProperty Name="DefaultKind">
        <ScalarProperty Name="ID" ColumnName="fk_DefaultKind"/>
      </EndProperty>
      <EndProperty Name="Presentable">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_DefaultKind" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_PresentableModelDescriptor_has_Module
    A: ZeroOrMore PresentableModelDescriptor as PresentableModelDescriptor
    B: ZeroOrOne Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_PresentableModelDescriptor_has_Module"
                           TypeName="Model.FK_PresentableModelDescriptor_has_Module"
                           StoreEntitySet="PresentableModelDescriptor" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="PresentableModelDescriptor">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_PresentableModelDescriptor_has_TypeRef
    A: ZeroOrMore PresentableModelDescriptor as Descriptor
    B: One TypeRef as PresentableModelRef
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_PresentableModelDescriptor_has_TypeRef"
                           TypeName="Model.FK_PresentableModelDescriptor_has_TypeRef"
                           StoreEntitySet="PresentableModelDescriptor" >
      <EndProperty Name="PresentableModelRef">
        <ScalarProperty Name="ID" ColumnName="fk_PresentableModelRef"/>
      </EndProperty>
      <EndProperty Name="Descriptor">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_PresentableModelRef" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Projekt_has_Auftrag
    A: ZeroOrOne Projekt as Projekt
    B: ZeroOrMore Auftrag as Auftraege
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Projekt_has_Auftrag"
                           TypeName="Model.FK_Projekt_has_Auftrag"
                           StoreEntitySet="Auftrag" >
      <EndProperty Name="Projekt">
        <ScalarProperty Name="ID" ColumnName="fk_Projekt"/>
      </EndProperty>
      <EndProperty Name="Auftraege">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Projekt" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Projekt_has_Task
    A: ZeroOrOne Projekt as Projekt
    B: ZeroOrMore Task as Tasks
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Projekt_has_Task"
                           TypeName="Model.FK_Projekt_has_Task"
                           StoreEntitySet="Task" >
      <EndProperty Name="Projekt">
        <ScalarProperty Name="ID" ColumnName="fk_Projekt"/>
      </EndProperty>
      <EndProperty Name="Tasks">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Projekt" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Property_has_Constraint
    A: One Property as ConstrainedProperty
    B: ZeroOrMore Constraint as Constraints
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Property_has_Constraint"
                           TypeName="Model.FK_Property_has_Constraint"
                           StoreEntitySet="Constraint" >
      <EndProperty Name="ConstrainedProperty">
        <ScalarProperty Name="ID" ColumnName="fk_ConstrainedProperty"/>
      </EndProperty>
      <EndProperty Name="Constraints">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ConstrainedProperty" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Property_has_DefaultPropertyValue
    A: One Property as Property
    B: ZeroOrOne DefaultPropertyValue as DefaultValue
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Property_has_DefaultPropertyValue"
                           TypeName="Model.FK_Property_has_DefaultPropertyValue"
                           StoreEntitySet="DefaultPropertyValue" >
      <EndProperty Name="Property">
        <ScalarProperty Name="ID" ColumnName="fk_Property"/>
      </EndProperty>
      <EndProperty Name="DefaultValue">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Property" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Property_has_Module
    A: ZeroOrMore Property as BaseProperty
    B: ZeroOrOne Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Property_has_Module"
                           TypeName="Model.FK_Property_has_Module"
                           StoreEntitySet="Property" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="BaseProperty">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Property_has_PresentableModelDescriptor
    A: ZeroOrMore Property as Property
    B: One PresentableModelDescriptor as ValueModelDescriptor
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Property_has_PresentableModelDescriptor"
                           TypeName="Model.FK_Property_has_PresentableModelDescriptor"
                           StoreEntitySet="Property" >
      <EndProperty Name="ValueModelDescriptor">
        <ScalarProperty Name="ID" ColumnName="fk_ValueModelDescriptor"/>
      </EndProperty>
      <EndProperty Name="Property">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ValueModelDescriptor" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Property_has_PropertyInvocation
    A: One Property as InvokeOnProperty
    B: ZeroOrMore PropertyInvocation as Invocations
    Preferred Storage: MergeIntoB
    -->
    <AssociationSetMapping Name="FK_Property_has_PropertyInvocation"
                           TypeName="Model.FK_Property_has_PropertyInvocation"
                           StoreEntitySet="PropertyInvocation" >
      <EndProperty Name="InvokeOnProperty">
        <ScalarProperty Name="ID" ColumnName="fk_InvokeOnProperty"/>
      </EndProperty>
      <EndProperty Name="Invocations">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_InvokeOnProperty" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_PropertyInvocation_has_TypeRef
    A: ZeroOrMore PropertyInvocation as PropertyInvocation
    B: One TypeRef as Implementor
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_PropertyInvocation_has_TypeRef"
                           TypeName="Model.FK_PropertyInvocation_has_TypeRef"
                           StoreEntitySet="PropertyInvocation" >
      <EndProperty Name="Implementor">
        <ScalarProperty Name="ID" ColumnName="fk_Implementor"/>
      </EndProperty>
      <EndProperty Name="PropertyInvocation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Implementor" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Relation_hasA_RelationEnd
    A: ZeroOrOne Relation as Relation
    B: ZeroOrOne RelationEnd as A
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Relation_hasA_RelationEnd"
                           TypeName="Model.FK_Relation_hasA_RelationEnd"
                           StoreEntitySet="Relation" >
      <EndProperty Name="A">
        <ScalarProperty Name="ID" ColumnName="fk_A"/>
      </EndProperty>
      <EndProperty Name="Relation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_A" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Relation_hasB_RelationEnd
    A: ZeroOrOne Relation as Relation
    B: ZeroOrOne RelationEnd as B
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Relation_hasB_RelationEnd"
                           TypeName="Model.FK_Relation_hasB_RelationEnd"
                           StoreEntitySet="Relation" >
      <EndProperty Name="B">
        <ScalarProperty Name="ID" ColumnName="fk_B"/>
      </EndProperty>
      <EndProperty Name="Relation">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_B" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_RelationEnd_has_ObjectClass
    A: ZeroOrMore RelationEnd as RelationEnd
    B: ZeroOrOne ObjectClass as Type
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_RelationEnd_has_ObjectClass"
                           TypeName="Model.FK_RelationEnd_has_ObjectClass"
                           StoreEntitySet="RelationEnd" >
      <EndProperty Name="Type">
        <ScalarProperty Name="ID" ColumnName="fk_Type"/>
      </EndProperty>
      <EndProperty Name="RelationEnd">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Type" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_RelationEnd_has_ObjectReferenceProperty
    A: ZeroOrOne RelationEnd as RelationEnd
    B: ZeroOrOne ObjectReferenceProperty as Navigator
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_RelationEnd_has_ObjectReferenceProperty"
                           TypeName="Model.FK_RelationEnd_has_ObjectReferenceProperty"
                           StoreEntitySet="RelationEnd" >
      <EndProperty Name="Navigator">
        <ScalarProperty Name="ID" ColumnName="fk_Navigator"/>
      </EndProperty>
      <EndProperty Name="RelationEnd">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Navigator" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_StructProperty_has_Struct
    A: ZeroOrMore StructProperty as StructProperty
    B: ZeroOrOne Struct as StructDefinition
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_StructProperty_has_Struct"
                           TypeName="Model.FK_StructProperty_has_Struct"
                           StoreEntitySet="StructProperty" >
      <EndProperty Name="StructDefinition">
        <ScalarProperty Name="ID" ColumnName="fk_StructDefinition"/>
      </EndProperty>
      <EndProperty Name="StructProperty">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_StructDefinition" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Template_has_Assembly
    A: ZeroOrMore Template as Template
    B: ZeroOrOne Assembly as DisplayedTypeAssembly
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Template_has_Assembly"
                           TypeName="Model.FK_Template_has_Assembly"
                           StoreEntitySet="Template" >
      <EndProperty Name="DisplayedTypeAssembly">
        <ScalarProperty Name="ID" ColumnName="fk_DisplayedTypeAssembly"/>
      </EndProperty>
      <EndProperty Name="Template">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_DisplayedTypeAssembly" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Template_has_Visual
    A: ZeroOrMore Template as Template
    B: ZeroOrOne Visual as VisualTree
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Template_has_Visual"
                           TypeName="Model.FK_Template_has_Visual"
                           StoreEntitySet="Template" >
      <EndProperty Name="VisualTree">
        <ScalarProperty Name="ID" ColumnName="fk_VisualTree"/>
      </EndProperty>
      <EndProperty Name="Template">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_VisualTree" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_TestObjClass_has_Kunde
    A: ZeroOrMore TestObjClass as TestObjClass
    B: ZeroOrOne Kunde as ObjectProp
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_TestObjClass_has_Kunde"
                           TypeName="Model.FK_TestObjClass_has_Kunde"
                           StoreEntitySet="TestObjClass" >
      <EndProperty Name="ObjectProp">
        <ScalarProperty Name="ID" ColumnName="fk_ObjectProp"/>
      </EndProperty>
      <EndProperty Name="TestObjClass">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ObjectProp" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_TypeRef_has_Assembly
    A: ZeroOrMore TypeRef as TypeRef
    B: ZeroOrOne Assembly as Assembly
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_TypeRef_has_Assembly"
                           TypeName="Model.FK_TypeRef_has_Assembly"
                           StoreEntitySet="TypeRef" >
      <EndProperty Name="Assembly">
        <ScalarProperty Name="ID" ColumnName="fk_Assembly"/>
      </EndProperty>
      <EndProperty Name="TypeRef">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Assembly" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_TypeRef_has_TypeRef
    A: ZeroOrMore TypeRef as Child
    B: One TypeRef as Parent
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_TypeRef_has_TypeRef"
                           TypeName="Model.FK_TypeRef_has_TypeRef"
                           StoreEntitySet="TypeRef" >
      <EndProperty Name="Parent">
        <ScalarProperty Name="ID" ColumnName="fk_Parent"/>
      </EndProperty>
      <EndProperty Name="Child">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Parent" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ViewDescriptor_has_Module
    A: ZeroOrMore ViewDescriptor as ViewDescriptor
    B: ZeroOrOne Module as Module
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_ViewDescriptor_has_Module"
                           TypeName="Model.FK_ViewDescriptor_has_Module"
                           StoreEntitySet="ViewDescriptor" >
      <EndProperty Name="Module">
        <ScalarProperty Name="ID" ColumnName="fk_Module"/>
      </EndProperty>
      <EndProperty Name="ViewDescriptor">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Module" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ViewDescriptor_has_TypeRef
    A: ZeroOrMore ViewDescriptor as View
    B: One TypeRef as ControlRef
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_ViewDescriptor_has_TypeRef"
                           TypeName="Model.FK_ViewDescriptor_has_TypeRef"
                           StoreEntitySet="ViewDescriptor" >
      <EndProperty Name="ControlRef">
        <ScalarProperty Name="ID" ColumnName="fk_ControlRef"/>
      </EndProperty>
      <EndProperty Name="View">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_ControlRef" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_ViewDescriptor_isof_ControlKindClass
    A: ZeroOrMore ViewDescriptor as Control
    B: ZeroOrOne ControlKindClass as Kind
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_ViewDescriptor_isof_ControlKindClass"
                           TypeName="Model.FK_ViewDescriptor_isof_ControlKindClass"
                           StoreEntitySet="ViewDescriptor" >
      <EndProperty Name="Kind">
        <ScalarProperty Name="ID" ColumnName="fk_Kind"/>
      </EndProperty>
      <EndProperty Name="Control">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Kind" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Visual_has_Method
    A: ZeroOrMore Visual as Visual
    B: ZeroOrOne Method as Method
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Visual_has_Method"
                           TypeName="Model.FK_Visual_has_Method"
                           StoreEntitySet="Visual" >
      <EndProperty Name="Method">
        <ScalarProperty Name="ID" ColumnName="fk_Method"/>
      </EndProperty>
      <EndProperty Name="Visual">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Method" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_Visual_has_Property
    A: ZeroOrMore Visual as Visual
    B: ZeroOrOne Property as Property
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_Visual_has_Property"
                           TypeName="Model.FK_Visual_has_Property"
                           StoreEntitySet="Visual" >
      <EndProperty Name="Property">
        <ScalarProperty Name="ID" ColumnName="fk_Property"/>
      </EndProperty>
      <EndProperty Name="Visual">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Property" IsNull="false"/>
    </AssociationSetMapping>
    <!--
    Relation: FK_WorkEffort_has_Mitarbeiter
    A: ZeroOrMore WorkEffort as WorkEffort
    B: One Mitarbeiter as Mitarbeiter
    Preferred Storage: MergeIntoA
    -->
    <AssociationSetMapping Name="FK_WorkEffort_has_Mitarbeiter"
                           TypeName="Model.FK_WorkEffort_has_Mitarbeiter"
                           StoreEntitySet="WorkEffort" >
      <EndProperty Name="Mitarbeiter">
        <ScalarProperty Name="ID" ColumnName="fk_Mitarbeiter"/>
      </EndProperty>
      <EndProperty Name="WorkEffort">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Mitarbeiter" IsNull="false"/>
    </AssociationSetMapping>

    <!-- EntitySetMappings and AssociationSetMappings for ValueType lists -->
    <EntitySetMapping Name="Kunde_EMails_CollectionEntry">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Kunde_EMails_CollectionEntry)">
        <MappingFragment StoreEntitySet="Kunde_EMails_CollectionEntry">
          <ScalarProperty Name="ID" ColumnName="ID" />
          <ScalarProperty Name="B" ColumnName="EMails" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <AssociationSetMapping Name="FK_Kunde_value_EMails"
                           TypeName="Model.FK_Kunde_value_EMails"
                           StoreEntitySet="Kunde_EMails_CollectionEntry" >
      <EndProperty Name="Kunde">
        <ScalarProperty Name="ID" ColumnName="fk_Kunde"/>
      </EndProperty>
      <EndProperty Name="CollectionEntry">
        <ScalarProperty Name="ID" ColumnName="ID"/>
      </EndProperty>
      <Condition ColumnName="fk_Kunde" IsNull="false"/>
    </AssociationSetMapping>

  </EntityContainerMapping>
</Mapping>