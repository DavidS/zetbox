//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:2.0.50727.3053
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Objects.DataClasses.EdmRelationshipAttribute("Model", "FK_Template_Visual_VisualTree", "A_Visual", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Kistl.App.GUI.Visual__Implementation__), "B_Template", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kistl.App.GUI.Template__Implementation__))]
[assembly: System.Data.Objects.DataClasses.EdmRelationshipAttribute("Model", "FK_Template_Assembly_DisplayedTypeAssembly", "A_Assembly", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Kistl.App.Base.Assembly__Implementation__), "B_Template", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kistl.App.GUI.Template__Implementation__))]

namespace Kistl.App.GUI
{
    using System;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Linq;
    using System.Text;
    using System.Collections;
    using System.Xml;
    using System.Xml.Serialization;
    using Kistl.API;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using Kistl.DALProvider.EF;
    using Kistl.API.Server;
    
    
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Template")]
    public class Template__Implementation__ : BaseServerDataObject_EntityFramework, Template
    {
        
        private int _ID;
        
        private string _DisplayName;
        
        private System.Nullable<int> _fk_VisualTree = null;
        
        private string _DisplayedTypeFullName;
        
        private System.Nullable<int> _fk_DisplayedTypeAssembly = null;
        
        public Template__Implementation__()
        {
        }
        
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        public override int ID
        {
            get
            {
                return _ID;
            }
            set
            {
                _ID = value;
            }
        }
        
        [EdmScalarPropertyAttribute()]
        public string DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                if (DisplayName != value)
                {
                    NotifyPropertyChanging("DisplayName"); 
                    _DisplayName = value;
                    NotifyPropertyChanged("DisplayName");;
                }
            }
        }
        
        [XmlIgnore()]
        public Kistl.App.GUI.Visual VisualTree
        {
            get
            {
                return VisualTree__Implementation__;
            }
            set
            {
                VisualTree__Implementation__ = (Kistl.App.GUI.Visual__Implementation__)value;
            }
        }
        
        public System.Nullable<int> fk_VisualTree
        {
            get
            {
                if (this.EntityState.In(System.Data.EntityState.Modified, System.Data.EntityState.Unchanged) && VisualTree != null)
                {
                    _fk_VisualTree = VisualTree.ID;
                }
                return _fk_VisualTree;
            }
            set
            {
                _fk_VisualTree = value;
            }
        }
        
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Template_Visual_VisualTree", "A_Visual")]
        public Kistl.App.GUI.Visual__Implementation__ VisualTree__Implementation__
        {
            get
            {
                EntityReference<Kistl.App.GUI.Visual__Implementation__> r = ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Kistl.App.GUI.Visual__Implementation__>("Model.FK_Template_Visual_VisualTree", "A_Visual");
                if (this.EntityState.In(System.Data.EntityState.Modified, System.Data.EntityState.Unchanged) && !r.IsLoaded) r.Load(); 
                return r.Value;
            }
            set
            {
                EntityReference<Kistl.App.GUI.Visual__Implementation__> r = ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Kistl.App.GUI.Visual__Implementation__>("Model.FK_Template_Visual_VisualTree", "A_Visual");
                if (this.EntityState.In(System.Data.EntityState.Modified, System.Data.EntityState.Unchanged) && !r.IsLoaded) r.Load(); 
                r.Value = (Kistl.App.GUI.Visual__Implementation__)value;
            }
        }
        
        [EdmScalarPropertyAttribute()]
        public string DisplayedTypeFullName
        {
            get
            {
                return _DisplayedTypeFullName;
            }
            set
            {
                if (DisplayedTypeFullName != value)
                {
                    NotifyPropertyChanging("DisplayedTypeFullName"); 
                    _DisplayedTypeFullName = value;
                    NotifyPropertyChanged("DisplayedTypeFullName");;
                }
            }
        }
        
        [XmlIgnore()]
        public Kistl.App.Base.Assembly DisplayedTypeAssembly
        {
            get
            {
                return DisplayedTypeAssembly__Implementation__;
            }
            set
            {
                DisplayedTypeAssembly__Implementation__ = (Kistl.App.Base.Assembly__Implementation__)value;
            }
        }
        
        public System.Nullable<int> fk_DisplayedTypeAssembly
        {
            get
            {
                if (this.EntityState.In(System.Data.EntityState.Modified, System.Data.EntityState.Unchanged) && DisplayedTypeAssembly != null)
                {
                    _fk_DisplayedTypeAssembly = DisplayedTypeAssembly.ID;
                }
                return _fk_DisplayedTypeAssembly;
            }
            set
            {
                _fk_DisplayedTypeAssembly = value;
            }
        }
        
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Template_Assembly_DisplayedTypeAssembly", "A_Assembly")]
        public Kistl.App.Base.Assembly__Implementation__ DisplayedTypeAssembly__Implementation__
        {
            get
            {
                EntityReference<Kistl.App.Base.Assembly__Implementation__> r = ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Kistl.App.Base.Assembly__Implementation__>("Model.FK_Template_Assembly_DisplayedTypeAssembly", "A_Assembly");
                if (this.EntityState.In(System.Data.EntityState.Modified, System.Data.EntityState.Unchanged) && !r.IsLoaded) r.Load(); 
                return r.Value;
            }
            set
            {
                EntityReference<Kistl.App.Base.Assembly__Implementation__> r = ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Kistl.App.Base.Assembly__Implementation__>("Model.FK_Template_Assembly_DisplayedTypeAssembly", "A_Assembly");
                if (this.EntityState.In(System.Data.EntityState.Modified, System.Data.EntityState.Unchanged) && !r.IsLoaded) r.Load(); 
                r.Value = (Kistl.App.Base.Assembly__Implementation__)value;
            }
        }
        
        public event ToStringHandler<Template> OnToString_Template;
        
        public event ObjectEventHandler<Template> OnPreSave_Template;
        
        public event ObjectEventHandler<Template> OnPostSave_Template;
        
        [System.Diagnostics.DebuggerHidden()]
        public override string ToString()
        {
            MethodReturnEventArgs<string> e = new MethodReturnEventArgs<string>();
            e.Result = base.ToString();
            if (OnToString_Template != null)
            {
                OnToString_Template(this, e);
            }
            return e.Result;
        }
        
        public override void NotifyPreSave()
        {
            base.NotifyPreSave();
            if (OnPreSave_Template != null) OnPreSave_Template(this);
        }
        
        public override void NotifyPostSave()
        {
            base.NotifyPostSave();
            if (OnPostSave_Template != null) OnPostSave_Template(this);
        }
        
        public override void AttachToContext(IKistlContext ctx)
        {
            base.AttachToContext(ctx);
        }
        
        public override void ToStream(System.IO.BinaryWriter sw)
        {
            base.ToStream(sw);
            BinarySerializer.ToBinary(this._DisplayName, sw);
            BinarySerializer.ToBinary(this.fk_VisualTree, sw);
            BinarySerializer.ToBinary(this._DisplayedTypeFullName, sw);
            BinarySerializer.ToBinary(this.fk_DisplayedTypeAssembly, sw);
        }
        
        public override void FromStream(System.IO.BinaryReader sr)
        {
            base.FromStream(sr);
            BinarySerializer.FromBinary(out this._DisplayName, sr);
            BinarySerializer.FromBinary(out this._fk_VisualTree, sr);
            BinarySerializer.FromBinary(out this._DisplayedTypeFullName, sr);
            BinarySerializer.FromBinary(out this._fk_DisplayedTypeAssembly, sr);
        }
    }
}
