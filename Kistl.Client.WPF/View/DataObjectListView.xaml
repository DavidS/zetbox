<view:PropertyView x:Class="Kistl.Client.WPF.View.DataObjectListView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:ctrls="clr-namespace:Kistl.Client.WPF.CustomControls"
                   xmlns:view="clr-namespace:Kistl.Client.WPF.View"
                   xmlns:kevin="clr-namespace:Microsoft.Samples.KMoore.WPFSamples.InfoTextBox;assembly=WPFSamplesLib"
                   xmlns:client="clr-namespace:Kistl.Client.Presentables;assembly=Kistl.Client">
    <view:PropertyView.Resources>
        <DataTemplate x:Key="idCellTemplate">
            <TextBlock Text="{Binding ID}" />
        </DataTemplate>
        <DataTemplate x:Key="iconCellTemplate">
            <Image Source="{Binding Converter={StaticResource IconConverter}}"
                   Width="14"
                   Height="14" />
        </DataTemplate>
        <DataTemplate x:Key="nameCellTemplate">
            <TextBlock Text="{Binding Name}" />
        </DataTemplate>

        <!-- Force all grid cells to stretch -->
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
        </Style>
    </view:PropertyView.Resources>

    <DockPanel>
        <UniformGrid DockPanel.Dock="Left"
                     Rows="2">

            <Button Command="{Binding Path=MoveUpCommand, RelativeSource={RelativeSource AncestorType={x:Type view:DataObjectListView}}}" IsEnabled="{Binding Path=HasPersistentOrder, Mode=OneWay}">up</Button>
            <Button Command="{Binding Path=MoveDownCommand, RelativeSource={RelativeSource AncestorType={x:Type view:DataObjectListView}}}" IsEnabled="{Binding Path=HasPersistentOrder, Mode=OneWay}">down</Button>

        </UniformGrid>

        <WrapPanel DockPanel.Dock="Top"
                   Orientation="Horizontal">
            <ctrls:LoadingIndicator />
            <Button Click="AddExistingItemHandler" Visibility="{Binding AllowAddExisting, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">Add existing ...</Button>
            <Button Click="AddNewHandler" Visibility="{Binding AllowAddNew, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">Add new ...</Button>
            <Button Click="RemoveHandler">Remove selection from list</Button>
            <Button Click="DeleteHandler">Delete selection from data store</Button>
        </WrapPanel>

        <!-- configured from code, see ListView_Initialized() -->
        <ListView x:Name="ListView"
                  ItemsSource="{Binding Value, Mode=OneWay}"
                  SelectedItem="{Binding SelectedItem}"
                  MinHeight="50"
                  MaxHeight="300"
                  MouseDoubleClick="ItemActivatedHandler"
                  Initialized="ListView_Initialized" />
    </DockPanel>
</view:PropertyView>
