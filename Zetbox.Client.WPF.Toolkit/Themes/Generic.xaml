<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrls="clr-namespace:Zetbox.Client.WPF.CustomControls"
                    xmlns:tk="clr-namespace:Zetbox.Client.WPF.Toolkit"
                    xmlns:converter="clr-namespace:Zetbox.Client.WPF.Converter"
                    xmlns:client="clr-namespace:Zetbox.Client.Presentables;assembly=Zetbox.Client">
    <!--
    This file is part of zetbox.

    Zetbox is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation, either version 3 of
    the License, or (at your option) any later version.

    Zetbox is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with zetbox.  If not, see <http://www.gnu.org/licenses/>.
    -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converter:BooleanToInvisibilityConverter x:Key="BooleanToInvisibilityConverter" />
    <converter:ImageConverter x:Key="ImageConverter" />

    <Style TargetType="{x:Type ctrls:HelpButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:HelpButton}">
                    <Image Source="{Binding HelpCommand.Icon, Converter={StaticResource ImageConverter}}"
                           Width="16"
                           Height="16" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="labeledViewBackround" 
           TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="-1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsValid}" Value="false">
                <Setter Property="Background" Value="LightCoral" />
                <Setter Property="BorderBrush" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type ctrls:LabeledView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:LabeledView}">
                    <Border Style="{StaticResource labeledViewBackround}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="{Binding Path=LabelMinWidth, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                              Width="{Binding Path=LabelWidth, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                              SharedSizeGroup="{Binding Path=LabelSharedSizeGroup, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>

                            <DockPanel Grid.Column="0"
                                   VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                <TextBlock DockPanel.Dock="Left"
                                       Text="{Binding Label, Mode=OneWay}"
                                       ToolTip="{Binding ToolTip, Mode=OneWay}" />
                                <TextBlock DockPanel.Dock="Left"
                                       Text="*"
                                       Margin="2,0,0,0"
                                       Foreground="Red"
                                       FontWeight="Bold"
                                       Visibility="{Binding Required, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <ctrls:HelpButton DockPanel.Dock="Left"
                                              Margin="5,0,0,0"
                                              VerticalAlignment="Top" />
                                <ctrls:ErrorMarker DockPanel.Dock="Right" 
                                               HorizontalAlignment="Right"
                                               Margin="5,0,0,0" 
                                               ToolTip="{Binding ValidationError}"
                                               Visibility="{Binding IsValid, Converter={StaticResource BooleanToInvisibilityConverter}}"/>
                            </DockPanel>

                            <ContentPresenter Grid.Column="1"
                                          x:Name="PART_ContentPresenter"
                                          Margin="5,0,0,0"
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                          Content="{Binding Model, Mode=OneWay}"
                                          tk:VisualTypeTemplateSelector.RequestedKind="{Binding RequestedKind, Mode=OneWay, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:LabeledContainer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:LabeledContainer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="{Binding LabelMinWidth, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                              Width="{Binding LabelWidth, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                              SharedSizeGroup="{Binding LabelSharedSizeGroup, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <DockPanel Grid.Column="0"
                                   Margin="0,3,0,0">
                            <TextBlock DockPanel.Dock="Left"                                       
                                       Text="{Binding Label, Mode=OneWay, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                       ToolTip="{Binding ToolTip, Mode=OneWay, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                            <TextBlock DockPanel.Dock="Left"
                                       Text="*"
                                       Margin="2,0,0,0"
                                       Foreground="Red"
                                       FontWeight="Bold"
                                       Visibility="{Binding Required, Mode=OneWay, RelativeSource={x:Static RelativeSource.TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <ctrls:HelpButton DockPanel.Dock="Left"
                                              Margin="5,0,0,0"
                                              VerticalAlignment="Top" />
                            <ctrls:ErrorMarker DockPanel.Dock="Right" 
                                               HorizontalAlignment="Right"
                                               Margin="5,0,0,0" 
                                               ToolTip="{Binding ValidationError}"
                                               Visibility="{Binding IsValid, Converter={StaticResource BooleanToInvisibilityConverter}}"/>
                        </DockPanel>

                        <ContentPresenter Grid.Column="1"
                                          Margin="5,0,0,0"
                                          Content="{Binding LabeledContent, Mode=OneWay, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:LabeledViewHorizontal}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:LabeledViewHorizontal}">
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top"
                                   VerticalAlignment="Top">
                            <TextBlock DockPanel.Dock="Left"
                                       Text="{Binding Label, Mode=OneWay}"
                                       ToolTip="{Binding ToolTip, Mode=OneWay}" />
                            <TextBlock DockPanel.Dock="Left"
                                       Text="*"
                                       Margin="2,0,0,0"
                                       Foreground="Red"
                                       FontWeight="Bold"
                                       Visibility="{Binding Required, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <ctrls:HelpButton DockPanel.Dock="Left"
                                              Margin="5,0,0,0"
                                              VerticalAlignment="Top" />
                            <ctrls:ErrorMarker DockPanel.Dock="Right" 
                                               HorizontalAlignment="Right"
                                               Margin="5,0,0,0" 
                                               ToolTip="{Binding ValidationError.Message}"
                                               Visibility="{Binding IsValid, Converter={StaticResource BooleanToInvisibilityConverter}}"/>
                        </DockPanel>

                        <ContentPresenter Grid.Row="1"
                                          x:Name="PART_ContentPresenter"
                                          Margin="0,5,0,0"
                                          Content="{Binding Model, Mode=OneWay}"
                                          tk:VisualTypeTemplateSelector.RequestedKind="{Binding RequestedKind, Mode=OneWay, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:ObjectHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:ObjectHeader}">
                    <DockPanel>
                        <Image DockPanel.Dock="Left"
                               Source="{Binding Icon, Converter={StaticResource ImageConverter}}" />
                        <ctrls:HelpButton DockPanel.Dock="Right"
                                          Margin="0,0,5,0" />
                        <TextBlock Text="{Binding Name}"
                                   Margin="10 0 0 0"
                                   HorizontalAlignment="Left">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ObjectState}"
                                                     Value="Deleted">
                                            <Setter Property="TextBlock.TextDecorations"
                                                    Value="Strikethrough" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:ErrorMarker}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:ErrorMarker}">
                    <Border Background="Red"  
                                    Width="20"                                     
                                    Height="20" 
                                    CornerRadius="10">
                        <TextBlock Text="!" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           FontWeight="Bold" 
                                           Foreground="White">
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:DataObjectActionsTray}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:DataObjectActionsTray}">
                    <ToolBarTray DockPanel.Dock="Top">
                        <ctrls:WorkaroundToolBar ItemsSource="{Binding Actions}">
                            <ctrls:WorkaroundToolBar.Resources>
                                <DataTemplate DataType="{x:Type client:ActionViewModel}">
                                    <ctrls:CommandButton CommandViewModel="{Binding}" />
                                </DataTemplate>
                            </ctrls:WorkaroundToolBar.Resources>
                        </ctrls:WorkaroundToolBar>
                    </ToolBarTray>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
