<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="P:\Kistl\Tests\Kistl.API.Tests\Kistl.API.Tests.nunit" total="91" failures="8" not-run="0" date="2008-10-30" time="16:42:23">
  <environment nunit-version="2.4.7.0" clr-version="2.0.50727.3053" os-version="Microsoft Windows NT 6.0.6001 Service Pack 1" platform="Win32NT" cwd="P:\Kistl\Tests\Kistl.API.Tests" machine-name="KISTL" user="david" user-domain="kistl" />
  <culture-info current-culture="de-AT" current-uiculture="de-DE" />
  <test-suite name="P:\Kistl\Tests\Kistl.API.Tests\Kistl.API.Tests.nunit" success="False" time="1.337" asserts="0">
    <results>
      <test-suite name="P:\Kistl\Tests\Kistl.API.Tests\bin\Debug\Kistl.API.Tests.exe" success="False" time="1.325" asserts="0">
        <results>
          <test-suite name="Kistl" success="False" time="1.312" asserts="0">
            <results>
              <test-suite name="API" success="False" time="1.302" asserts="0">
                <results>
                  <test-suite name="Tests" success="False" time="1.294" asserts="0">
                    <results>
                      <test-suite name="ApplicationContextTests" success="False" time="0.567" asserts="0">
                        <results>
                          <test-case name="Kistl.API.Tests.ApplicationContextTests.IDisposable_Dispose" executed="True" success="True" time="0.415" asserts="2" />
                          <test-case name="Kistl.API.Tests.ApplicationContextTests.IDisposable_Finalizer" executed="True" success="True" time="0.006" asserts="1" />
                          <test-case name="Kistl.API.Tests.ApplicationContextTests.InitConfigFile" executed="True" success="False" time="0.039" asserts="0">
                            <failure>
                              <message><![CDATA[System.InvalidOperationException : Fehler im XML-Dokument (0,0).
  ----> System.IO.FileNotFoundException : Die Datei P:\Kistl\Tests\Kistl.API.Tests\bin\Debug\TestConfig.xml konnte nicht gefunden werden.]]></message>
                              <stack-trace><![CDATA[bei System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle, XmlDeserializationEvents events)
bei System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle)
bei System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader xmlReader)
bei Kistl.API.Configuration.KistlConfig.FromFile(String filename) in P:\Kistl\Kistl.API\Configuration\KistlConfig.cs:Zeile 202.
bei Kistl.API.ApplicationContext.LoadConfiguration(String configFile) in P:\Kistl\Kistl.API\ApplicationContext.cs:Zeile 97.
bei Kistl.API.ApplicationContext..ctor(HostType type, String configFile) in P:\Kistl\Kistl.API\ApplicationContext.cs:Zeile 85.
bei Kistl.API.Tests.ConfigTestApplicationContext..ctor(String configFilePath) in P:\Kistl\Tests\Kistl.API.Tests\Tests\ApplicationContextTests.cs:Zeile 13.
bei Kistl.API.Tests.ApplicationContextTests.InitConfigFile() in P:\Kistl\Tests\Kistl.API.Tests\Tests\ApplicationContextTests.cs:Zeile 67.
--FileNotFoundException
bei System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
bei System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy)
bei System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)
bei System.Xml.XmlDownloadManager.GetStream(Uri uri, ICredentials credentials)
bei System.Xml.XmlUrlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn)
bei System.Xml.XmlTextReaderImpl.OpenUrlDelegate(Object xmlResolver)
bei System.Threading.CompressedStack.runTryCode(Object userData)
bei System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(TryCode code, CleanupCode backoutCode, Object userData)
bei System.Threading.CompressedStack.Run(CompressedStack compressedStack, ContextCallback callback, Object state)
bei System.Xml.XmlTextReaderImpl.OpenUrl()
bei System.Xml.XmlTextReaderImpl.Read()
bei System.Xml.XmlTextReader.Read()
bei System.Xml.XmlReader.MoveToContent()
bei Microsoft.Xml.Serialization.GeneratedAssembly.XmlSerializationReaderKistlConfig.Read6_KistlConfig()
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.API.Tests.ApplicationContextTests.InitDefaultConfig" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="Kistl.API.Tests.ApplicationContextTests.InitMissingConfigFile" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Kistl.API.Tests.ApplicationContextTests.PersistsTypes" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="Kistl.API.Tests.ApplicationContextTests.SetCustomActionsManagerCallsInit" executed="True" success="True" time="0.074" asserts="1" />
                          <test-case name="Kistl.API.Tests.ApplicationContextTests.SetCustomActionsManagerNull" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Kistl.API.Tests.ApplicationContextTests.SetCustomActionsManagerTwice" executed="True" success="True" time="0.003" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="AssemblyLoaderTests" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="Kistl.API.Tests.AssemblyLoaderTests.AssemblyResolve" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="Kistl.API.Tests.AssemblyLoaderTests.AssemblyResolveReflection" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="BinarySerializerTests" success="False" time="0.169" asserts="0">
                        <results>
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.Bool" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.BoolNull" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.BoolNullValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.DateTime" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.DateTimeNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.DateTimeNullValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.Double" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.DoubleNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.DoubleNullValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.Enum" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.Float" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.FloatNull" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.FloatNullValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.ICollection_ICollectionEntry" executed="True" success="True" time="0.004" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.ICollection_IDataObject" executed="True" success="False" time="0.015" asserts="0">
                            <failure>
                              <message><![CDATA[System.IO.FileNotFoundException : Die Datei oder Assembly Kistl.Objects oder eine AbhÃ¤ngigkeit davon wurde nicht gefunden. Das System kann die angegebene Datei nicht finden.]]></message>
                              <stack-trace><![CDATA[bei System.RuntimeTypeHandle._GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark, Boolean loadTypeFromPartialName)
bei System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
bei System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
bei System.Type.GetType(String typeName, Boolean throwOnError)
bei Kistl.API.ExtensionHelpers.ToInterfaceType(Type type) in P:\Kistl\Kistl.API\Helper.cs:Zeile 288.
bei Kistl.API.SerializableType..ctor(Type type) in P:\Kistl\Kistl.API\SerializableType.cs:Zeile 38.
bei Kistl.API.Tests.TestDataObject__Implementation__.ToStream(BinaryWriter sw) in P:\Kistl\Tests\Kistl.API.Tests\TestDataObject.cs:Zeile 65.
bei Kistl.API.BinarySerializer.ToBinary(IEnumerable`1 val, BinaryWriter sw) in P:\Kistl\Kistl.API\BinarySerializer.cs:Zeile 160.
bei Kistl.API.Tests.BinarySerializerTests.ICollection_IDataObject() in P:\Kistl\Tests\Kistl.API.Tests\Tests\BinarySerializerTests.cs:Zeile 304.
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.ICollection_ObservableCollection_ICollectionEntry" executed="True" success="True" time="0.032" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.IEnumerable_IDataObject" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.IO.FileNotFoundException : Die Datei oder Assembly Kistl.Objects oder eine AbhÃ¤ngigkeit davon wurde nicht gefunden. Das System kann die angegebene Datei nicht finden.]]></message>
                              <stack-trace><![CDATA[bei System.RuntimeTypeHandle._GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark, Boolean loadTypeFromPartialName)
bei System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
bei System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
bei System.Type.GetType(String typeName, Boolean throwOnError)
bei Kistl.API.ExtensionHelpers.ToInterfaceType(Type type) in P:\Kistl\Kistl.API\Helper.cs:Zeile 288.
bei Kistl.API.SerializableType..ctor(Type type) in P:\Kistl\Kistl.API\SerializableType.cs:Zeile 38.
bei Kistl.API.Tests.TestDataObject__Implementation__.ToStream(BinaryWriter sw) in P:\Kistl\Tests\Kistl.API.Tests\TestDataObject.cs:Zeile 65.
bei Kistl.API.BinarySerializer.ToBinary(IEnumerable`1 val, BinaryWriter sw) in P:\Kistl\Kistl.API\BinarySerializer.cs:Zeile 160.
bei Kistl.API.Tests.BinarySerializerTests.IEnumerable_IDataObject() in P:\Kistl\Tests\Kistl.API.Tests\Tests\BinarySerializerTests.cs:Zeile 290.
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.Int" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.IntNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.IntNullValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.IStruct" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.IStructNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.SerializableExpression" executed="True" success="False" time="0.067" asserts="0">
                            <failure>
                              <message><![CDATA[System.IO.FileNotFoundException : Die Datei oder Assembly Kistl.Objects oder eine AbhÃ¤ngigkeit davon wurde nicht gefunden. Das System kann die angegebene Datei nicht finden.]]></message>
                              <stack-trace><![CDATA[bei System.RuntimeTypeHandle._GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark, Boolean loadTypeFromPartialName)
bei System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
bei System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
bei System.Type.GetType(String typeName, Boolean throwOnError)
bei Kistl.API.ExtensionHelpers.ToInterfaceType(Type type) in P:\Kistl\Kistl.API\Helper.cs:Zeile 288.
bei Kistl.API.ExtensionHelpers.<ToInterfaceType>b__0(Type t) in P:\Kistl\Kistl.API\Helper.cs:Zeile 276.
bei System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()
bei System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection)
bei System.Collections.Generic.List`1.AddRange(IEnumerable`1 collection)
bei Kistl.API.ExtensionHelpers.ToInterfaceType(Type type) in P:\Kistl\Kistl.API\Helper.cs:Zeile 288.
bei Kistl.API.SerializableType..ctor(Type type) in P:\Kistl\Kistl.API\SerializableType.cs:Zeile 38.
bei Kistl.API.SerializableMethodCallExpression.<.ctor>b__0(ParameterInfo p) in P:\Kistl\Kistl.API\SerializableExpression.cs:Zeile 307.
bei System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()
bei System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
bei System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
bei Kistl.API.SerializableMethodCallExpression..ctor(MethodCallExpression e, SerializationContext ctx) in P:\Kistl\Kistl.API\SerializableExpression.cs:Zeile 314.
bei Kistl.API.SerializableExpression.FromExpression(Expression e, SerializationContext ctx) in P:\Kistl\Kistl.API\SerializableExpression.cs:Zeile 137.
bei Kistl.API.SerializableExpression.FromExpression(Expression e) in P:\Kistl\Kistl.API\SerializableExpression.cs:Zeile 79.
bei Kistl.API.Tests.BinarySerializerTests.SerializableExpression() in P:\Kistl\Tests\Kistl.API.Tests\Tests\BinarySerializerTests.cs:Zeile 391.
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.SerializableType" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.SerializableType_FromBinary_NullStream" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.SerializableTypeNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.String" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.BinarySerializerTests.StringNull" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CustomActionsManagerFactoryTests" success="False" time="0.003" asserts="0">
                        <results>
                          <test-case name="Kistl.API.Tests.CustomActionsManagerFactoryTests.Init_Fail" executed="True" success="False" time="0.003" asserts="1">
                            <failure>
                              <message><![CDATA[  Expected: not null
  But was:  null
]]></message>
                              <stack-trace><![CDATA[bei Kistl.API.Tests.CustomActionsManagerFactoryTests.Init_Fail() in P:\Kistl\Tests\Kistl.API.Tests\Tests\CustomActionsManagerFactoryTests.cs:Zeile 23.
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="ExpressionFilterTest" success="True" time="0.018" asserts="0">
                        <results>
                          <test-case name="Kistl.API.Tests.ExpressionFilterTest.IllegalExpression" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="Kistl.API.Tests.ExpressionFilterTest.IllegalExpressionClass_UnknownToString" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Kistl.API.Tests.ExpressionFilterTest.LegalExpression" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ExpressionTreeVisitorTests" success="True" time="0.061" asserts="0">
                        <results>
                          <test-case name="Kistl.API.Tests.ExpressionTreeVisitorTests.Visit" executed="True" success="True" time="0.061" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ExtensionHelpersTest" success="True" time="0.257" asserts="0">
                        <results>
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.ForEach_IEnumerable" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.ForEach_List" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.ForEach_ObservableCollection" executed="True" success="True" time="0.004" asserts="1" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.GetPrivateFieldValue" executed="True" success="True" time="0.004" asserts="3" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.GetPrivateFieldValue_InvalidPropertyName" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.GetPrivatePropertyValue" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.GetPrivatePropertyValue_InvalidPropertyName" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.GetPropertyValue" executed="True" success="True" time="0.004" asserts="3" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.GetPropertyValue_InvalidPropertyName" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.In" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.InFalse" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.SetPrivateFieldValue" executed="True" success="True" time="0.003" asserts="3" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.SetPrivateFieldValue_InvalidPropertyName" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.SetPrivatePropertyValue" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.SetPrivatePropertyValue_InvalidPropertyName" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.SetPropertyValue" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.SetPropertyValue_InvalidPropertyName" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Kistl.API.Tests.ExtensionHelpersTest.XmlString" executed="True" success="True" time="0.225" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="HelperTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="Kistl.API.Tests.HelperTest.IsFloatingObjectTest" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="Kistl.API.Tests.HelperTest.IsPersistedObject" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="KistlConfigTests" success="False" time="0.020" asserts="0">
                        <results>
                          <test-case name="Kistl.API.Tests.KistlConfigTests.Current" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="Kistl.API.Tests.KistlConfigTests.FromStream" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.IO.FileNotFoundException : Die Datei P:\Kistl\Tests\Kistl.API.Tests\DefaultConfig_API.Tests.xml konnte nicht gefunden werden.]]></message>
                              <stack-trace><![CDATA[bei System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
bei System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy)
bei System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)
bei System.IO.File.OpenRead(String path)
bei Kistl.API.Tests.KistlConfigTests.FromStream() in P:\Kistl\Tests\Kistl.API.Tests\Tests\KistlConfigTests.cs:Zeile 45.
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.API.Tests.KistlConfigTests.FromTextReader" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.IO.FileNotFoundException : Die Datei P:\Kistl\Tests\Kistl.API.Tests\DefaultConfig_API.Tests.xml konnte nicht gefunden werden.]]></message>
                              <stack-trace><![CDATA[bei System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
bei System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy)
bei System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)
bei System.IO.File.OpenRead(String path)
bei Kistl.API.Tests.KistlConfigTests.FromTextReader() in P:\Kistl\Tests\Kistl.API.Tests\Tests\KistlConfigTests.cs:Zeile 56.
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.API.Tests.KistlConfigTests.ToFile" executed="True" success="True" time="0.009" asserts="2" />
                          <test-case name="Kistl.API.Tests.KistlConfigTests.ToStream" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="KistlServiceStreamsMessageTests" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="Kistl.API.Tests.KistlServiceStreamsMessageTests.Stream" executed="True" success="True" time="0.004" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="LinqExtensionsTests" success="True" time="0.141" asserts="0">
                        <results>
                          <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddEqualityCondition" executed="True" success="True" time="0.059" asserts="1" />
                          <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddEqualityCondition_InvalidProperty" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddEqualityCondition_InvalidType" executed="True" success="True" time="0.037" asserts="0" />
                          <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddFilter" executed="True" success="True" time="0.006" asserts="1" />
                          <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddFilter_IllegalExpression" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddOrderBy" executed="True" success="True" time="0.014" asserts="2" />
                          <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddOrderBy_WithQuote" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddSelector" executed="True" success="True" time="0.010" asserts="1" />
                          <test-case name="Kistl.API.Tests.LinqExtensionsTests.GetExpressionValue_Constant" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Kistl.API.Tests.LinqExtensionsTests.GetExpressionValue_LambdaExpression" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Kistl.API.Tests.LinqExtensionsTests.GetExpressionValue_MemberExpression_Field" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Kistl.API.Tests.LinqExtensionsTests.GetExpressionValue_MemberExpression_Property" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="NotifyingObservableCollectionTests" success="True" time="0.009" asserts="0">
                        <results>
                          <test-case name="Kistl.API.Tests.NotifyingObservableCollectionTests.Event" executed="True" success="True" time="0.004" asserts="1" />
                          <test-case name="Kistl.API.Tests.NotifyingObservableCollectionTests.List" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Kistl.API.Tests.NotifyingObservableCollectionTests.Property" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Kistl.API.Tests.NotifyingObservableCollectionTests.SetItem" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Kistl.API.Tests.NotifyingObservableCollectionTests.SetItem_WithBeginUpdate" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SerializableExpressionTests" success="False" time="0.007" asserts="0">
                        <results>
                          <test-case name="Kistl.API.Tests.SerializableExpressionTests.FromExpression_Null" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Kistl.API.Tests.SerializableExpressionTests.SerializableType_GetHashCode" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Kistl.API.Tests.SerializableExpressionTests.SerializableType_Invalid" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Kistl.API.Tests.SerializableExpressionTests.SerializableType_Valid" executed="True" success="False" time="0.004" asserts="0">
                            <failure>
                              <message><![CDATA[System.IO.FileNotFoundException : Die Datei oder Assembly Kistl.Objects.None oder eine AbhÃ¤ngigkeit davon wurde nicht gefunden. Das System kann die angegebene Datei nicht finden.]]></message>
                              <stack-trace><![CDATA[bei System.RuntimeTypeHandle._GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark, Boolean loadTypeFromPartialName)
bei System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
bei System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
bei System.Type.GetType(String typeName, Boolean throwOnError)
bei Kistl.API.ExtensionHelpers.ToImplementationType(Type type) in P:\Kistl\Kistl.API\Helper.cs:Zeile 329.
bei Kistl.API.SerializableType.GetSerializedType() in P:\Kistl\Kistl.API\SerializableType.cs:Zeile 94.
bei Kistl.API.Tests.SerializableExpressionTests.SerializableType_Valid() in P:\Kistl\Tests\Kistl.API.Tests\Tests\SerializableExpressionTests.cs:Zeile 31.
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>