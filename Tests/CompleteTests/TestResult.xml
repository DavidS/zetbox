<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Projekte\Kistl\Tests\CompleteTests\CompleteTests.nunit" total="594" failures="187" not-run="41" date="2008-07-15" time="22:10:27">
  <environment nunit-version="2.4.7.0" clr-version="2.0.50727.1433" os-version="Microsoft Windows NT 6.0.6000.0" platform="Win32NT" cwd="C:\Projekte\Kistl\Tests\CompleteTests" machine-name="DAVID-PC" user="david" user-domain="david-PC" />
  <culture-info current-culture="de-AT" current-uiculture="en-US" />
  <test-suite name="C:\Projekte\Kistl\Tests\CompleteTests\CompleteTests.nunit" success="False" time="8.787" asserts="0">
    <results>
      <test-suite name="C:\Projekte\Kistl\Tests\CompleteTests\bin\Debug\Kistl.API.Client.Tests.exe" success="True" time="0.607" asserts="0">
        <results>
          <test-suite name="Kistl" success="True" time="0.601" asserts="0">
            <results>
              <test-suite name="API" success="True" time="0.584" asserts="0">
                <results>
                  <test-suite name="Client" success="True" time="0.563" asserts="0">
                    <results>
                      <test-suite name="Tests" success="True" time="0.557" asserts="0">
                        <results>
                          <test-suite name="BackReferenceCollectionTests" success="True" time="0.015" asserts="0">
                            <results>
                              <test-case name="Kistl.API.Client.Tests.BackReferenceCollectionTests.AddRemoveTest" executed="True" success="True" time="0.012" asserts="12" />
                            </results>
                          </test-suite>
                          <test-suite name="BaseClientDataObjectTests" success="True" time="0.042" asserts="0">
                            <results>
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.AttachToContext" executed="True" success="True" time="0.013" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.AttachToContext_New" executed="True" success="True" time="0.001" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.AttachToContext_Twice" executed="True" success="True" time="0.001" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.Clone" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.CopyTo" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.CopyTo_Null" executed="True" success="True" time="0.002" asserts="0" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.DetachFromContext" executed="True" success="True" time="0.002" asserts="5" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.DetachFromContext_NotAttached" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.EventAttached" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.FromStream_Null_StreamReader" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.FromStream_WrongType" executed="True" success="True" time="0.004" asserts="0" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.NotifyChange" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.NotifyPropertyChanged_ing" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.ObjectState_CreatedObject" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.ObjectState_CreatedObject_Modified" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.ObjectState_New_then_UnModified" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.ObjectState_ObjectWithID" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.ObjectState_ObjectWithID_Modified" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.Stream" executed="True" success="True" time="0.003" asserts="5" />
                              <test-case name="Kistl.API.Client.Tests.BaseClientDataObjectTests.ToStream_Null" executed="True" success="True" time="0.001" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="KistlContextTests" success="True" time="0.121" asserts="0">
                            <results>
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Attach_IDataObject_Existing_Twice_But_Different" executed="True" success="True" time="0.004" asserts="3" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Attach_IDataObject_New" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Attach_IDataObject_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Attach_IDataObject_Twice" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Attach_IDataObject_Twice_Modified" executed="True" success="True" time="0.001" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Attach_IDataObject_WithList_Add" executed="True" success="True" time="0.007" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Attach_IDataObject_WithList_Insert" executed="True" success="True" time="0.002" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Attached_IDataObject_WithList_Add" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Attached_IDataObject_WithList_Insert" executed="True" success="True" time="0.001" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Create_ObjectType" executed="True" success="True" time="0.001" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Create_T" executed="True" success="True" time="0.001" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Create_T_Twice" executed="True" success="True" time="0.001" asserts="7" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Create_Type" executed="True" success="True" time="0.001" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Delete" executed="True" success="True" time="0.038" asserts="2" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Delete_Not_Attached" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Delete_Null" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Delete_Wrong_Context" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Detach" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Detach_NotAttached" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Detach_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Detach_Twice" executed="True" success="True" time="0.001" asserts="2" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Find_ObjectType" executed="True" success="True" time="0.002" asserts="1" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.Find_T" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.GetList" executed="True" success="True" time="0.010" asserts="17" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.GetList_GetListOf" executed="True" success="True" time="0.007" asserts="9" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.GetList_Twice" executed="True" success="True" time="0.001" asserts="19" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.GetListOf" executed="True" success="True" time="0.001" asserts="8" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.GetListOf_Twice" executed="True" success="True" time="0.001" asserts="10" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.GetObject" executed="True" success="True" time="0.001" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.GetObject_GetList" executed="True" success="True" time="0.002" asserts="7" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.GetObject_GetListOf" executed="True" success="True" time="0.001" asserts="7" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.GetObject_Twice" executed="True" success="True" time="0.001" asserts="5" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.GetQuery_ObjectType" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.GetQuery_T" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.SubmitChanges" executed="True" success="True" time="0.003" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.SubmitChanges_Delete" executed="True" success="True" time="0.001" asserts="5" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.SubmitChanges_New" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Kistl.API.Client.Tests.KistlContextTests.SubmitChanges_Nothing" executed="True" success="True" time="0.001" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite name="ListPropertyCollectionTests" success="True" time="0.013" asserts="0">
                            <results>
                              <test-case name="Kistl.API.Client.Tests.ListPropertyCollectionTests.AddItem" executed="True" success="True" time="0.001" asserts="3" />
                              <test-case name="Kistl.API.Client.Tests.ListPropertyCollectionTests.List" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Client.Tests.ListPropertyCollectionTests.RemoveItem" executed="True" success="True" time="0.005" asserts="6" />
                              <test-case name="Kistl.API.Client.Tests.ListPropertyCollectionTests.RemoveItem_New" executed="True" success="True" time="0.000" asserts="7" />
                              <test-case name="Kistl.API.Client.Tests.ListPropertyCollectionTests.RemoveItemAt" executed="True" success="True" time="0.001" asserts="6" />
                              <test-case name="Kistl.API.Client.Tests.ListPropertyCollectionTests.RemoveItemAt_New" executed="True" success="True" time="0.001" asserts="7" />
                              <test-case name="Kistl.API.Client.Tests.ListPropertyCollectionTests.SetItem" executed="True" success="True" time="0.000" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Projekte\Kistl\Tests\CompleteTests\bin\Debug\Kistl.API.Server.Tests.exe" success="False" time="2.146" asserts="0">
        <results>
          <test-suite name="Kistl" success="False" time="2.139" asserts="0">
            <results>
              <test-suite name="API" success="False" time="2.133" asserts="0">
                <results>
                  <test-suite name="Server" success="False" time="2.126" asserts="0">
                    <results>
                      <test-suite name="Tests" success="False" time="2.116" asserts="0">
                        <results>
                          <test-suite name="BaseServerCollectionEntryTests" success="True" time="0.999" asserts="0">
                            <results>
                              <test-case name="Kistl.API.Server.Tests.BaseServerCollectionEntryTests.Clone" executed="True" success="True" time="0.006" asserts="1" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerCollectionEntryTests.CopyTo" executed="True" success="True" time="0.019" asserts="1" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerCollectionEntryTests.CopyTo_Null" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerCollectionEntryTests.FromStream_Null_StreamReader" executed="True" success="True" time="0.959" asserts="0" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerCollectionEntryTests.NotifyPropertyChanged_ing" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerCollectionEntryTests.Stream" executed="True" success="True" time="0.004" asserts="2" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerCollectionEntryTests.ToStream_Null" executed="True" success="True" time="0.001" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="BaseServerDataObjectTests" success="True" time="0.166" asserts="0">
                            <results>
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.AttachToContext" executed="True" success="True" time="0.002" asserts="3" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.Clone" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.CopyTo" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.CopyTo_Null" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.DetachFromContext" executed="True" success="True" time="0.134" asserts="4" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.EventAttached" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.FromStream_Null_StreamReader" executed="True" success="True" time="0.002" asserts="0" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.FromStream_WrongType" executed="True" success="True" time="0.005" asserts="0" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.NotifyChange" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.NotifyPropertyChanged_ing" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.ObjectState_CreatedObject" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.ObjectState_CreatedObject_Modified" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.ObjectState_New_then_UnModified" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.ObjectState_ObjectWithID" executed="True" success="True" time="0.001" asserts="1" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.ObjectState_ObjectWithID_Modified" executed="True" success="True" time="0.001" asserts="1" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.Stream" executed="True" success="True" time="0.002" asserts="4" />
                              <test-case name="Kistl.API.Server.Tests.BaseServerDataObjectTests.ToStream_Null" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="KistlDataContextTests" success="False" time="0.605" asserts="0">
                            <results>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Attach_ICollectionEntry_Existing" executed="True" success="False" time="0.109" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Attach_ICollectionEntry_Existing_Twice" executed="True" success="False" time="0.014" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Attach_ICollectionEntry_Existing_Twice_But_Different" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Attach_ICollectionEntry_New" executed="True" success="False" time="0.011" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Attach_IDataObject_Existing" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Attach_IDataObject_Existing_Twice" executed="True" success="False" time="0.013" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Attach_IDataObject_Existing_Twice_But_Different" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Attach_IDataObject_New" executed="True" success="False" time="0.013" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.CleanUpSession" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Create_Generic" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Create_ObjectType" executed="True" success="False" time="0.011" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Create_Type" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Delete_ICollectionEntry" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Delete_IDataObject" executed="True" success="False" time="0.014" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Detach_ICollectionEntry" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Detach_IDataObject" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Detach_IDataObject_Failed" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Find_ObjectType" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.Find_T" executed="True" success="False" time="0.011" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.GetContext" executed="True" success="False" time="0.013" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.GetListOf" executed="True" success="False" time="0.023" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.GetListOf_ObjType" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.GetListOf_WrongPropertyName" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.GetQuery" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.GetQuery_ObjType" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.InitSession" executed="True" success="False" time="0.011" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.InitSessionTwice" executed="True" success="False" time="0.011" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.NoSession" executed="True" success="False" time="0.011" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.SelectSomeData" executed="True" success="False" time="0.013" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.SelectSomeData_Children" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.SelectSomeData_Collection" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.SelectSomeData_Parent" executed="True" success="False" time="0.011" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.UpdateLists_SubmitChanges" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.API.Server.Tests.KistlDataContextTests.UpdateSomeData_SubmitChanges" executed="True" success="False" time="0.012" asserts="0">
                                <failure>
                                  <message><![CDATA[System.IO.FileNotFoundException : Could not load System.Data.SqlServerCe.Entity.dll. Reinstall SQL Server Compact. 
  ----> System.IO.FileNotFoundException : Could not load file or assembly 'System.Data.SqlServerCe.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.]]></message>
                                  <stack-trace><![CDATA[at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
at System.Data.SqlServerCe.SqlCeProviderFactory.System.IServiceProvider.GetService(Type serviceType)
at System.Data.Common.DbProviderServices.GetProviderServices(DbProviderFactory factory)
at System.Data.Common.DbProviderServices.CreateProviderServices(DbConnection connection)
at System.Data.Metadata.Edm.StoreItemCollection.LoadProviderManifest(DbConnection connection, Boolean checkForSystemNamespace)
at System.Data.Metadata.Edm.StoreItemCollection.Init(DbConnection connection, IEnumerable`1 xmlReaders, IList`1 filePaths)
at System.Data.Metadata.Edm.StoreItemCollection..ctor(DbConnection connection, IEnumerable`1 xmlReaders, ReadOnlyCollection`1 filePaths)
at System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection)
at System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(StoreMetadataEntry entry)
at System.Data.Metadata.Edm.MetadataCache.LoadItemCollection[T](IItemCollectionLoader`1 itemCollectionLoader, T entry)
at System.Data.Metadata.Edm.MetadataCache.LoadStoreCollection(DbConnection connection, EdmItemCollection edmItemCollection, StoreMetadataEntry storeEntry)
at System.Data.EntityClient.EntityConnection.InitializeMetadata()
at System.Data.EntityClient.EntityConnection.InitializeMetadata(DbConnection newConnection, DbConnection originalConnection, Boolean closeOriginalConnectionOnFailure)
at System.Data.EntityClient.EntityConnection.Open()
at System.Data.Objects.ObjectContext.EnsureConnection()
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetExecutionInfo(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults(MergeOption mergeOption)
at System.Data.Objects.Internal.ObjectQueryImplementation`1.GetResults()
at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
at Kistl.API.Server.Tests.KistlDataContextTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.API.Server.Tests\Tests\KistlDataContextTests.cs:line 23
--FileNotFoundException
at System.Reflection.Assembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, Assembly locationHint, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
at System.Reflection.Assembly.Load(String assemblyString)
at System.Data.SqlServerCe.ExtensionMethods.SystemDataSqlServerCeSqlCeProviderServices_Instance()
]]></stack-trace>
                                </failure>
                              </test-case>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Projekte\Kistl\Tests\CompleteTests\bin\Debug\Kistl.API.Tests.exe" success="False" time="0.509" asserts="0">
        <results>
          <test-suite name="Kistl" success="False" time="0.502" asserts="0">
            <results>
              <test-suite name="API" success="False" time="0.494" asserts="0">
                <results>
                  <test-suite name="Tests" success="False" time="0.486" asserts="0">
                    <failure>
                      <message><![CDATA[System.UnauthorizedAccessException : Access to the path 'C:\Users\david\AppData\Local\dasz\Kistl\API's Test Configuration\domain-Kistl.API.Tests.exe\bin\Kistl.App.Projekte.Client.dll' is denied.]]></message>
                      <stack-trace><![CDATA[at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
at System.IO.File.Delete(String path)
at Kistl.API.APIInit.<Init>b__0(String f) in C:\Projekte\Kistl\Kistl.API\APIInit.cs:line 59
at Kistl.API.ExtensionHelpers.ForEach[T](IEnumerable lst, Action`1 action) in C:\Projekte\Kistl\Kistl.API\Helper.cs:line 186
at Kistl.API.APIInit.Init(HostType type, String configFile) in C:\Projekte\Kistl\Kistl.API\APIInit.cs:line 59
at Kistl.API.Tests.SetUp.Init() in C:\Projekte\Kistl\Tests\Kistl.API.Tests\SetUp.cs:line 20
]]></stack-trace>
                    </failure>
                    <results>
                      <test-case name="Kistl.API.Tests.APIInitTest.SecondInitFail" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-suite name="Kistl.API.Tests.APIInitTest" success="False" time="0.000" asserts="0">
                        <results />
                      </test-suite>
                      <test-case name="Kistl.API.Tests.AssemblyLoaderTests.AssemblyResolve" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.AssemblyLoaderTests.Load" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.AssemblyLoaderTests.ReflectionOnlyLoadFrom" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-suite name="Kistl.API.Tests.AssemblyLoaderTests" success="False" time="0.000" asserts="0">
                        <results />
                      </test-suite>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.Bool" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.BoolNull" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.BoolNullValue" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.DateTime" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.DateTimeNull" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.Double" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.DoubleNull" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.DoubleNullValue" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.Enum" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.Float" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.FloatNull" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.FloatNullValue" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.ICollection_ICollectionEntry" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.ICollection_ObservableCollection_ICollectionEntry" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.IEnumerable_IDataObject" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.Int" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.IntNull" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.IntNullValue" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.SerializableExpression" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.SerializableType" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.SerializableTypeNull" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.String" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.BinarySerializerTests.StringNull" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-suite name="Kistl.API.Tests.BinarySerializerTests" success="False" time="0.000" asserts="0">
                        <results />
                      </test-suite>
                      <test-case name="Kistl.API.Tests.CustomActionsManagerFactoryTests.Init_Fail" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-suite name="Kistl.API.Tests.CustomActionsManagerFactoryTests" success="False" time="0.000" asserts="0">
                        <results />
                      </test-suite>
                      <test-case name="Kistl.API.Tests.ExpressionFilterTest.IllegalExpression" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.ExpressionFilterTest.IllegalExpressionClass_UnknownToString" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.ExpressionFilterTest.LegalExpression" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-suite name="Kistl.API.Tests.ExpressionFilterTest" success="False" time="0.000" asserts="0">
                        <results />
                      </test-suite>
                      <test-case name="Kistl.API.Tests.ExpressionTreeVisitorTests.Visit" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-suite name="Kistl.API.Tests.ExpressionTreeVisitorTests" success="False" time="0.000" asserts="0">
                        <results />
                      </test-suite>
                      <test-case name="Kistl.API.Tests.ExtensionHelpersTest.ForEach_IEnumerable" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.ExtensionHelpersTest.ForEach_ObservableCollection" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.ExtensionHelpersTest.GetPropertyValue" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.ExtensionHelpersTest.GetPropertyValue_InvalidPropertyName" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.ExtensionHelpersTest.In" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.ExtensionHelpersTest.InFalse" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.ExtensionHelpersTest.SetPropertyValue" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.ExtensionHelpersTest.SetPropertyValue_InvalidPropertyName" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.ExtensionHelpersTest.XmlString" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-suite name="Kistl.API.Tests.ExtensionHelpersTest" success="False" time="0.000" asserts="0">
                        <results />
                      </test-suite>
                      <test-case name="Kistl.API.Tests.KistlConfigTests.Current" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.KistlConfigTests.FromStream" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.KistlConfigTests.FromTextReader" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.KistlConfigTests.ToFile" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.KistlConfigTests.ToStream" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-suite name="Kistl.API.Tests.KistlConfigTests" success="False" time="0.000" asserts="0">
                        <results />
                      </test-suite>
                      <test-case name="Kistl.API.Tests.KistlServiceStreamsMessageTests.Stream" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-suite name="Kistl.API.Tests.KistlServiceStreamsMessageTests" success="False" time="0.000" asserts="0">
                        <results />
                      </test-suite>
                      <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddEqualityCondition" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddEqualityCondition_InvalidProperty" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddEqualityCondition_InvalidType" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddFilter" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddFilter_IllegalExpression" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddOrderBy" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.LinqExtensionsTests.AddOrderBy_WithQuote" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.LinqExtensionsTests.GetExpressionValue_Constant" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.LinqExtensionsTests.GetExpressionValue_LambdaExpression" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.LinqExtensionsTests.GetExpressionValue_MemberExpression_Field" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.LinqExtensionsTests.GetExpressionValue_MemberExpression_Property" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-suite name="Kistl.API.Tests.LinqExtensionsTests" success="False" time="0.000" asserts="0">
                        <results />
                      </test-suite>
                      <test-case name="Kistl.API.Tests.NotifyingObservableCollectionTests.Event" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.NotifyingObservableCollectionTests.List" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.NotifyingObservableCollectionTests.SetItem" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-suite name="Kistl.API.Tests.NotifyingObservableCollectionTests" success="False" time="0.000" asserts="0">
                        <results />
                      </test-suite>
                      <test-case name="Kistl.API.Tests.SerializableExpressionTests.FromExpression_Null" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-case name="Kistl.API.Tests.SerializableExpressionTests.SerializableType_Valid" executed="True" success="False" time="0.000" asserts="0">
                        <failure>
                          <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                          <stack-trace />
                        </failure>
                      </test-case>
                      <test-suite name="Kistl.API.Tests.SerializableExpressionTests" success="False" time="0.000" asserts="0">
                        <results />
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Projekte\Kistl\Tests\CompleteTests\bin\Debug\Kistl.Client.Tests.exe" success="False" time="3.431" asserts="0">
        <results>
          <test-suite name="Kistl" success="False" time="3.075" asserts="0">
            <results>
              <test-suite name="GUI" success="False" time="3.064" asserts="0">
                <results>
                  <test-suite name="Integration" success="False" time="1.886" asserts="0">
                    <results>
                      <test-suite name="WPF" success="False" time="1.885" asserts="0">
                        <results>
                          <test-suite name="ObjectReferenceControlIntegrationTests" success="False" time="1.885" asserts="2">
                            <results>
                              <test-case name="Kistl.GUI.Integration.WPF.ObjectReferenceControlIntegrationTests.HandleInvalidUserInput" executed="True" success="False" time="1.736" asserts="3">
                                <failure>
                                  <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                                  <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferencePresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 114
at Kistl.GUI.Tests.ReferencePresenterTests`4.HandleInvalidUserInput() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 503
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.GUI.Integration.WPF.ObjectReferenceControlIntegrationTests.HandleNoUserInput" executed="True" success="False" time="0.008" asserts="5">
                                <failure>
                                  <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                                  <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferencePresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 114
at Kistl.GUI.Tests.ReferencePresenterTests`4.HandleNoUserInput() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 457
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.GUI.Integration.WPF.ObjectReferenceControlIntegrationTests.HandleNullUserInput" executed="True" success="False" time="0.005" asserts="3">
                                <failure>
                                  <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                                  <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferencePresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 114
at Kistl.GUI.Tests.ReferencePresenterTests`4.HandleNullUserInput() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 463
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.GUI.Integration.WPF.ObjectReferenceControlIntegrationTests.HandleProgrammaticChange" executed="True" success="False" time="0.004" asserts="3">
                                <failure>
                                  <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                                  <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferencePresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 114
at Kistl.GUI.Tests.ReferencePresenterTests`4.HandleProgrammaticChange() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 543
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.GUI.Integration.WPF.ObjectReferenceControlIntegrationTests.HandleValidUserInput" executed="True" success="False" time="0.004" asserts="3">
                                <failure>
                                  <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                                  <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferencePresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 114
at Kistl.GUI.Tests.ReferencePresenterTests`4.HandleValidUserInput() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 489
]]></stack-trace>
                                </failure>
                              </test-case>
                              <test-case name="Kistl.GUI.Integration.WPF.ObjectReferenceControlIntegrationTests.ReInit" executed="True" success="True" time="0.005" asserts="0" />
                              <test-case name="Kistl.GUI.Integration.WPF.ObjectReferenceControlIntegrationTests.TestPresenterSetUpCorrect" executed="True" success="True" time="0.006" asserts="11" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Renderer" success="True" time="0.715" asserts="0">
                    <results>
                      <test-suite name="ASPNET" success="True" time="0.035" asserts="0">
                        <results>
                          <test-suite name="Tests" success="True" time="0.034" asserts="0">
                            <results>
                              <test-suite name="BoolControlTests" success="True" time="0.004" asserts="0">
                                <results>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.BoolControlTests.TestDescription" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.BoolControlTests.TestFieldSize" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.BoolControlTests.TestIsValidValue" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.BoolControlTests.TestSetUpCorrect" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.BoolControlTests.TestShortLabel" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.BoolControlTests.TestUserInput" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.BoolControlTests.TestValueProgrammatically" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite name="DateTimeControlTests" success="True" time="0.005" asserts="0">
                                <results>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DateTimeControlTests.TestDescription" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DateTimeControlTests.TestFieldSize" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DateTimeControlTests.TestIsValidValue" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DateTimeControlTests.TestSetUpCorrect" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DateTimeControlTests.TestShortLabel" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DateTimeControlTests.TestUserInput" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DateTimeControlTests.TestValueProgrammatically" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite name="DoubleControlTests" success="True" time="0.005" asserts="0">
                                <results>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DoubleControlTests.TestDescription" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DoubleControlTests.TestFieldSize" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DoubleControlTests.TestIsValidValue" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DoubleControlTests.TestSetUpCorrect" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DoubleControlTests.TestShortLabel" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DoubleControlTests.TestUserInput" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.DoubleControlTests.TestValueProgrammatically" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite name="IntControlTests" success="True" time="0.005" asserts="0">
                                <results>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.IntControlTests.TestDescription" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.IntControlTests.TestFieldSize" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.IntControlTests.TestIsValidValue" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.IntControlTests.TestSetUpCorrect" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.IntControlTests.TestShortLabel" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.IntControlTests.TestUserInput" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.IntControlTests.TestValueProgrammatically" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                              <test-suite name="StringControlTests" success="True" time="0.004" asserts="0">
                                <results>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.StringControlTests.TestDescription" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.StringControlTests.TestFieldSize" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.StringControlTests.TestIsValidValue" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.StringControlTests.TestSetUpCorrect" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.StringControlTests.TestShortLabel" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.StringControlTests.TestUserInput" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.ASPNET.Tests.StringControlTests.TestValueProgrammatically" executed="False">
                                    <reason>
                                      <message><![CDATA[TODO: ASP.NET Testframework]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="WPF" success="True" time="0.666" asserts="0">
                        <results>
                          <test-suite name="Tests" success="True" time="0.666" asserts="0">
                            <results>
                              <test-suite name="BoolControlTests" success="True" time="0.056" asserts="2">
                                <results>
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.BoolControlTests.TestDescription" executed="True" success="True" time="0.020" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.BoolControlTests.TestFieldSize" executed="True" success="True" time="0.012" asserts="11" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.BoolControlTests.TestIsValidValue" executed="True" success="True" time="0.006" asserts="15" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.BoolControlTests.TestSetUpCorrect" executed="True" success="True" time="0.002" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.BoolControlTests.TestShortLabel" executed="True" success="True" time="0.002" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.BoolControlTests.TestUserInput" executed="True" success="True" time="0.007" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.BoolControlTests.TestValueProgrammatically" executed="True" success="True" time="0.002" asserts="5" />
                                </results>
                              </test-suite>
                              <test-suite name="DateTimeControlTests" success="True" time="0.185" asserts="2">
                                <results>
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DateTimeControlTests.TestDescription" executed="True" success="True" time="0.162" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DateTimeControlTests.TestFieldSize" executed="True" success="True" time="0.001" asserts="11" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DateTimeControlTests.TestIsValidValue" executed="True" success="True" time="0.002" asserts="15" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DateTimeControlTests.TestSetUpCorrect" executed="True" success="True" time="0.001" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DateTimeControlTests.TestShortLabel" executed="True" success="True" time="0.000" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DateTimeControlTests.TestUserInput" executed="True" success="True" time="0.012" asserts="15" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DateTimeControlTests.TestValueProgrammatically" executed="True" success="True" time="0.002" asserts="15" />
                                </results>
                              </test-suite>
                              <test-suite name="DoubleControlTests" success="True" time="0.252" asserts="2">
                                <results>
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DoubleControlTests.TestDescription" executed="True" success="True" time="0.171" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DoubleControlTests.TestFieldSize" executed="True" success="True" time="0.002" asserts="11" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DoubleControlTests.TestIsValidValue" executed="True" success="True" time="0.002" asserts="15" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DoubleControlTests.TestSetUpCorrect" executed="True" success="True" time="0.000" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DoubleControlTests.TestShortLabel" executed="True" success="True" time="0.001" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DoubleControlTests.TestUserInput" executed="True" success="True" time="0.062" asserts="33" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.DoubleControlTests.TestValueProgrammatically" executed="True" success="True" time="0.003" asserts="33" />
                                </results>
                              </test-suite>
                              <test-suite name="IntControlTests" success="True" time="0.021" asserts="2">
                                <results>
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.IntControlTests.TestDescription" executed="True" success="True" time="0.002" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.IntControlTests.TestFieldSize" executed="True" success="True" time="0.001" asserts="11" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.IntControlTests.TestIsValidValue" executed="True" success="True" time="0.002" asserts="15" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.IntControlTests.TestSetUpCorrect" executed="True" success="True" time="0.000" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.IntControlTests.TestShortLabel" executed="True" success="True" time="0.001" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.IntControlTests.TestUserInput" executed="True" success="True" time="0.008" asserts="35" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.IntControlTests.TestValueProgrammatically" executed="True" success="True" time="0.002" asserts="35" />
                                </results>
                              </test-suite>
                              <test-suite name="ListValuesTests" success="True" time="0.045" asserts="0">
                                <results>
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ListValuesTests.TestInvalids" executed="True" success="True" time="0.021" asserts="8" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ListValuesTests.TestIsValid" executed="True" success="True" time="0.002" asserts="14" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ListValuesTests.TestNonUniqueListGenerationCore" executed="True" success="True" time="0.011" asserts="7" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ListValuesTests.TestNonUniqueListGenerationWithEmpty" executed="True" success="True" time="0.002" asserts="37" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ListValuesTests.TestNonUniqueListGenerationWithoutEmpty" executed="True" success="True" time="0.001" asserts="37" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ListValuesTests.TestUniqueListGenerationCore" executed="True" success="True" time="0.002" asserts="6" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ListValuesTests.TestUniqueListGenerationWithEmpty" executed="True" success="True" time="0.000" asserts="22" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ListValuesTests.TestUniqueListGenerationWithoutEmpty" executed="True" success="True" time="0.000" asserts="21" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ListValuesTests.TestValids" executed="True" success="True" time="0.001" asserts="48" />
                                </results>
                              </test-suite>
                              <test-suite name="ObjectListControlTests" success="True" time="0.062" asserts="2">
                                <results>
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectListControlTests.TestDescription" executed="True" success="True" time="0.022" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectListControlTests.TestFieldSize" executed="True" success="True" time="0.001" asserts="11" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectListControlTests.TestIsValidValue" executed="True" success="True" time="0.001" asserts="15" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectListControlTests.TestItemsSource" executed="False">
                                    <reason>
                                      <message><![CDATA[unimplemented]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectListControlTests.TestListboxProgrammatically" executed="True" success="True" time="0.009" asserts="23" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectListControlTests.TestListboxUserInput" executed="True" success="True" time="0.002" asserts="23" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectListControlTests.TestNullValue" executed="True" success="True" time="0.001" asserts="1" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectListControlTests.TestObjectType" executed="True" success="True" time="0.002" asserts="7" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectListControlTests.TestSetUpCorrect" executed="True" success="True" time="0.000" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectListControlTests.TestShortLabel" executed="True" success="True" time="0.001" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectListControlTests.TestUserInput" executed="True" success="True" time="0.003" asserts="15" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectListControlTests.TestValueProgrammatically" executed="True" success="True" time="0.003" asserts="15" />
                                </results>
                              </test-suite>
                              <test-suite name="ObjectReferenceControlTests" success="True" time="0.021" asserts="2">
                                <results>
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectReferenceControlTests.TestComboboxProgrammatically" executed="True" success="True" time="0.004" asserts="21" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectReferenceControlTests.TestComboboxUserInput" executed="True" success="True" time="0.002" asserts="21" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectReferenceControlTests.TestDescription" executed="True" success="True" time="0.001" asserts="6" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectReferenceControlTests.TestFieldSize" executed="True" success="True" time="0.001" asserts="12" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectReferenceControlTests.TestIsValidValue" executed="True" success="True" time="0.001" asserts="16" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectReferenceControlTests.TestItemsSource" executed="False">
                                    <reason>
                                      <message><![CDATA[unimplemented]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectReferenceControlTests.TestObjectType" executed="True" success="True" time="0.002" asserts="8" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectReferenceControlTests.TestSetUpCorrect" executed="True" success="True" time="0.001" asserts="6" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectReferenceControlTests.TestShortLabel" executed="True" success="True" time="0.000" asserts="6" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectReferenceControlTests.TestUserInput" executed="True" success="True" time="0.002" asserts="14" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.ObjectReferenceControlTests.TestValueProgrammatically" executed="True" success="True" time="0.001" asserts="14" />
                                </results>
                              </test-suite>
                              <test-suite name="StringControlTests" success="True" time="0.013" asserts="2">
                                <results>
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.StringControlTests.TestDescription" executed="True" success="True" time="0.002" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.StringControlTests.TestFieldSize" executed="True" success="True" time="0.001" asserts="11" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.StringControlTests.TestIsValidValue" executed="True" success="True" time="0.001" asserts="15" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.StringControlTests.TestSetUpCorrect" executed="True" success="True" time="0.001" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.StringControlTests.TestShortLabel" executed="True" success="True" time="0.001" asserts="5" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.StringControlTests.TestUserInput" executed="True" success="True" time="0.002" asserts="35" />
                                  <test-case name="Kistl.GUI.Renderer.WPF.Tests.StringControlTests.TestValueProgrammatically" executed="True" success="True" time="0.001" asserts="35" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Tests" success="False" time="0.445" asserts="0">
                    <results>
                      <test-suite name="BackReferencePresenterTests" success="False" time="0.064" asserts="2">
                        <results>
                          <test-case name="Kistl.GUI.Tests.BackReferencePresenterTests.HandleInvalidUserInput" executed="True" success="False" time="0.034" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentException : Exception of type 'System.ArgumentException' was thrown.
Parameter name: typeName@0]]></message>
                              <stack-trace><![CDATA[at System.RuntimeTypeHandle._GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark, Boolean loadTypeFromPartialName)
at System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName, Boolean throwOnError)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 70
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.BackReferencePresenterTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 295
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.BackReferencePresenterTests.HandleNoUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentException : Exception of type 'System.ArgumentException' was thrown.
Parameter name: typeName@0]]></message>
                              <stack-trace><![CDATA[at System.RuntimeTypeHandle._GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark, Boolean loadTypeFromPartialName)
at System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName, Boolean throwOnError)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 70
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.BackReferencePresenterTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 295
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.BackReferencePresenterTests.HandleNullUserInput" executed="False">
                            <reason>
                              <message><![CDATA[Has to be re-evaluated after List/generic Presenter refactoring]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.BackReferencePresenterTests.HandleProgrammaticChange" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentException : Exception of type 'System.ArgumentException' was thrown.
Parameter name: typeName@0]]></message>
                              <stack-trace><![CDATA[at System.RuntimeTypeHandle._GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark, Boolean loadTypeFromPartialName)
at System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName, Boolean throwOnError)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 70
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.BackReferencePresenterTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 295
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.BackReferencePresenterTests.HandleValidUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentException : Exception of type 'System.ArgumentException' was thrown.
Parameter name: typeName@0]]></message>
                              <stack-trace><![CDATA[at System.RuntimeTypeHandle._GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark, Boolean loadTypeFromPartialName)
at System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName, Boolean throwOnError)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 70
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.BackReferencePresenterTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 295
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.BackReferencePresenterTests.ReInit" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentException : Exception of type 'System.ArgumentException' was thrown.
Parameter name: typeName@0]]></message>
                              <stack-trace><![CDATA[at System.RuntimeTypeHandle._GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark, Boolean loadTypeFromPartialName)
at System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName, Boolean throwOnError)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 70
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.BackReferencePresenterTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 295
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.BackReferencePresenterTests.TestPresenterSetUpCorrect" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentException : Exception of type 'System.ArgumentException' was thrown.
Parameter name: typeName@0]]></message>
                              <stack-trace><![CDATA[at System.RuntimeTypeHandle._GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark, Boolean loadTypeFromPartialName)
at System.RuntimeTypeHandle.GetTypeByName(String name, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName, Boolean throwOnError)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 70
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.BackReferencePresenterTests.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 295
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="BoolPresenterTests" success="False" time="0.024" asserts="2">
                        <results>
                          <test-case name="Kistl.GUI.Tests.BoolPresenterTests.HandleInvalidUserInput" executed="True" success="False" time="0.003" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.BoolPresenterTests.HandleNoUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.BoolPresenterTests.HandleNullUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.BoolPresenterTests.HandleProgrammaticChange" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.BoolPresenterTests.HandleValidUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.BoolPresenterTests.ReInit" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.BoolPresenterTests.TestPresenterSetUpCorrect" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="DateTimePresenterTests" success="False" time="0.024" asserts="2">
                        <results>
                          <test-case name="Kistl.GUI.Tests.DateTimePresenterTests.HandleInvalidUserInput" executed="True" success="False" time="0.002" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.DateTimePresenterTests.HandleNoUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.DateTimePresenterTests.HandleNullUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.DateTimePresenterTests.HandleProgrammaticChange" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.DateTimePresenterTests.HandleValidUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.DateTimePresenterTests.ReInit" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.DateTimePresenterTests.TestPresenterSetUpCorrect" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="DoublePresenterTests" success="False" time="0.026" asserts="2">
                        <results>
                          <test-case name="Kistl.GUI.Tests.DoublePresenterTests.HandleInvalidUserInput" executed="True" success="False" time="0.002" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.DoublePresenterTests.HandleNoUserInput" executed="True" success="False" time="0.002" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.DoublePresenterTests.HandleNullUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.DoublePresenterTests.HandleProgrammaticChange" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.DoublePresenterTests.HandleValidUserInput" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.DoublePresenterTests.ReInit" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.DoublePresenterTests.TestPresenterSetUpCorrect" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="GenericPresenterCreationTests" success="True" time="0.022" asserts="2">
                        <results>
                          <test-case name="Kistl.GUI.Tests.GenericPresenterCreationTests.CreatePresenter" executed="True" success="True" time="0.012" asserts="2" />
                          <test-case name="Kistl.GUI.Tests.GenericPresenterCreationTests.ReInit" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="Kistl.GUI.Tests.GenericPresenterCreationTests.TestPresenterSetUpCorrect" executed="True" success="True" time="0.004" asserts="11" />
                        </results>
                      </test-suite>
                      <test-suite name="GuiDbTests" success="False" time="0.050" asserts="2">
                        <results>
                          <test-case name="Kistl.GUI.Tests.GuiDbTests.CreatePresenterFailNoInfo" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.GuiDbTests.CreatePresenterFailNoObject" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.GuiDbTests.CreatePresenterFailNoVisual" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.GuiDbTests.CreatePresenterFailNoWidget" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.GuiDbTests.FindControlFailNoVisualType" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.GuiDbTests.FindPresenterFailNoProperty" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.GuiDbTests.FindPresenterFailNoVisual" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.GuiDbTests.ReInit" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.GuiDbTests.TestCreateRenderer" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.GuiDbTests.TestFindControlByVisual" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.GuiDbTests.TestFindPresenter" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.GuiDbTests.TestPresenterSetUpCorrect" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="IntPresenterTests" success="False" time="0.024" asserts="2">
                        <results>
                          <test-case name="Kistl.GUI.Tests.IntPresenterTests.HandleInvalidUserInput" executed="True" success="False" time="0.002" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.IntPresenterTests.HandleNoUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.IntPresenterTests.HandleNullUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.IntPresenterTests.HandleProgrammaticChange" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.IntPresenterTests.HandleValidUserInput" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.IntPresenterTests.ReInit" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.IntPresenterTests.TestPresenterSetUpCorrect" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="ObjectListPresenterTests" success="False" time="0.070" asserts="2">
                        <results>
                          <test-case name="Kistl.GUI.Tests.ObjectListPresenterTests.HandleInvalidUserInput" executed="True" success="False" time="0.015" asserts="3">
                            <failure>
                              <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                              <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferenceListPresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 215
at Kistl.GUI.Tests.ReferenceListPresenterTests`4.HandleInvalidUserInput() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 661
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.ObjectListPresenterTests.HandleNoUserInput" executed="True" success="False" time="0.010" asserts="5">
                            <failure>
                              <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                              <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferenceListPresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 215
at Kistl.GUI.Tests.ReferenceListPresenterTests`4.HandleNoUserInput() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 614
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.ObjectListPresenterTests.HandleNullUserInput" executed="False">
                            <reason>
                              <message><![CDATA[Has to be re-evaluated after List/generic Presenter refactoring]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.ObjectListPresenterTests.HandleProgrammaticChange" executed="True" success="False" time="0.009" asserts="3">
                            <failure>
                              <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                              <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferenceListPresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 215
at Kistl.GUI.Tests.ReferenceListPresenterTests`4.HandleProgrammaticChange() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 697
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.ObjectListPresenterTests.HandleValidUserInput" executed="True" success="False" time="0.009" asserts="3">
                            <failure>
                              <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                              <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferenceListPresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 215
at Kistl.GUI.Tests.ReferenceListPresenterTests`4.HandleValidUserInput() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 647
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.ObjectListPresenterTests.ReInit" executed="True" success="True" time="0.008" asserts="0" />
                          <test-case name="Kistl.GUI.Tests.ObjectListPresenterTests.TestPresenterSetUpCorrect" executed="True" success="True" time="0.008" asserts="11" />
                        </results>
                      </test-suite>
                      <test-suite name="ObjectReferencePresenterTests" success="False" time="0.060" asserts="2">
                        <results>
                          <test-case name="Kistl.GUI.Tests.ObjectReferencePresenterTests.HandleInvalidUserInput" executed="True" success="False" time="0.005" asserts="3">
                            <failure>
                              <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                              <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferencePresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 114
at Kistl.GUI.Tests.ReferencePresenterTests`4.HandleInvalidUserInput() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 503
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.ObjectReferencePresenterTests.HandleNoUserInput" executed="True" success="False" time="0.005" asserts="5">
                            <failure>
                              <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                              <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferencePresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 114
at Kistl.GUI.Tests.ReferencePresenterTests`4.HandleNoUserInput() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 457
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.ObjectReferencePresenterTests.HandleNullUserInput" executed="True" success="False" time="0.005" asserts="3">
                            <failure>
                              <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                              <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferencePresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 114
at Kistl.GUI.Tests.ReferencePresenterTests`4.HandleNullUserInput() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 463
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.ObjectReferencePresenterTests.HandleProgrammaticChange" executed="True" success="False" time="0.005" asserts="3">
                            <failure>
                              <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                              <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferencePresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 114
at Kistl.GUI.Tests.ReferencePresenterTests`4.HandleProgrammaticChange() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 543
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.ObjectReferencePresenterTests.HandleValidUserInput" executed="True" success="False" time="0.006" asserts="3">
                            <failure>
                              <message><![CDATA[  cannot find entry 'TestObject<ID = 2>' in ItemsSource
  Expected: True
  But was:  False
]]></message>
                              <stack-trace><![CDATA[at Kistl.GUI.Tests.ObjectReferencePresenterInfrastructure`3.AssertWidgetHasValidValue() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\ObjectPresenterTests.cs:line 114
at Kistl.GUI.Tests.ReferencePresenterTests`4.HandleValidUserInput() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 489
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.ObjectReferencePresenterTests.ReInit" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="Kistl.GUI.Tests.ObjectReferencePresenterTests.TestGenerics" executed="True" success="True" time="0.005" asserts="3" />
                          <test-case name="Kistl.GUI.Tests.ObjectReferencePresenterTests.TestPresenterSetUpCorrect" executed="True" success="True" time="0.005" asserts="11" />
                        </results>
                      </test-suite>
                      <test-suite name="RendererTests" success="False" time="0.009" asserts="0">
                        <results>
                          <test-case name="Kistl.GUI.Tests.RendererTests.TestCreateControl" executed="True" success="False" time="0.004" asserts="1">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Renderer.BasicRenderer`3.CreateControl(IDataObject obj, Visual visual) in C:\Projekte\Kistl\Kistl.Client\GUI\Renderer.BasicRenderer.cs:line 89
at Kistl.GUI.Tests.RendererTests.TestCreateControl() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\RendererTests.cs:line 21
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.RendererTests.TestCreateObjectControl" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="StringPresenterTests" success="False" time="0.024" asserts="2">
                        <results>
                          <test-case name="Kistl.GUI.Tests.StringPresenterTests.HandleInvalidUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.StringPresenterTests.HandleNoUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.StringPresenterTests.HandleNullUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.StringPresenterTests.HandleProgrammaticChange" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.StringPresenterTests.HandleValidUserInput" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.StringPresenterTests.ReInit" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.StringPresenterTests.TestPresenterSetUpCorrect" executed="True" success="False" time="0.001" asserts="0">
                            <failure>
                              <message><![CDATA[System.ArgumentNullException : Value cannot be null.
Parameter name: TypeName]]></message>
                              <stack-trace><![CDATA[at System.RuntimeType.PrivateGetType(String typeName, Boolean throwOnError, Boolean ignoreCase, Boolean reflectionOnly, StackCrawlMark& stackMark)
at System.Type.GetType(String typeName)
at Kistl.Client.TheseMethodsShouldBeImplementedOnKistlObjects.GetDataCLRType(BaseProperty p) in C:\Projekte\Kistl\Kistl.Client\TheseMethodsShouldBeImplementedOnKistlObjects.cs:line 66
at Kistl.GUI.DB.KistlGUIContext.CreatePresenter(PresenterInfo info, IDataObject obj, Visual v, IBasicControl ctrl) in C:\Projekte\Kistl\Kistl.Client\GUI.DB\KistlGUIContext.cs:line 68
at Kistl.GUI.Mocks.PresenterHarness`3.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\Mocks\PresenterHarness.cs:line 32
at Kistl.GUI.Tests.PresenterTests`4.SetUp() in C:\Projekte\Kistl\Tests\Kistl.Client.Tests\GUI\PresenterTests.cs:line 97
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="TemplateTests" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="Kistl.GUI.Tests.TemplateTests.TestDefaultsOther" executed="False">
                            <reason>
                              <message><![CDATA[unable to test at the moment, because ClientHelper.Objectclasses cannot be mocked]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.TemplateTests.TestDefaultUnknownObjectType" executed="False">
                            <reason>
                              <message><![CDATA[unable to test at the moment, because ClientHelper.Objectclasses cannot be mocked]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Kistl.GUI.Tests.TemplateTests.TestProperties" executed="True" success="True" time="0.001" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="VisualTests" success="True" time="0.007" asserts="0">
                        <results>
                          <test-case name="Kistl.GUI.Tests.VisualTests.TestDefaults" executed="True" success="True" time="0.003" asserts="9" />
                          <test-case name="Kistl.GUI.Tests.VisualTests.TestEnumeration" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Kistl.GUI.Tests.VisualTests.TestFailure" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Kistl.GUI.Tests.VisualTests.TestProperties" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="Kistl.GUI.Tests.VisualTests.TestValueType" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Projekte\Kistl\Tests\CompleteTests\bin\Debug\Kistl.IntegrationTests.exe" success="False" time="0.958" asserts="0">
        <results>
          <test-suite name="Kistl" success="False" time="0.941" asserts="0">
            <results>
              <test-suite name="IntegrationTests" success="False" time="0.935" asserts="0">
                <failure>
                  <message><![CDATA[System.UnauthorizedAccessException : Access to the path 'C:\Users\david\AppData\Local\dasz\Kistl\Integrations's Test Configuration\ServerAppDomain\bin\Kistl.App.Projekte.Server.dll' is denied.]]></message>
                  <stack-trace><![CDATA[at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
at System.IO.File.Delete(String path)
at Kistl.API.APIInit.<Init>b__0(String f) in C:\Projekte\Kistl\Kistl.API\APIInit.cs:line 59
at Kistl.API.ExtensionHelpers.ForEach[T](IEnumerable lst, Action`1 action) in C:\Projekte\Kistl\Kistl.API\Helper.cs:line 186
at Kistl.API.APIInit.Init(HostType type, String configFile) in C:\Projekte\Kistl\Kistl.API\APIInit.cs:line 59
at Kistl.API.APIInit.Init(HostType type, String configFile)
at Kistl.Client.Client.Start() in C:\Projekte\Kistl\Kistl.Client\Client.cs:line 46
at Kistl.IntegrationTests.SetUp.Init() in C:\Projekte\Kistl\Tests\Kistl.IntegrationTests\SetUp.cs:line 26
]]></stack-trace>
                </failure>
                <results>
                  <test-case name="Kistl.IntegrationTests.GeneratorTests.Generate" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-suite name="Kistl.IntegrationTests.GeneratorTests" success="False" time="0.000" asserts="0">
                    <results />
                  </test-suite>
                  <test-case name="Kistl.IntegrationTests.GetListTests.GetList" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.GetListTests.GetList_GetObject" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.GetListTests.GetList_Twice" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.GetListTests.GetListWithOrderBy" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.GetListTests.GetListWithParameterIllegal" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.GetListTests.GetListWithParameterLegal" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.GetListTests.GetListWithTop10" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.GetListTests.GetObject_GetList" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-suite name="Kistl.IntegrationTests.GetListTests" success="False" time="0.000" asserts="0">
                    <results />
                  </test-suite>
                  <test-case name="Kistl.IntegrationTests.InheritanceTests.GetListOfInheritedObjects" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.InheritanceTests.UpdateInheritedObject" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-suite name="Kistl.IntegrationTests.InheritanceTests" success="False" time="0.000" asserts="0">
                    <results />
                  </test-suite>
                  <test-case name="Kistl.IntegrationTests.ListPropetiesTests.AddStringListPropertyContent" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.ListPropetiesTests.DeleteStringListPropertyContent" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.ListPropetiesTests.GetPointerListPropertyContent" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.ListPropetiesTests.GetStringListPropertyContent" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.ListPropetiesTests.UpdateStringListPropertyContent" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-suite name="Kistl.IntegrationTests.ListPropetiesTests" success="False" time="0.000" asserts="0">
                    <results />
                  </test-suite>
                  <test-case name="Kistl.IntegrationTests.ObjectTests.GetListOf" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.ObjectTests.GetListOf_List" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.ObjectTests.GetObject" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.ObjectTests.GetObject_Twice" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.ObjectTests.NewObject" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case name="Kistl.IntegrationTests.ObjectTests.SetObject" executed="True" success="False" time="0.000" asserts="0">
                    <failure>
                      <message><![CDATA[TestFixtureSetUp failed in SetUp]]></message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-suite name="Kistl.IntegrationTests.ObjectTests" success="False" time="0.000" asserts="0">
                    <results />
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Projekte\Kistl\Tests\CompleteTests\bin\Debug\NMock2.AcceptanceTests.dll" success="True" time="0.175" asserts="0">
        <results>
          <test-suite name="NMock2" success="True" time="0.174" asserts="0">
            <results>
              <test-suite name="AcceptanceTests" success="True" time="0.174" asserts="0">
                <results>
                  <test-suite name="ArgumentMatchingAcceptanceTest" success="True" time="0.022" asserts="0">
                    <results>
                      <test-case name="NMock2.AcceptanceTests.ArgumentMatchingAcceptanceTest.CanMixMatcherAndNonMatcherExpectedArguments" executed="True" success="True" time="0.019" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="ErrorCheckingAcceptanceTest" success="True" time="0.015" asserts="0">
                    <results>
                      <test-case name="NMock2.AcceptanceTests.ErrorCheckingAcceptanceTest.CannotExpectAddToNonexistentEvent" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ErrorCheckingAcceptanceTest.CannotExpectAMethodOnAnRealObject" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ErrorCheckingAcceptanceTest.CannotExpectAMethodThatDoesNotExistInTheMockedType" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ErrorCheckingAcceptanceTest.CannotExpectAMethodWithAnInvalidName" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ErrorCheckingAcceptanceTest.CannotExpectGetOfAnInvalidProperty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ErrorCheckingAcceptanceTest.CannotExpectGetOfIndexerIfNoIndexerInMockedType" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ErrorCheckingAcceptanceTest.CannotExpectRemoveFromNonexistentEvent" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ErrorCheckingAcceptanceTest.CannotExpectSetOfAnInvalidProperty" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ErrorCheckingAcceptanceTest.CannotExpectSetOfIndexerIfNoIndexerInMockedType" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="ErrorMessageDemo" success="True" time="0.012" asserts="0">
                    <results>
                      <test-case name="NMock2.AcceptanceTests.ErrorMessageDemo.EventAdd" executed="True" success="True" time="0.004" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ErrorMessageDemo.IndexerSet" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ErrorMessageDemo.UnexpectedInvocation" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ErrorMessageDemo.VerifyFailure" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="EventsAcceptanceTest" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="NMock2.AcceptanceTests.EventsAcceptanceTest.CanExpectEventAdd" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.EventsAcceptanceTest.CanExpectEventRemove" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.EventsAcceptanceTest.DelegatesCanBeComparedToEquality" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="NMock2.AcceptanceTests.EventsAcceptanceTest.EventHandlersCanBeRemovedDuringEventHandling" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.EventsAcceptanceTest.EventHandlingByMocksRespectsAdditionAndRemovalOfListeners" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="NMock2.AcceptanceTests.EventsAcceptanceTest.EventsCanBeRaisedDuringTests" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Example" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="NMock2.AcceptanceTests.Example.KnockKnockJoke" executed="True" success="True" time="0.004" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="ExpectationsAcceptanceTest" success="True" time="0.022" asserts="0">
                    <results>
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.ExpectationsCanOverrideStubs" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.FailsTestIfMethodExpectedAtLeastNTimesButCalledLessThanNTimes" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.FailsTestIfMethodExpectedAtMostNTimesAndCalledMoreThanNTimes" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.FailsTestIfMethodExpectedBetweenNAndMTimesAndCalledMoreThanMTimes" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.FailsTestIfMethodExpectedBetweenNAndMTimesButCalledLessThanNTimes" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.FailsTestIfMethodExpectedOnceButCalledTwice" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.FailsTestIfMethodExpectedOnceButNotCalled" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.FailsTestIfMethodNeverExpectedIsActuallyCalled" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.FailsTestIfMethodNeverExpectedIsCalled" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.PassesTestIfMethodExpectedAtLeastNTimesAndCalledMoreThanNTimes" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.PassesTestIfMethodExpectedAtLeastNTimesAndCalledNTimes" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.PassesTestIfMethodExpectedAtMostNTimesAndCalledLessThanNTimes" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.PassesTestIfMethodExpectedAtMostNTimesAndCalledNTimes" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.PassesTestIfMethodExpectedBetweenNAndMTimesAndCalledBetweenNAndMTimes" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.PassesTestIfMethodExpectedOnceAndCalled" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.PassesTestIfMethodNeverExpectedIsNeverCalled" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.TestShouldFailIfExpectedExactlyNTimesAndCalledLessThanNTimes" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.TestShouldFailIfExpectedExactlyNTimesAndCalledMoreThanNTimes" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.ExpectationsAcceptanceTest.TestShouldPassIfExpectedExactlyNTimesAndCalledNTimes" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="IndexersAcceptanceTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="NMock2.AcceptanceTests.IndexersAcceptanceTest.CanExpectIndexedGetter" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="NMock2.AcceptanceTests.IndexersAcceptanceTest.CanExpectIndexedSetter" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.IndexersAcceptanceTest.ErrorMessagesContainNameOfIndexedGetterNotHiddenMethod" executed="True" success="True" time="0.001" asserts="3" />
                      <test-case name="NMock2.AcceptanceTests.IndexersAcceptanceTest.ErrorMessagesContainNameOfPropertySetterNotHiddenMethod" executed="True" success="True" time="0.001" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="MockeryAcceptanceTest" success="True" time="0.041" asserts="0">
                    <results>
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.CallingVerifyOnMockeryShouldEnableMockeryToBeUsedSuccessfullyForOtherTests" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.MockEmptyInterface" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.MockGenericInterfaceWithArgs1" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.MockGenericInterfaceWithArgs2" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.MockGenericInterfaceWithArgs3" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.MockGenericInterfaceWithArgs4" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.MockGenericInterfaceWithArgs5" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.MockGenericInterfaceWithArgs6" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.MockMixedInterface" executed="True" success="True" time="0.021" asserts="2" />
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.MockObjectsMayBePlacedIntoServiceContainers" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.MockSimpleGenericInterface" executed="True" success="True" time="0.002" asserts="2" />
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.MockSimpleGenericInterfaceWithArgs" executed="True" success="True" time="0.001" asserts="2" />
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.MockSimpleInterface" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="NMock2.AcceptanceTests.MockeryAcceptanceTest.MockSimpleInterfaceWithArgs" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="OrderedCallsAcceptanceTest" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="NMock2.AcceptanceTests.OrderedCallsAcceptanceTest.AllowsCallsIfCalledInSameOrderAsExpectedWithinAnInOrderBlock" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.OrderedCallsAcceptanceTest.CallsInOrderedBlocksThatAreNotMatchedFailVerification" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.OrderedCallsAcceptanceTest.CallsWithinAnInOrderedBlockCanBeExpectedMoreThanOnce" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.OrderedCallsAcceptanceTest.CanExpectUnorderedCallsWithinAnOrderedSequence" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.OrderedCallsAcceptanceTest.DoesNotEnforceTheOrderOfCallsByDefault" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.OrderedCallsAcceptanceTest.EnforcesTheOrderOfCallsWithinAnInOrderBlock" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.OrderedCallsAcceptanceTest.UnorderedCallsWithinAnInOrderedBlockCannotBeCalledAfterTheEndOfTheUnorderedExpectations" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.OrderedCallsAcceptanceTest.UnorderedCallsWithinAnInOrderedBlockCannotBeCalledBeforeTheStartOfTheUnorderedExpectations" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.OrderedCallsAcceptanceTest.UnorderedExpectationsMatchInOrderOfSpecification" executed="True" success="True" time="0.001" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="PropertiesAcceptanceTest" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="NMock2.AcceptanceTests.PropertiesAcceptanceTest.CanExpectPropertyGetter" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.PropertiesAcceptanceTest.CanExpectPropertySetter" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.PropertiesAcceptanceTest.ErrorMessagesContainNameOfPropertyGetterNotHiddenMethod" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="NMock2.AcceptanceTests.PropertiesAcceptanceTest.ErrorMessagesContainNameOfPropertySetterNotHiddenMethod" executed="True" success="True" time="0.001" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="StubAcceptanceTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="NMock2.AcceptanceTests.StubAcceptanceTest.StubsCanBeCalledAnyNumberOfTimes" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.StubAcceptanceTest.StubsDoNotHaveToBeCalled" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.AcceptanceTests.StubAcceptanceTest.StubsMatchArgumentsAndPerformActionsJustLikeAnExpectation" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="UsingBlockAcceptanceTest" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="NMock2.AcceptanceTests.UsingBlockAcceptanceTest.AssertsExpectationsAreMetAtEndOfUsingBlock" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Projekte\Kistl\Tests\CompleteTests\bin\Debug\NMock2.Test.dll" success="True" time="0.285" asserts="0">
        <results>
          <test-suite name="NMock2" success="True" time="0.283" asserts="0">
            <results>
              <test-suite name="Internal" success="True" time="0.031" asserts="0">
                <results>
                  <test-suite name="Test" success="True" time="0.031" asserts="0">
                    <results>
                      <test-suite name="BuildableExpectationTest" success="True" time="0.021" asserts="0">
                        <results>
                          <test-case name="NMock2.Internal.Test.BuildableExpectationTest.ChecksCallCountToAssertThatItHasBeenMet" executed="True" success="True" time="0.008" asserts="5" />
                          <test-case name="NMock2.Internal.Test.BuildableExpectationTest.DoesNotMatchIfAnyMatcherDoesNotMatch" executed="True" success="True" time="0.001" asserts="63" />
                          <test-case name="NMock2.Internal.Test.BuildableExpectationTest.HasReadableDescription" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="NMock2.Internal.Test.BuildableExpectationTest.InvokesAListOfActionsToPerformAnInvocation" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="NMock2.Internal.Test.BuildableExpectationTest.MatchesCallCountWhenMatchingInvocation" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="NMock2.Internal.Test.BuildableExpectationTest.MatchesIfAllMatchersMatch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Internal.Test.BuildableExpectationTest.WillNotPrintAPeriodBetweenReceiverAndMethodIfToldToDescribeItselfAsAnIndexer" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="DescriptionWriterTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="NMock2.Internal.Test.DescriptionWriterTest.FormatsNullAsNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Internal.Test.DescriptionWriterTest.FormatsStringsInCSharpSyntaxWhenWrittenAsObject" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Internal.Test.DescriptionWriterTest.HighlightsOtherValuesWhenWrittenAsObject" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Test" success="True" time="0.249" asserts="0">
                <results>
                  <test-suite name="Actions" success="True" time="0.051" asserts="0">
                    <results>
                      <test-suite name="CollectActionTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Actions.CollectActionTest.CollectsParameterValueAtSpecifiedIndex" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="NMock2.Test.Actions.CollectActionTest.HasAReadableDescription" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="NMock2.Test.Actions.CollectActionTest.ReturnsParameterValueFromMostRecentOfMultipleCalls" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="FireActionTest" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Actions.FireActionTest.FiresEventOnInvocationReceiver" executed="True" success="True" time="0.015" asserts="1" />
                          <test-case name="NMock2.Test.Actions.FireActionTest.HasAReadableDescription" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ResultSynthesizerTest" success="True" time="0.013" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Actions.ResultSynthesizerTest.CanOverrideDefaultResultForType" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="NMock2.Test.Actions.ResultSynthesizerTest.CanSpecifyResultForOtherType" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NMock2.Test.Actions.ResultSynthesizerTest.CreatesDefaultValuesForBasicTypes" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NMock2.Test.Actions.ResultSynthesizerTest.DoesNotTryToSetResultForVoidReturnType" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NMock2.Test.Actions.ResultSynthesizerTest.HasAReadableDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Actions.ResultSynthesizerTest.ReturnsADifferentCollectionOnEachInvocation" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="NMock2.Test.Actions.ResultSynthesizerTest.ReturnsDefaultValueOfValueTypes" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NMock2.Test.Actions.ResultSynthesizerTest.ReturnsEmptyCollections" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NMock2.Test.Actions.ResultSynthesizerTest.ReturnsZeroLengthArrays" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="NMock2.Test.Actions.ResultSynthesizerTest.ThrowsExceptionIfTriesToReturnValueForUnsupportedResultType" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ReturnActionTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Actions.ReturnActionTest.HasAReadableDescription" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="NMock2.Test.Actions.ReturnActionTest.SetsReturnValueOfInvocation" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ReturnCloneActionTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Actions.ReturnCloneActionTest.HasAReadableDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Actions.ReturnCloneActionTest.ReturnsCloneOfPrototypeObject" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SetIndexedParameterActionTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Actions.SetIndexedParameterActionTest.HasReadableDescription" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="NMock2.Test.Actions.SetIndexedParameterActionTest.SetsIndexedParameterOnInvocation" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SetNamedParameterActionTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Actions.SetNamedParameterActionTest.HasReadableDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Actions.SetNamedParameterActionTest.SetsNamedParameterOnInvocation" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ThrowActionTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Actions.ThrowActionTest.HasReadableDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Actions.ThrowActionTest.SetsExceptionOfInvocation" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Matchers" success="True" time="0.098" asserts="0">
                    <results>
                      <test-suite name="AlwaysMatcherTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.AlwaysMatcherTest.AlwaysReturnsFixedBooleanValueFromMatchesMethod" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="NMock2.Test.Matchers.AlwaysMatcherTest.IsGivenADescription" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AndMatcherTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.AndMatcherTest.CalculatesLogicalConjunctionOfTwoMatchers" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="NMock2.Test.Matchers.AndMatcherTest.CanUseOperatorOverloadingAsSyntacticSugar" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NMock2.Test.Matchers.AndMatcherTest.HasAReadableDescription" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ArgumentsMatcherTest" success="True" time="0.010" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.ArgumentsMatcherTest.DescribesAsIndexGetterArguments" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.ArgumentsMatcherTest.DescribesAsIndexSetterArguments" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.ArgumentsMatcherTest.DoesNotMatchAndDoesNotThrowExceptionIfValueSpecifiedForOutputParameter" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.ArgumentsMatcherTest.DoesNotMatchAnObjectThatIsNotAnInvocation" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.ArgumentsMatcherTest.DoesNotMatchIfValueMatchersDoNotMatchArgumentValues" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="NMock2.Test.Matchers.ArgumentsMatcherTest.DoesNotMatchInvocationWithDifferentNumberOfArguments" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="NMock2.Test.Matchers.ArgumentsMatcherTest.FormatsDescriptionToLookSimilarToAnArgumentList" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.ArgumentsMatcherTest.MatchesInvocationWithSameNumberOfArgumentsAsMatcherHasValueMatchersAndValueMatchersMatch" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.ArgumentsMatcherTest.MatchesOutputParametersWithSpecialMatcherClass" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.ArgumentsMatcherTest.ShowsOutputParametersInDescription" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ComparisonMatcherTest" success="True" time="0.017" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.ComparisonMatcherTest.CannotCreateComparisonThatMatchesAnything" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="NMock2.Test.Matchers.ComparisonMatcherTest.CanSpecifyMinAndMaxComparisonResultInAnyOrder" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NMock2.Test.Matchers.ComparisonMatcherTest.DoesNotMatchObjectOfDifferentType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.ComparisonMatcherTest.HasReadableDescription" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="NMock2.Test.Matchers.ComparisonMatcherTest.MatchesAComparisonOfAComparableValue" executed="True" success="True" time="0.001" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite name="DescriptionOverrideTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.DescriptionOverrideTest.DelegatesMatchingToAnotherMatcher" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NMock2.Test.Matchers.DescriptionOverrideTest.OverridesDescriptionOfOtherMatcherWithThatPassedToConstructor" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ElementMatcherTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.ElementMatcherTest.HasAReadableDescription" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="NMock2.Test.Matchers.ElementMatcherTest.IsNullSafe" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="NMock2.Test.Matchers.ElementMatcherTest.MatchesIfArgumentInCollection" executed="True" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="EqualMatcherTest" success="True" time="0.008" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.EqualMatcherTest.CanCompareAutoboxedValues" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NMock2.Test.Matchers.EqualMatcherTest.ComparesArgumentForEqualityToExpectedObject" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="NMock2.Test.Matchers.EqualMatcherTest.ComparesArraysForEqualityByContents" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="NMock2.Test.Matchers.EqualMatcherTest.ComparesMultidimensionalArraysForEquality" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="NMock2.Test.Matchers.EqualMatcherTest.HasAReadableDescription" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.EqualMatcherTest.IsNullSafe" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NMock2.Test.Matchers.EqualMatcherTest.RecursivelyComparesArrayContentsOfNestedArrays" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="NMock2.Test.Matchers.EqualMatcherTest.RecursivelyComparesContentsOfNestedLists" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="FieldMatcherTest" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.FieldMatcherTest.DoesNotMatchNonPublicField" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="NMock2.Test.Matchers.FieldMatcherTest.DoesNotMatchObjectIfItDoesNotHaveNamedField" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.FieldMatcherTest.DoesNotMatchObjectIfValueMatcherDoesNotMatch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.FieldMatcherTest.DoesNotMatchStaticField" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.FieldMatcherTest.HasAReadableDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.FieldMatcherTest.MatchesObjectWithMatchingField" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="MethodNameMatcherTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.MethodNameMatcherTest.DoesNotMatchObjectsThatAreNotMethodInfo" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.MethodNameMatcherTest.MatchesMethodsWithAGivenName" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NMock2.Test.Matchers.MethodNameMatcherTest.UsesMethodNameAsDescription" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="NotMatcherTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.NotMatcherTest.CalculatesTheLogicalNegationOfAMatcher" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NMock2.Test.Matchers.NotMatcherTest.CanUseOperatorOverloadingAsSyntacticSugar" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NMock2.Test.Matchers.NotMatcherTest.HasAReadableDescription" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="NullMatcherTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.NullMatcherTest.MatchesNullReferences" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NMock2.Test.Matchers.NullMatcherTest.ProvidesAReadableDescription" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="OrMatcherTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.OrMatcherTest.CalculatesLogicalDisjunctionOfTwoMatchers" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NMock2.Test.Matchers.OrMatcherTest.CanUseOperatorOverloadingAsSyntacticSugar" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NMock2.Test.Matchers.OrMatcherTest.HasAReadableDescription" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PropertyMatcherTest" success="True" time="0.007" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.PropertyMatcherTest.DoesNotMatchObjectIfItDoesNotHaveNamedProperty" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.PropertyMatcherTest.DoesNotMatchObjectIfPropertyMatcherDoesNotMatch" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.PropertyMatcherTest.DoesNotMatchPrivateProperty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.PropertyMatcherTest.DoesNotMatchWriteOnlyProperty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.PropertyMatcherTest.HasAReadableDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.PropertyMatcherTest.MatchesObjectWithNamedPropertyAndMatchingPropertyValue" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SameMatcherTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.SameMatcherTest.HasAReadableDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.SameMatcherTest.IsNullSafe" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NMock2.Test.Matchers.SameMatcherTest.MatchesSameObject" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="StringContainsMatcherTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.StringContainsMatcherTest.HasAReadableDescription" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="NMock2.Test.Matchers.StringContainsMatcherTest.MatchesIfStringArgumentContainsGivenSubstring" executed="True" success="True" time="0.001" asserts="7" />
                        </results>
                      </test-suite>
                      <test-suite name="ToStringMatcherTest" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.ToStringMatcherTest.PassesResultOfToStringToOtherMatcher" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="NMock2.Test.Matchers.ToStringMatcherTest.ReturnsAReadableDescription" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TypeMatcherTest" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Matchers.TypeMatcherTest.DoesNotMatchValueOfNonAssignableType" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NMock2.Test.Matchers.TypeMatcherTest.MatchesValueOfAssignableType" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="MockeryTest" success="True" time="0.025" asserts="0">
                    <results>
                      <test-case name="NMock2.Test.MockeryTest.AssertionExceptionThrownWhenNoExpectationsMatchContainsDescriptionOfActiveExpectations" executed="True" success="True" time="0.004" asserts="10" />
                      <test-case name="NMock2.Test.MockeryTest.AssertionExceptionThrownWhenSomeExpectationsHaveNotBeenMetContainsDescriptionOfUnMetExpectations" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="NMock2.Test.MockeryTest.CanCreateMockWithoutCastingBySpecifingTypeAsGenericParameter" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.Test.MockeryTest.CreatedMockComparesReferenceIdentityWithEqualsMethod" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NMock2.Test.MockeryTest.CreatedMockReturnsNameFromToString" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="NMock2.Test.MockeryTest.CreatesMocksThatCanBeCastToIMockObject" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NMock2.Test.MockeryTest.CreatesMocksThatCanBeCastToMockedType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NMock2.Test.MockeryTest.DetectsWhenFirstExpectationHasNotBeenMet" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.Test.MockeryTest.DetectsWhenSecondExpectationHasNotBeenMet" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.Test.MockeryTest.DispatchesInvocationBySearchingForMatchingExpectationInOrderOfAddition" executed="True" success="True" time="0.001" asserts="19" />
                      <test-case name="NMock2.Test.MockeryTest.FailsTestIfNoExpectationsMatch" executed="True" success="True" time="0.001" asserts="6" />
                      <test-case name="NMock2.Test.MockeryTest.GenericMockCanSpecifyName" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="NMock2.Test.MockeryTest.GivesMocksDefaultNameIfNoNameSpecified" executed="True" success="True" time="0.001" asserts="4" />
                      <test-case name="NMock2.Test.MockeryTest.MockReturnsNameFromToString" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NMock2.Test.MockeryTest.ShouldBeAbleToInvokeMethodOnInheritedInterface" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="NMock2.Test.MockeryTest.StopsSearchingForMatchingExpectationAsSoonAsOneMatches" executed="True" success="True" time="0.001" asserts="13" />
                      <test-case name="NMock2.Test.MockeryTest.VerifiesWhenAllExpectationsHaveBeenMet" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="NMock2.Test.MockeryTest.VerifyExpectationsReportsOnUnexpectedInvocationsWhoseExceptionsWereCaughtElsewhere" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="Monitoring" success="True" time="0.056" asserts="0">
                    <results>
                      <test-suite name="InvocationSemanticsTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Monitoring.InvocationSemanticsTest.OutParametersAreSetAfterExceptionThrown" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="InvocationTest" success="True" time="0.022" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.AllowsNullResultForMethodThatReturnsANullableType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.AllowsSettingNullResultOfVoidMethod" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.CanBeInvokedOnAnotherObject" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.DescriptionOfEventAdderDoesNotShowSugaredMethod" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.DescriptionOfEventRemoverDoesNotShowSugaredMethod" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.DescriptionOfInvocationOfIndexerGetterDoesNotShowSugaredMethod" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.DescriptionOfInvocationOfIndexerSetterDoesNotShowSugaredMethod" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.DescriptionOfInvocationOfPropertyGetterDoesNotShowSugaredMethod" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.DescriptionOfInvocationOfPropertySetterDoesNotShowSugaredMethod" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.DoesNotAllowNullException" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.DoesNotAllowNullResultForMethodThatReturnsAValueType" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.DoesNotAllowSettingIncompatibleResultType" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.DoesNotAllowSettingNonNullResultOfVoidMethod" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.SettingExceptionClearsResult" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.SettingResultClearsException" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.StoresExceptionToThrow" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.StoresResultToReturn" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="NMock2.Test.Monitoring.InvocationTest.TrapsExceptionsWhenInvokedOnAnotherObject" executed="True" success="True" time="0.001" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="InvokerTest" success="True" time="0.002" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Monitoring.InvokerTest.ForwardsInvocationsToNextIfMethodIsNotDeclaredInSpecifiedType" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="NMock2.Test.Monitoring.InvokerTest.InvokesMethodOnObjectIfMethodIsDeclaredInSpecifiedType" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="MultiInterfaceFactoryTest" success="True" time="0.007" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Monitoring.MultiInterfaceFactoryTest.AvoidsNameClash" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="NMock2.Test.Monitoring.MultiInterfaceFactoryTest.CreatesTypeInfoObjectsThatRepresentAnInterfaceThatExtendsAllParameterInterfaces" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NMock2.Test.Monitoring.MultiInterfaceFactoryTest.ReturnsTheSameTypeWhenPassedTheSameArguments" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="NMock2.Test.Monitoring.MultiInterfaceFactoryTest.ReturnsTheSameTypeWhenPassedTheSameArgumentsInDifferentOrder" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ParameterListTest" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Monitoring.ParameterListTest.CanSetValuesOfOutAndRefParameters" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NMock2.Test.Monitoring.ParameterListTest.DoesNotAllowAccessToValuesOfUnsetOutParameters" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Monitoring.ParameterListTest.DoesNotAllowValuesOfInputParametersToBeChanged" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NMock2.Test.Monitoring.ParameterListTest.ReturnsNumberOfParameters" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Monitoring.ParameterListTest.ReturnsValuesOfInParameters" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="ProxiedObjectIdentityTest" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Monitoring.ProxiedObjectIdentityTest.ForwardsGetHashCodeToIdentityProvider" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Monitoring.ProxiedObjectIdentityTest.ForwardsInvocationsOfOtherMethodsToNextInChain" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NMock2.Test.Monitoring.ProxiedObjectIdentityTest.ForwardsToStringToIdentityProvider" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NMock2.Test.Monitoring.ProxiedObjectIdentityTest.ImplementsEqualsByComparingInvocationReceiversForIdentity" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ProxyInvokableAdapterTest" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="NMock2.Test.Monitoring.ProxyInvokableAdapterTest.CapturesInvocationsOnTransparentProxyAndForwardsToInvokableObject" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="NMock2.Test.Monitoring.ProxyInvokableAdapterTest.PassesExceptionThrownByInvokableToCallerOfProxy" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="NMock2.Test.Monitoring.ProxyInvokableAdapterTest.ReturnsOutAndRefParametersFromInvocationToCallerOfProxy" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NMock2.Test.Monitoring.ProxyInvokableAdapterTest.ReturnsResultFromInvocationToCallerOfProxy" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NMock2.Test.Monitoring.ProxyInvokableAdapterTest.ThrowsExceptionFromInvocationToCallerOfProxy" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="VerifyTest" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="NMock2.Test.VerifyTest.CanPrependCustomMessageToDescriptionOfFailure" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NMock2.Test.VerifyTest.VerifyThatFailsIfMatcherDoesNotMatchValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="NMock2.Test.VerifyTest.VerifyThatPassesIfMatcherMatchesValue" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>