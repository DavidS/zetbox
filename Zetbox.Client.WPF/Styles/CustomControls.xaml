<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:kevin="clr-namespace:Microsoft.Samples.KMoore.WPFSamples.InfoTextBox;assembly=WPFSamplesLib"
                    xmlns:ctrls="clr-namespace:Zetbox.Client.WPF.CustomControls;assembly=Zetbox.Client.WPF.Toolkit"
                    xmlns:styles="clr-namespace:Zetbox.Client.WPF.Styles;assembly=Zetbox.Client.WPF.Toolkit"
                    xmlns:converter="clr-namespace:Zetbox.Client.WPF.Converter;assembly=Zetbox.Client.WPF.Toolkit"
                    xmlns:commands="clr-namespace:Zetbox.Client.WPF.Commands;assembly=Zetbox.Client.WPF.Toolkit"
                    xmlns:view="clr-namespace:Zetbox.Client.WPF.View"
                    xmlns:gridCells="clr-namespace:Zetbox.Client.WPF.View.GridCells"
                    xmlns:base="clr-namespace:Zetbox.Client.WPF.View.ZetboxBase">
    <!--
    This file is part of zetbox.

    Zetbox is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation, either version 3 of
    the License, or (at your option) any later version.

    Zetbox is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with zetbox.  If not, see <http://www.gnu.org/licenses/>.
    -->
    <Style TargetType="{x:Type view:NullablePropertyTextBoxView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:NullablePropertyTextBoxView}">
                    <kevin:InfoTextBox x:Name="txtNullablePropertyTextBoxView"
                                       Text="{Binding FormattedValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}"
                                       TextBoxInfo="{Binding ToolTip}"
                                       VerticalAlignment="Top"
                                       IsReadOnly="{Binding IsReadOnly}">
                        <kevin:InfoTextBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding ClearValueCommand, Converter={StaticResource CommandConverter}}"
                                          Header="{Binding ClearValueCommand.Label}"
                                          ToolTip="{Binding ClearValueCommand.ToolTip}" />
                            </ContextMenu>
                        </kevin:InfoTextBox.ContextMenu>
                    </kevin:InfoTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type view:EnumSelectionView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:EnumSelectionView}">
                    <ComboBox x:Name="PART_cb"
                              IsSynchronizedWithCurrentItem="False"
                              ItemsSource="{Binding PossibleValues, Mode=OneWay}"
                              IsEditable="True"
                              DisplayMemberPath="Value"
                              IsEnabled="{Binding IsReadOnly, Converter={StaticResource InvertedBoolConverter}}"
                              SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}">
                        <ComboBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding ClearValueCommand, Converter={StaticResource CommandConverter}}"
                                          Header="{Binding ClearValueCommand.Label}"
                                          ToolTip="{Binding ClearValueCommand.ToolTip}" />
                            </ContextMenu>
                        </ComboBox.ContextMenu>
                    </ComboBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type base:ObjectReferenceEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type base:ObjectReferenceEditor}">
                    <DockPanel ToolTip="{Binding ToolTip, Mode=OneWay}"
                               VerticalAlignment="Top">
                        <DockPanel.ContextMenu>
                            <ContextMenu ItemsSource="{Binding Commands}"
                                         ItemContainerStyle="{StaticResource CommandMenuItem}" />
                        </DockPanel.ContextMenu>
                        <ctrls:DropDownButton DockPanel.Dock="Left">
                            <ctrls:DropDownButton.DropDown>
                                <ContextMenu ItemsSource="{Binding Commands}"
                                             ItemContainerStyle="{StaticResource CommandMenuItem}" />
                            </ctrls:DropDownButton.DropDown>
                        </ctrls:DropDownButton>
                        <Border Style="{StaticResource ControlBorderStyle}"
                                VerticalAlignment="Stretch">
                            <ContentPresenter Content="{Binding ValueAsync, Mode=OneWay}"
                                              VerticalAlignment="Center"
                                              styles:Margin.Left="{StaticResource ItemMargin}"
                                              ContentTemplateSelector="{StaticResource listItemTemplateSelector}" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type base:ObjectReferenceDropdownEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type base:ObjectReferenceDropdownEditor}">
                    <DockPanel ToolTip="{Binding ToolTip, Mode=OneWay}"
                               VerticalAlignment="Top">
                        <DockPanel.ContextMenu>
                            <ContextMenu ItemsSource="{Binding Commands}"
                                         ItemContainerStyle="{StaticResource CommandMenuItem}" />
                        </DockPanel.ContextMenu>
                        <ctrls:DropDownButton DockPanel.Dock="Left">
                            <ctrls:DropDownButton.DropDown>
                                <ContextMenu ItemsSource="{Binding Commands}"
                                             ItemContainerStyle="{StaticResource CommandMenuItem}" />
                            </ctrls:DropDownButton.DropDown>
                        </ctrls:DropDownButton>
                        <Border DockPanel.Dock="Left"
                                x:Name="PART_ImageBorder"
                                Style="{StaticResource ControlBorderStyle}"
                                IsEnabled="{Binding IsReadOnly, Converter={StaticResource InvertedBoolConverter}}"
                                BorderThickness="1,1,0,1">
                            <Image Source="{Binding ValueAsync.IconAsync, Mode=OneWay, Converter={StaticResource ImageConverter}}"
                                   Margin="3 0 3 0"
                                   Width="14"
                                   Height="14" />
                        </Border>
                        <ComboBox Name="PART_cbValue"
                                  BorderThickness="0,1,1,1"
                                  IsSynchronizedWithCurrentItem="False"
                                  IsEditable="True"
                                  Text="{Binding SearchString, Mode=OneWayToSource}"
                                  ItemsSource="{Binding PossibleValuesAsync, Mode=OneWay, ValidatesOnDataErrors=true}"
                                  SelectedItem="{Binding ValueAsync, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}"
                                  IsEnabled="{Binding IsReadOnly, Converter={StaticResource InvertedBoolConverter}}"
                                  HorizontalContentAlignment="Stretch">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <ContentPresenter Content="{Binding Mode=OneWay}"
                                                      ContentTemplateSelector="{StaticResource listItemTemplateSelector}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type view:NullableBoolValueView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:NullableBoolValueView}">
                    <CheckBox x:Name="PART_cb"
                              IsChecked="{Binding Value, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true}"
                              IsThreeState="{Binding AllowNullInput, Mode=OneWay}"
                              IsEnabled="{Binding IsReadOnly, Converter={StaticResource InvertedBoolConverter}}"
                              ToolTip="{Binding ToolTip}"
                              MinWidth="1"
                              VerticalAlignment="Top" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type gridCells:MultilineStringValue}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type gridCells:MultilineStringValue}">
                    <DockPanel>
                        <ctrls:CommandButton DockPanel.Dock="Left"
                                             x:Name="PART_EditButton"
                                             CommandViewModel="{Binding EditCommand}"                                             
                                             Height="25"
                                             Width="25"
                                             Style="{StaticResource ImageOnlyButton}" />
                        <TextBlock Text="{Binding ShortText, Mode=OneWay}"
                                   ToolTip="{Binding Value, Mode=OneWay}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
