<UserControl x:Class="Zetbox.Client.WPF.View.Calendar.CalendarDay"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Zetbox.Client.WPF.View.Calendar"
             xmlns:viewmdl="clr-namespace:Zetbox.Client.Presentables.Calendar;assembly=Zetbox.Client">
    <!--
    This file is part of zetbox.

    Zetbox is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation, either version 3 of
    the License, or (at your option) any later version.

    Zetbox is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with zetbox.  If not, see <http://www.gnu.org/licenses/>.
    -->

    <Border Background="#E3EFFF"
            BorderThickness="0">
        <Grid x:Name="panelCalendarDay">
            <ItemsControl ItemsSource="{Binding TimeSlotItems}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type viewmdl:TimeSlotItemViewModel}">
                        <Border Background="{Binding Background}"
                                BorderBrush="{Binding Color, Converter={StaticResource DarkerShadeConverter}}"
                                BorderThickness="{Binding BorderThickness, Converter={StaticResource SystemDrawingConverter}}"
                                SnapsToDevicePixels="true"
                                Height="22"
                                HorizontalAlignment="Stretch">
                            <Grid x:Name="panelTimeSlotItem">
                                <!-- http://stackoverflow.com/questions/3410768/why-doesnt-wpf-border-control-have-a-mousedoubleclick-event/3411419#3411419 -->
                                <Border Margin="1"
                                        BorderThickness="1,1,1,1"
                                        MouseLeftButtonDown="timeslot_MouseLeftButtonDown"
                                        SnapsToDevicePixels="true"
                                        BorderBrush="#5D8CC9"
                                        Background="#10000000"
                                        Opacity="0"
                                        x:Name="item">
                                    <TextBlock Text="{Binding NewEventLabel}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Foreground="#A39DD8" />
                                </Border>
                            </Grid>
                        </Border>
                        <DataTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Opacity"
                                        Value="1"
                                        TargetName="item" />
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <Canvas x:Name="items"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch" />

            <Canvas x:Name="currentTimeMarkerCanvas"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Visibility="{Binding CurrentTimeMarkerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Line X1="0"
                      Y1="{Binding CurrentTimeMarkerPosition.Y}"
                      X2="{Binding ActualWidth, ElementName=currentTimeMarkerCanvas}"
                      Y2="{Binding CurrentTimeMarkerPosition.Y}"
                      Stroke="Red"
                      StrokeThickness="1"/>
            </Canvas>
        </Grid>
    </Border>
</UserControl>
