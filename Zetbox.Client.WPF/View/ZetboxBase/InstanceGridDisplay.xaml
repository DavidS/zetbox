<local:InstanceGridBaseDisplay x:Class="Zetbox.Client.WPF.View.ZetboxBase.InstanceGridDisplay"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:tk="clr-namespace:Zetbox.Client.WPF.Toolkit;assembly=Zetbox.Client.WPF.Toolkit"
                               xmlns:wpftk="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit"
                               xmlns:ctrls="clr-namespace:Zetbox.Client.WPF.CustomControls;assembly=Zetbox.Client.WPF.Toolkit"
                               xmlns:client="clr-namespace:Zetbox.Client.WPF.View"
                               xmlns:local="clr-namespace:Zetbox.Client.WPF.View.ZetboxBase"
                               xmlns:gui="clr-namespace:Zetbox.Client.WPF.View.GUI"
                               xmlns:clientZetboxBase="clr-namespace:Zetbox.Client.WPF.View.ZetboxBase"
                               xmlns:commands="clr-namespace:Zetbox.Client.WPF.Commands;assembly=Zetbox.Client.WPF.Toolkit"
                               xmlns:viewmdl="clr-namespace:Zetbox.Client.Presentables;assembly=Zetbox.Client"
                               commands:SmartRoutedUICommand.IsCommandSink="True">
    <!--
    This file is part of zetbox.

    Zetbox is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation, either version 3 of
    the License, or (at your option) any later version.

    Zetbox is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with zetbox.  If not, see <http://www.gnu.org/licenses/>.
    -->

    <local:InstanceGridBaseDisplay.Resources>
        <!-- implement workaround for DeferRefresh exception as described on http://stackoverflow.com/questions/3461714/wpf-datagrid-combobox-causes-invalidoperationexception -->
        <CollectionViewSource x:Key="itemsSource"
                          Source="{Binding ProxyInstances}"/>
    </local:InstanceGridBaseDisplay.Resources>
    <local:InstanceGridBaseDisplay.CommandBindings>
        <CommandBinding Command="NavigationCommands.Refresh"
                    Executed="RefreshCommand_Executed" />
    </local:InstanceGridBaseDisplay.CommandBindings>
    <DockPanel x:Name="ctrlInstanceList">
        <ContentPresenter DockPanel.Dock="Top"
                  Content="{Binding FilterList}"
                  Visibility="{Binding ShowFilter, Converter={StaticResource BooleanToVisibilityConverter}}"
                  ContentTemplateSelector="{StaticResource defaultTemplateSelector}"
                  Focusable="False"
                  Margin="0 0 0 10"/>
        <gui:SavedListConfiguratorDisplay DockPanel.Dock="Top"
                    DataContext="{Binding SavedListConfigurations}"
                    Visibility="{Binding Parent.ShowConfig, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Focusable="False"
                    Margin="0 0 0 10"/>

        <ctrls:WorkaroundToolBar DockPanel.Dock="Top"
                             ItemsSource="{Binding Commands}"
                             Visibility="{Binding ShowCommands, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ctrls:WorkaroundToolBar.Resources>
                <DataTemplate DataType="{x:Type viewmdl:CommandViewModel}">
                    <ctrls:CommandButton CommandViewModel="{Binding}"
                               CommandParameter="{Binding DataContext.SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type clientZetboxBase:InstanceGridDisplay}}}"
                               Style="{StaticResource ImageToolbarButton}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewmdl:ContainerCommand}">
                    <Menu>
                        <Menu.Resources>
                            <DataTemplate DataType="{x:Type viewmdl:CommandViewModel}">
                                <TextBlock Text="{Binding}"/>
                            </DataTemplate>
                        </Menu.Resources>
                        <MenuItem ItemsSource="{Binding Commands}"
                      Header="{Binding Name}"
                      ItemContainerStyle="{StaticResource CommandMenuItem}">
                        </MenuItem>
                    </Menu>
                </DataTemplate>
                <!-- inspired by http://stackoverflow.com/q/6574377/4918 -->
                <Style TargetType="Menu">
                    <Setter Property="Margin"
                  Value="0,2,0,0"/>
                    <Setter Property="Background"
                  Value="#00000000"/>
                </Style>
            </ctrls:WorkaroundToolBar.Resources>
        </ctrls:WorkaroundToolBar>

        <GroupBox DockPanel.Dock="Top"
              Visibility="{Binding ShowMasterDetail, Converter={StaticResource BooleanToVisibilityConverter}}"
              Header="Details"
              Margin="0 0 0 10">
            <ContentPresenter Content="{Binding SelectedDetailItem}"
                        tk:VisualTypeTemplateSelector.RequestedKind="{Binding DataContext.RequestedEditorKind, ElementName=ctrlInstanceList, Mode=OneWay}"
                        ContentTemplateSelector="{StaticResource defaultTemplateSelector}" />
        </GroupBox>

        <local:InstanceListHeader DockPanel.Dock="Top" />
        <ctrls:ZetboxDataGrid x:Name="lst"
                        BorderThickness="0"
                        ItemsSource="{Binding Source={StaticResource itemsSource}}"
                        CanUserAddRows="{Binding AllowAddNew}"
                        CanUserDeleteRows="{Binding AllowDelete}"
                        AutoGenerateColumns="False"
                        SelectedZetboxItems="{Binding SelectedProxies}"
                        SelectionMode="{Binding IsMultiselect, Converter={StaticResource BooleanMultiselectToSelectionModeConverter}}"
                        MouseDoubleClick="ItemActivatedHandler"
                        GridViewColumnHeader.Click="ListView_HeaderClick">
        </ctrls:ZetboxDataGrid>
    </DockPanel>
</local:InstanceGridBaseDisplay>