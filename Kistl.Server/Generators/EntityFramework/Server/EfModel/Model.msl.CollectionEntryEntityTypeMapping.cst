<%@ CodeTemplate Language="C#" 
	Name="Server.EfModel.ModelMslCollectionEntryEntityTypeMapping"
	CodeFile="Server.EfModel.ModelMslCollectionEntryEntityTypeMapping.cs" 
	ClassName="Kistl.Server.Generators.EntityFramework.Server.EfModel.ModelMslCollectionEntryEntityTypeMapping" 
	Inherits="Kistl.Server.Generators.KistlCodeTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.Server.Generators" %>
<%@ Import Namespace="Kistl.Server.Generators.Extensions" %>
<%@ Import Namespace="Kistl.Server.GeneratorsOld" %>
<%@ Parameter Name="listProp" Type="Property" %>
<%
TypeMoniker otherType = Construct.PropertyCollectionEntryType(listProp);
%>
      <EntityTypeMapping TypeName="IsTypeOf(Model.<%= otherType.ClassName %>)">
	    <MappingFragment StoreEntitySet="<%= otherType.ClassName %>">
	      <ScalarProperty Name="ID" ColumnName="ID" />
<%
	if (listProp is ValueTypeProperty)
	{
%>
	      <ScalarProperty Name="Value" ColumnName="<%= listProp.PropertyName %>" />
<%
	}

	if (listProp.NeedsPositionColumn())
	{
%>
	      <ScalarProperty Name="ValueIndex" ColumnName="<%= Construct.ListPositionColumnName(listProp) %>" />
<%
	}

	if (listProp.IsIndexed)
	{
%>
	      <ScalarProperty Name="ParentIndex" ColumnName="<%= Construct.ListPositionColumnName(listProp.ObjectClass) %>" />
<%
	}
%>
	    </MappingFragment>
      </EntityTypeMapping>