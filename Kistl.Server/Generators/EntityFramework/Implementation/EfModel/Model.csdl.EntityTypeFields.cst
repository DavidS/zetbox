<%@ CodeTemplate Language="C#" 
	Name="Implementation.EfModel.ModelCsdlEntityTypeFields"
	CodeFile="Implementation.EfModel.ModelCsdlEntityTypeFields.cs" 
	ClassName="Kistl.Server.Generators.EntityFramework.Implementation.EfModel.ModelCsdlEntityTypeFields" 
	Inherits="Kistl.Server.Generators.KistlCodeTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Diagnostics" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.Server.Generators" %>
<%@ Import Namespace="Kistl.Server.Generators.Extensions" %>
<%@ Import Namespace="Kistl.Server.Movables" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="properties" Type="IEnumerable<Property>" %>
<%

	/*
	 * TODO: Actually, all this should die and become a bunch of polymorphic calls.
	 */

	foreach(var p in properties)
	{
		// TODO: implement IsNullable everywhere
		var rel = NewRelation.Lookup(ctx, p);
		if (rel != null)
		{
			RelationEnd end = rel.GetEnd(p);
			RelationEnd otherEnd = rel.GetOtherEnd(p);
			if (rel.GetPreferredStorage() == StorageHint.Separate)
			{
				Debug.Assert(end != null);
%>
    <NavigationProperty Name="<%= p.PropertyName + Kistl.API.Helper.ImplementationSuffix %>"
                        Relationship="Model.<%= rel.GetCollectionEntryAssociationName(end) %>"
                        FromRole="<%= end.RoleName %>"
                        ToRole="CollectionEntry" />
<%
			}
			else
			{
%>
    <NavigationProperty Name="<%= p.PropertyName + Kistl.API.Helper.ImplementationSuffix %>"
                        Relationship="Model.<%= rel.GetAssociationName() %>"
                        FromRole="<%= end.RoleName %>"
                        ToRole="<%= otherEnd.RoleName %>" />
<%
			}

			if (p.NeedsPositionColumn())
			{
%>
    <Property Name="<%= p.PropertyName + Kistl.API.Helper.PositionSuffix %>" Type="Int32" Nullable="true" />
<%
			}
		}
		else if (p is ValueTypeProperty)
		{
			var prop = (ValueTypeProperty)p;
			if (prop.IsList)
			{
%>
    <NavigationProperty Name="<%= prop.PropertyName + Kistl.API.Helper.ImplementationSuffix %>"
                        Relationship="Model.<%= prop.GetAssociationName() %>"
                        FromRole="<%= prop.ObjectClass.ClassName %>"
                        ToRole="CollectionEntry" />
<%
			}
			else
			{
%>
    <%= ModelCsdl.PlainPropertyDefinitionFromValueType((ValueTypeProperty)p) %>
<%
			}
		}
		else if (p is StructProperty)
		{
			// Nullable Complex types are not supported by EF
%>
    <Property Name="<%= p.PropertyName + Kistl.API.Helper.ImplementationSuffix %>"
              Type="Model.<%= ((StructProperty)p).StructDefinition.ClassName %>"
              Nullable="false" />
<%
		}	
	}
%>