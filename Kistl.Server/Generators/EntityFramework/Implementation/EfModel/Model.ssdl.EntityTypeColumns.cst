<%@ CodeTemplate Language="C#" 
	Name="Implementation.EfModel.ModelSsdlEntityTypeColumns"
	CodeFile="Implementation.EfModel.ModelSsdlEntityTypeColumns.cs" 
	ClassName="Kistl.Server.Generators.EntityFramework.Implementation.EfModel.ModelSsdlEntityTypeColumns" 
	Inherits="Kistl.Server.Generators.KistlCodeTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.App.Extensions" %>
<%@ Import Namespace="Kistl.Server.Generators" %>
<%@ Import Namespace="Kistl.Server.Generators.Extensions" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="properties" Type="IEnumerable<Property>" %>
<%@ Parameter Name="prefix" Type="string" %>
<%

	/*
	 * TODO: Actually, all this should die and become a bunch of polymorphic calls.
	 */

	foreach(var p in properties)
	{
		// TODO: implement IsNullable everywhere
		
		if (p is StructProperty)
		{
			ApplyEntityTypeColumnDefs(
				((StructProperty)p).StructDefinition.Properties.Cast<Property>().OrderBy(prop => prop.PropertyName),
				Construct.NestedColumnName(p, prefix));
		}
		else if (p is ObjectReferenceProperty)
		{
			throw new ArgumentException("properties", String.Format("contains ObjectReferenceProperty {0}, but this template cannot work with that", p));
		}
		else
		{
			string propertyName = Construct.NestedColumnName(p, prefix);
			string sqlTypeName = GetDBType(p);
			
			string maxLengthAttr = "";
			if (p is StringProperty)
			{
				// must have one space at the end
				maxLengthAttr = String.Format("MaxLength=\"{0}\" ", ((StringProperty)p).GetMaxLength());
			}
			
			string nullableAttr = "";
			if (p.IsValueTypePropertySingle())
			{
				// must have one space at the end
				nullableAttr = String.Format("Nullable=\"{0}\" ", ((Property)p).IsNullable().ToString().ToLowerInvariant());
			}
%>
    <Property Name="<%= propertyName %>" Type="<%= sqlTypeName %>" <%= maxLengthAttr %><%= nullableAttr %>/>
    <!-- <Property Name="<%= Construct.ListPositionColumnName((ValueTypeProperty)p, prefix) %>" Type="int" Nullable="true" /> -->
<%
		}
	}
%>