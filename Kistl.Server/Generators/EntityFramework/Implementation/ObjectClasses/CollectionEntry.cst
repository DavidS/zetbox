<%@ CodeTemplate Language="C#" 
	Name="Implementation.ObjectClasses.CollectionEntry"
	CodeFile="Implementation.ObjectClasses.CollectionEntry.cs" 
	ClassName="Kistl.Server.Generators.EntityFramework.Implementation.ObjectClasses.CollectionEntry" 
	Inherits="Kistl.Server.Generators.KistlCodeTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.Server.Generators" %>
<%@ Import Namespace="Kistl.Server.Generators.Extensions" %>
<%@ Import Namespace="Kistl.Server.Movables" %>

<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="rel" Type="NewRelation" %>
<%
	
	string leftType = rel.Left.Referenced.ClassName;
	string rightType = rel.Right.Referenced.ClassName;
	List <string> fields = new List<string>();
%>


    [System.Diagnostics.DebuggerDisplay("<%= rel.GetCollectionEntryClassName() %>")]
    [EdmEntityType(NamespaceName="Model", Name="<%= rel.GetCollectionEntryClassName() %>")]
    public class <%= rel.GetCollectionEntryClassName() %><%= Kistl.API.Helper.ImplementationSuffix %>
        : BaseServerCollectionEntry_EntityFramework, INewCollectionEntry<<%= leftType %>, <%= rightType %>>
    {
    
<%
		CallTemplate("Implementation.ObjectClasses.IdProperty", ctx);
%>

		/// <summary>
		/// Reference to right part of this relation
		/// </summary>
<%
		CallTemplate("Implementation.ObjectClasses.ObjectReferencePropertyTemplate", ctx,
			"Right", rel.GetRightToCollectionEntryAssociationName(), "Right",
			rel.Right.Referenced.NameDataObject, rel.Right.Referenced.NameDataObject + Kistl.API.Helper.ImplementationSuffix);
		
		fields.Add("_fk_Right");
		
%>

		/// <summary>
		/// Reference to left part of this relation
		/// </summary>
<%
		if (rel.IsTwoProngedAssociation(ctx))
		{
			CallTemplate("Implementation.ObjectClasses.ObjectReferencePropertyTemplate", ctx,
				"Left", rel.GetLeftToCollectionEntryAssociationName(), "Left",
				rel.Left.Referenced.NameDataObject, rel.Left.Referenced.NameDataObject + Kistl.API.Helper.ImplementationSuffix);
			fields.Add("_fk_Left");
		}
		else
		{
			CallTemplate("Implementation.ObjectClasses.NotifyingValueProperty", ctx,
				rel.Left.Referenced.ToSystemType(), "Left");
			fields.Add("_Left");
		}
%>

#region Serializer

<%
		CallTemplate("Implementation.ObjectClasses.SerializerTemplate", ctx,
			SerializerDirection.ToStream, fields);
		
		CallTemplate("Implementation.ObjectClasses.SerializerTemplate", ctx,
			SerializerDirection.FromStream, fields);
%>

#endregion
        
    }

