<%@ CodeTemplate Language="C#" 
	Name="Implementation.ObjectClasses.ValueCollectionProperty"
	ClassName="Kistl.Server.Generators.ClientObjects.Implementation.ObjectClasses.ValueCollectionProperty" 
	Inherits="Kistl.Server.Generators.KistlCodeTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Diagnostics" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.Server.Generators" %>
<%@ Import Namespace="Kistl.Server.Generators.Extensions" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="serializationList" Type="Templates.Implementation.SerializationMembersList" %>
<%@ Parameter Name="name" Type="string" %>
<%@ Parameter Name="backingName" Type="string" %>
<%@ Parameter Name="backingCollectionType" Type="string" %>
<%@ Parameter Name="exposedCollectionInterface" Type="string" %>
<%@ Parameter Name="thisInterface" Type="string" %>
<%@ Parameter Name="referencedType" Type="string" %>
<%@ Parameter Name="entryType" Type="string" %>
<%@ Parameter Name="providerCollectionType" Type="string" %>
<%@ Parameter Name="underlyingCollectionName" Type="string" %>
<%

    AddSerialization(serializationList, underlyingCollectionName);

%>

		public <%= exposedCollectionInterface %><<%= referencedType %>> <%= name %>
		{
			get
			{
				if (<%= backingName %> == null)
				{
				    <%= backingName %> 
				        = new <%= backingCollectionType %><<%= thisInterface %>, <%= referencedType %>, <%= entryType %>>(
				            this, 
				            <%= underlyingCollectionName %>);
				}
				return <%= backingName %>;
			}
		}

		private <%= backingCollectionType %><<%= thisInterface %>, <%= referencedType %>, <%= entryType %>> <%= backingName %>;
		private <%= providerCollectionType %> <%= underlyingCollectionName %> = new List<<%= entryType %>>();
