<%@ CodeTemplate Language="C#" 
	Name="Implementation.ObjectClasses.ObjectListProperty"
	ClassName="Kistl.Server.Generators.ClientObjects.Implementation.ObjectClasses.ObjectListProperty" 
	Inherits="Kistl.Server.Generators.KistlCodeTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Diagnostics" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.Server.Generators" %>
<%@ Import Namespace="Kistl.Server.Generators.Extensions" %>
<%@ Import Namespace="Kistl.Server.Movables" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="serializationList" Type="Templates.Implementation.SerializationMembersList" %>
<%@ Parameter Name="name" Type="string" %>
<%@ Parameter Name="wrapperName" Type="string" %>
<%@ Parameter Name="wrapperClass" Type="string" %>
<%@ Parameter Name="exposedListType" Type="string" %>
<%@ Parameter Name="rel" Type="NewRelation" %>
<%@ Parameter Name="relEnd" Type="RelationEnd" %>
<%@ Parameter Name="otherEnd" Type="RelationEnd" %>
<%@ Parameter Name="otherName" Type="string" %>
<%@ Parameter Name="referencedInterface" Type="string" %>

        // implement the user-visible interface
        [XmlIgnore()]
        [System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]
        public <%= exposedListType %><<%= referencedInterface %>> <%= name %>
        {
            get
            {
                if (<%= wrapperName %> == null)
                {
                    List<<%= referencedInterface %>> serverList;
                    if (Helper.IsPersistedObject(this))
                        serverList = Context.GetListOf<<%= referencedInterface %>>(this, "<%= name %>");
                    else
                        serverList = new List<<%= referencedInterface %>>();
                        
                    <%= wrapperName %> = new <%= wrapperClass %><<%= referencedInterface %>>(
                        "<%= otherName %>",
                        this,
                        serverList);
                }
                return <%= wrapperName %>;
            }
        }
        
        private <%= wrapperClass %><<%= referencedInterface %>> <%= wrapperName %>;
