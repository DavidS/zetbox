<%@ CodeTemplate Language="C#" 
	Name="Implementation.ObjectClasses.GetPropertyErrorTemplate"
	ClassName="Kistl.Server.Generators.Templates.Implementation.ObjectClasses.GetPropertyErrorTemplate" 
	Inherits="Kistl.Server.Generators.KistlCodeTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.Server.Generators" %>
<%@ Import Namespace="Kistl.Server.Generators.Extensions" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="cls" Type="ObjectClass" %>

<%
	var properties = ctx.GetQuery<Property>().Where(p => p.ObjectClass.ID == cls.ID).OrderBy(p => p.PropertyName).ToList();
	if (properties.Count > 0) {
%>
		protected override string GetPropertyError(string propertyName) 
		{
			switch(propertyName)
			{
<%
		foreach(var property in properties)
		{
			string propertyName = property.PropertyName;
			
%>
				case "<%= propertyName %>":
				{
					var errors = Context.Find<Kistl.App.Base.Property>(<%= property.ID %>).Constraints
						.Where(c => !c.IsValid(this, this.<%= propertyName %>))
						.Select(c => c.GetErrorText(this, this.<%= propertyName %>))
						.ToArray();
					
					return String.Join("; ", errors);
				}
<%
		}
%>
				default:
					return base.GetPropertyError(propertyName);
			}
		}
<%
	}
%>
