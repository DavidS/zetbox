<%@ CodeTemplate Language="C#" 
	Name="Implementation.ObjectClasses.SerializerTemplate"
	ClassName="Kistl.Server.Generators.Templates.Implementation.ObjectClasses.SerializerTemplate" 
	Inherits="Kistl.Server.Generators.KistlCodeTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.Server.Generators" %>
<%@ Import Namespace="Kistl.Server.Generators.Extensions" %>
<%@ Import Namespace="Kistl.Server.Movables" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="direction" Type="SerializerDirection" %>
<%@ Parameter Name="fields" Type="SerializationMembersList" %>

<%
	string methodName = direction.ToString();
	string argType;
	
	switch(direction){
		case SerializerDirection.ToStream:
			argType = "System.IO.BinaryWriter";
			break;
		case SerializerDirection.FromStream:
			argType = "System.IO.BinaryReader";
			break;
		default:
			throw new ArgumentOutOfRangeException("direction");
	}
	
%>
        public override void <%= methodName %>(<%= argType %> binStream)
        {
            base.<%= methodName %>(binStream);
<%
	foreach(var serMember in fields)
	{
	    ApplySerializer(direction, serMember, "binStream");
	}
%>
        }
