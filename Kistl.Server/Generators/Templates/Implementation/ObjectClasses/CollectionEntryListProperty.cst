<%@ CodeTemplate Language="C#" 
	Name="Implementation.ObjectClasses.CollectionEntryListProperty"
	ClassName="Kistl.Server.Generators.Templates.Implementation.ObjectClasses.CollectionEntryListProperty" 
	Inherits="Kistl.Server.Generators.KistlCodeTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.Server.Generators" %>
<%@ Import Namespace="Kistl.Server.Generators.Extensions" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="serializationList" Type="Templates.Implementation.SerializationMembersList" %>
<%@ Parameter Name="name" Type="string" %>
<%@ Parameter Name="exposedCollectionInterface" Type="string" %>
<%@ Parameter Name="referencedInterface" Type="string" %>
<%@ Parameter Name="backingName" Type="string" %>
<%@ Parameter Name="backingCollectionType" Type="string" %>
<%@ Parameter Name="aSideType" Type="string" %>
<%@ Parameter Name="bSideType" Type="string" %>
<%@ Parameter Name="entryType" Type="string" %>
<%@ Parameter Name="providerCollectionType" Type="string" %>
<%@ Parameter Name="relId" Type="int" %>
<%@ Parameter Name="role" Type="RelationEndRole" %>

		public <%= exposedCollectionInterface %><<%= referencedInterface %>> <%= name %>
		{
			get
			{
				if (<%= backingName %> == null)
				{
					<%= backingName %> 
						= new <%= backingCollectionType %><<%= aSideType %>, <%= bSideType %>, <%= entryType %>>(
							this, 
							Context.FetchRelation<<%= aSideType %>, <%= bSideType %>>(<%= relId %>, RelationEndRole.<%= role %>, this)
							    .Cast<<%= entryType %>>()
							    .ToList());
				}
				return <%= backingName %>;
			}
		}

		private <%= backingCollectionType %><<%= aSideType %>, <%= bSideType %>, <%= entryType %>> <%= backingName %>;
