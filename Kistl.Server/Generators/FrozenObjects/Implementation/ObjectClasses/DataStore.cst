<%@ CodeTemplate Language="C#" 
	Name="Implementation.ObjectClasses.DataStore"
	ClassName="Kistl.Server.Generators.FrozenObjects.Implementation.ObjectClasses.DataStore" 
	Inherits="Kistl.Server.Generators.KistlCodeTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Parameter Name="ctx" Type="Kistl.API.IKistlContext" %>
<%@ Parameter Name="cls" Type="ObjectClass" %>
<%

	// TODO: find a correct incantation here
	// list of all instances of exactly this class
	var instanceList = new List<ObjectClass>(); //ctx.GetQuery(cls.GetDataType()).ToList().Where(o => o.GetObjectClass(ctx) == cls);
%>
		internal Dictionary<int, <%= cls.ClassName %>> DataStore = new Dictionary<int, <%= cls.ClassName %>>(<%= instanceList.Count() %>);
		static <%= cls.ClassName %><%= Kistl.API.Helper.ImplementationSuffix %>()
		{
<%

	foreach(var obj in instanceList) 
	{
%>
			DataStore[<%= obj.ID %>] = new <%= cls.ClassName %>(null, <%= obj.ID %>);
<%
	}
%>
		}