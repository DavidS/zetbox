//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kistl.API.Client.KistlService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InternalCache", Namespace="http://schemas.datacontract.org/2004/07/System.Reflection.Cache")]
    [System.SerializableAttribute()]
    public partial class InternalCache : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Kistl.API.Client.KistlService.InternalCacheItem[] m_cacheField;
        
        private int m_numItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Kistl.API.Client.KistlService.InternalCacheItem[] m_cache {
            get {
                return this.m_cacheField;
            }
            set {
                if ((object.ReferenceEquals(this.m_cacheField, value) != true)) {
                    this.m_cacheField = value;
                    this.RaisePropertyChanged("m_cache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_numItems {
            get {
                return this.m_numItemsField;
            }
            set {
                if ((this.m_numItemsField.Equals(value) != true)) {
                    this.m_numItemsField = value;
                    this.RaisePropertyChanged("m_numItems");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InternalCacheItem", Namespace="http://schemas.datacontract.org/2004/07/System.Reflection.Cache")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.IO.MemoryStream))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.IO.Stream))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.ObjectNotificationRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.ObjectNotificationRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableMemberExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableCompoundExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableExpression[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableUnaryExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableConditionalExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableParameterExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableBinaryExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableConstantExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableLambdaExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableMethodCallExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.SerializableNewExpression))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.MarshalByRefObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Exception))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Reflection.MemberInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Reflection.MemberInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Reflection.ConstructorInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Reflection.MethodBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.Client.KistlService.InternalCache))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.Client.KistlService.InternalCacheItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Kistl.API.Client.KistlService.CacheObjType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Linq.Expressions.ExpressionType))]
    public partial struct InternalCacheItem : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Kistl.API.Client.KistlService.CacheObjType KeyField;
        
        private object ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Kistl.API.Client.KistlService.CacheObjType Key {
            get {
                return this.KeyField;
            }
            set {
                if ((this.KeyField.Equals(value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CacheObjType", Namespace="http://schemas.datacontract.org/2004/07/System.Reflection.Cache")]
    public enum CacheObjType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmptyElement = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParameterInfo = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TypeName = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemotingData = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerializableAttribute = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblyName = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConstructorInfo = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FieldType = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FieldName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultMember = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="KistlService.IKistlService")]
    public interface IKistlService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKistlService/GetObject", ReplyAction="http://tempuri.org/IKistlService/GetObjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IKistlService/GetObjectExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.IO.MemoryStream GetObject(Kistl.API.SerializableType type, int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKistlService/SetObjects", ReplyAction="http://tempuri.org/IKistlService/SetObjectsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IKistlService/SetObjectsExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.IO.MemoryStream SetObjects(System.IO.MemoryStream msg, Kistl.API.ObjectNotificationRequest[] notificationRequests);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKistlService/GetList", ReplyAction="http://tempuri.org/IKistlService/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IKistlService/GetListExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Kistl.API.SerializableCompoundExpression))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Kistl.API.SerializableMemberExpression))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Kistl.API.SerializableUnaryExpression))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Kistl.API.SerializableBinaryExpression))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Kistl.API.SerializableLambdaExpression))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Kistl.API.SerializableMethodCallExpression))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Kistl.API.SerializableNewExpression))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Kistl.API.SerializableConditionalExpression))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Kistl.API.SerializableParameterExpression))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Kistl.API.SerializableConstantExpression))]
        System.IO.MemoryStream GetList(Kistl.API.SerializableType type, int maxListCount, Kistl.API.SerializableExpression filter, Kistl.API.SerializableExpression[] orderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKistlService/GetListOf", ReplyAction="http://tempuri.org/IKistlService/GetListOfResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IKistlService/GetListOfExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.IO.MemoryStream GetListOf(Kistl.API.SerializableType type, int ID, string property);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKistlService/FetchRelation", ReplyAction="http://tempuri.org/IKistlService/FetchRelationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IKistlService/FetchRelationExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.IO.MemoryStream FetchRelation(System.Guid relId, int role, int ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IKistlServiceChannel : Kistl.API.Client.KistlService.IKistlService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class KistlServiceClient : System.ServiceModel.ClientBase<Kistl.API.Client.KistlService.IKistlService>, Kistl.API.Client.KistlService.IKistlService {
        
        public KistlServiceClient() {
        }
        
        public KistlServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KistlServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KistlServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KistlServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.IO.MemoryStream GetObject(Kistl.API.SerializableType type, int ID) {
            return base.Channel.GetObject(type, ID);
        }
        
        public System.IO.MemoryStream SetObjects(System.IO.MemoryStream msg, Kistl.API.ObjectNotificationRequest[] notificationRequests) {
            return base.Channel.SetObjects(msg, notificationRequests);
        }
        
        public System.IO.MemoryStream GetList(Kistl.API.SerializableType type, int maxListCount, Kistl.API.SerializableExpression filter, Kistl.API.SerializableExpression[] orderBy) {
            return base.Channel.GetList(type, maxListCount, filter, orderBy);
        }
        
        public System.IO.MemoryStream GetListOf(Kistl.API.SerializableType type, int ID, string property) {
            return base.Channel.GetListOf(type, ID, property);
        }
        
        public System.IO.MemoryStream FetchRelation(System.Guid relId, int role, int ID) {
            return base.Channel.FetchRelation(relId, role, ID);
        }
    }
}
