//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kistl.API.Client.KistlService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dasz.at/ZBox/", ConfigurationName="KistlService.IKistlService", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface IKistlService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dasz.at/ZBox/IKistlService/SetObjects", ReplyAction="http://dasz.at/ZBox/IKistlService/SetObjectsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://dasz.at/ZBox/IKistlService/SetObjectsExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.IO.MemoryStream SetObjects(System.IO.MemoryStream msg, Kistl.API.ObjectNotificationRequest[] notificationRequests);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dasz.at/ZBox/IKistlService/GetList", ReplyAction="http://dasz.at/ZBox/IKistlService/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://dasz.at/ZBox/IKistlService/GetListExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.IO.MemoryStream GetList(Kistl.API.SerializableType type, int maxListCount, bool eagerLoadLists, Kistl.API.SerializableExpression[] filter, Kistl.API.OrderByContract[] orderBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dasz.at/ZBox/IKistlService/GetListOf", ReplyAction="http://dasz.at/ZBox/IKistlService/GetListOfResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://dasz.at/ZBox/IKistlService/GetListOfExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.IO.MemoryStream GetListOf(Kistl.API.SerializableType type, int ID, string property);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dasz.at/ZBox/IKistlService/FetchRelation", ReplyAction="http://dasz.at/ZBox/IKistlService/FetchRelationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://dasz.at/ZBox/IKistlService/FetchRelationExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.IO.MemoryStream FetchRelation(System.Guid relId, int role, int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dasz.at/ZBox/IKistlService/GetBlobStream", ReplyAction="http://dasz.at/ZBox/IKistlService/GetBlobStreamResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://dasz.at/ZBox/IKistlService/GetBlobStreamExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.IO.Stream GetBlobStream(int ID);
        
        // CODEGEN: Generating message contract since the wrapper name (BlobMessage) of message BlobMessage does not match the default value (SetBlobStream)
        [System.ServiceModel.OperationContractAttribute(Action="http://dasz.at/ZBox/IKistlService/SetBlobStream", ReplyAction="http://dasz.at/ZBox/IKistlService/SetBlobStreamResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://dasz.at/ZBox/IKistlService/SetBlobStreamExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        Kistl.API.Client.KistlService.BlobResponse SetBlobStream(Kistl.API.Client.KistlService.BlobMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dasz.at/ZBox/IKistlService/InvokeServerMethod", ReplyAction="http://dasz.at/ZBox/IKistlService/InvokeServerMethodResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://dasz.at/ZBox/IKistlService/InvokeServerMethodExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.IO.MemoryStream InvokeServerMethod(out System.IO.MemoryStream retChangedObjects, Kistl.API.SerializableType type, int ID, string method, Kistl.API.SerializableType[] parameterTypes, System.IO.MemoryStream parameter, System.IO.MemoryStream changedObjects, Kistl.API.ObjectNotificationRequest[] notificationRequests);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BlobMessage", WrapperNamespace="http://dasz.at/ZBox/", IsWrapped=true)]
    public partial class BlobMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://dasz.at/ZBox/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://dasz.at/ZBox/")]
        public string MimeType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dasz.at/ZBox/", Order=0)]
        public System.IO.Stream Stream;
        
        public BlobMessage() {
        }
        
        public BlobMessage(string FileName, string MimeType, System.IO.Stream Stream) {
            this.FileName = FileName;
            this.MimeType = MimeType;
            this.Stream = Stream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BlobResponse", WrapperNamespace="http://dasz.at/ZBox/", IsWrapped=true)]
    public partial class BlobResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://dasz.at/ZBox/")]
        public int ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dasz.at/ZBox/", Order=0)]
        public System.IO.Stream BlobInstance;
        
        public BlobResponse() {
        }
        
        public BlobResponse(int ID, System.IO.Stream BlobInstance) {
            this.ID = ID;
            this.BlobInstance = BlobInstance;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKistlServiceChannel : Kistl.API.Client.KistlService.IKistlService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KistlServiceClient : System.ServiceModel.ClientBase<Kistl.API.Client.KistlService.IKistlService>, Kistl.API.Client.KistlService.IKistlService {
        
        public KistlServiceClient() {
        }
        
        public KistlServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KistlServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KistlServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KistlServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.IO.MemoryStream SetObjects(System.IO.MemoryStream msg, Kistl.API.ObjectNotificationRequest[] notificationRequests) {
            return base.Channel.SetObjects(msg, notificationRequests);
        }
        
        public System.IO.MemoryStream GetList(Kistl.API.SerializableType type, int maxListCount, bool eagerLoadLists, Kistl.API.SerializableExpression[] filter, Kistl.API.OrderByContract[] orderBy) {
            return base.Channel.GetList(type, maxListCount, eagerLoadLists, filter, orderBy);
        }
        
        public System.IO.MemoryStream GetListOf(Kistl.API.SerializableType type, int ID, string property) {
            return base.Channel.GetListOf(type, ID, property);
        }
        
        public System.IO.MemoryStream FetchRelation(System.Guid relId, int role, int ID) {
            return base.Channel.FetchRelation(relId, role, ID);
        }
        
        public System.IO.Stream GetBlobStream(int ID) {
            return base.Channel.GetBlobStream(ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Kistl.API.Client.KistlService.BlobResponse Kistl.API.Client.KistlService.IKistlService.SetBlobStream(Kistl.API.Client.KistlService.BlobMessage request) {
            return base.Channel.SetBlobStream(request);
        }
        
        public int SetBlobStream(string FileName, string MimeType, System.IO.Stream Stream, out System.IO.Stream BlobInstance) {
            Kistl.API.Client.KistlService.BlobMessage inValue = new Kistl.API.Client.KistlService.BlobMessage();
            inValue.FileName = FileName;
            inValue.MimeType = MimeType;
            inValue.Stream = Stream;
            Kistl.API.Client.KistlService.BlobResponse retVal = ((Kistl.API.Client.KistlService.IKistlService)(this)).SetBlobStream(inValue);
            BlobInstance = retVal.BlobInstance;
            return retVal.ID;
        }
        
        public System.IO.MemoryStream InvokeServerMethod(out System.IO.MemoryStream retChangedObjects, Kistl.API.SerializableType type, int ID, string method, Kistl.API.SerializableType[] parameterTypes, System.IO.MemoryStream parameter, System.IO.MemoryStream changedObjects, Kistl.API.ObjectNotificationRequest[] notificationRequests) {
            return base.Channel.InvokeServerMethod(out retChangedObjects, type, ID, method, parameterTypes, parameter, changedObjects, notificationRequests);
        }
    }
}
