<%@ CodeTemplate Language="C#" 
    Name="ObjectClasses.AttachToContextTemplate"
    ClassName="Zetbox.DalProvider.NHibernate.Generator.Templates.ObjectClasses.AttachToContextTemplate" 
    Inherits="Zetbox.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Zetbox.API" %>
<%@ Import Namespace="Zetbox.API.Server" %>
<%@ Import Namespace="Zetbox.App.Base" %>
<%@ Import Namespace="Zetbox.Generator" %>
<%@ Import Namespace="Zetbox.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IZetboxContext" %>
<%@ Parameter Name="cls" Type="ObjectClass" %>

        public override void AttachToContext(IZetboxContext ctx)
        {
            base.AttachToContext(ctx);
            var nhCtx = (NHibernateContext)ctx;
<% foreach(var prop in cls.Properties.OfType<ValueTypeProperty>().Where(p => p.IsList).OrderBy(p => p.Name)) { %>
            if (_<%= prop.Name %> != null)
                this.Proxy.<%= prop.Name %>.ForEach<IProxyObject>(i => nhCtx.AttachAndWrap(i));
<% } %>
<% foreach(var prop in cls.Properties.OfType<CompoundObjectProperty>().Where(p => p.IsList).OrderBy(p => p.Name)) { %>
            if (_<%= prop.Name %> != null)
                this.Proxy.<%= prop.Name %>.ForEach<IProxyObject>(i => nhCtx.AttachAndWrap(i));
<% } %>
        }
