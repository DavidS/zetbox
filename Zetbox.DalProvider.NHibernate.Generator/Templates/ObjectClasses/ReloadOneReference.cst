<%@ CodeTemplate Language="C#" 
    Name="ObjectClasses.ReloadOneReference"
    ClassName="Zetbox.DalProvider.NHibernate.Generator.Templates.ObjectClasses.ReloadOneReference" 
    Inherits="Zetbox.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Zetbox.API" %>
<%@ Import Namespace="Zetbox.API.Server" %>
<%@ Import Namespace="Zetbox.App.Base" %>
<%@ Import Namespace="Zetbox.App.Extensions" %>
<%@ Import Namespace="Zetbox.Generator" %>
<%@ Import Namespace="Zetbox.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IZetboxContext" %>
<%@ Parameter Name="referencedInterface" Type="string" %>
<%@ Parameter Name="referencedImplementation" Type="string" %>
<%@ Parameter Name="name" Type="string" %>
<%@ Parameter Name="implNameUnused" Type="string" %>
<%@ Parameter Name="fkBackingName" Type="string" %>
<%@ Parameter Name="fkGuidBackingName" Type="string" %>
<%@ Parameter Name="isExportable" Type="bool" %>

<% if (isExportable) { %>
            if (<%= fkGuidBackingName %>.HasValue)
                this.<%= name %> = ((<%= referencedImplementation %>)OurContext.FindPersistenceObject<<%= referencedInterface %>>(<%= fkGuidBackingName %>.Value));
            else
<% } %>
            if (<%= fkBackingName %>.HasValue)
                this.<%= name %> = ((<%= referencedImplementation %>)OurContext.FindPersistenceObject<<%= referencedInterface %>>(<%= fkBackingName %>.Value));
            else
                this.<%= name %> = null;
