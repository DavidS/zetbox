//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kistl.App.Base
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Collections;
    using System.Xml;
    using System.Xml.Serialization;
    using Kistl.API;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using Kistl.API.Client;
    
    
    public class MethodInvocation : BaseClientDataObject, ICloneable
    {
        
        private int _ID = Helper.INVALIDID;
        
        private int _fk_InvokeOnObjectClass = Helper.INVALIDID;
        
        private int _fk_Module = Helper.INVALIDID;
        
        private int _fk_Method = Helper.INVALIDID;
        
        private int _fk_Assembly = Helper.INVALIDID;
        
        private string _FullTypeName;
        
        private string _MemberName;
        
        public override int ID
        {
            get
            {
                return _ID;
            }
            set
            {
                _ID = value;
            }
        }
        
        [XmlIgnore()]
        public Kistl.App.Base.ObjectClass InvokeOnObjectClass
        {
            get
            {
                return Context.GetQuery<Kistl.App.Base.ObjectClass>().Single(o => o.ID == fk_InvokeOnObjectClass);
            }
            set
            {
                _fk_InvokeOnObjectClass = value.ID;
            }
        }
        
        public int fk_InvokeOnObjectClass
        {
            get
            {
                return _fk_InvokeOnObjectClass;
            }
            set
            {
                _fk_InvokeOnObjectClass = value;
            }
        }
        
        [XmlIgnore()]
        public Kistl.App.Base.Module Module
        {
            get
            {
                return Context.GetQuery<Kistl.App.Base.Module>().Single(o => o.ID == fk_Module);
            }
            set
            {
                _fk_Module = value.ID;
            }
        }
        
        public int fk_Module
        {
            get
            {
                return _fk_Module;
            }
            set
            {
                _fk_Module = value;
            }
        }
        
        [XmlIgnore()]
        public Kistl.App.Base.Method Method
        {
            get
            {
                return Context.GetQuery<Kistl.App.Base.Method>().Single(o => o.ID == fk_Method);
            }
            set
            {
                _fk_Method = value.ID;
            }
        }
        
        public int fk_Method
        {
            get
            {
                return _fk_Method;
            }
            set
            {
                _fk_Method = value;
            }
        }
        
        [XmlIgnore()]
        public Kistl.App.Base.Assembly Assembly
        {
            get
            {
                return Context.GetQuery<Kistl.App.Base.Assembly>().Single(o => o.ID == fk_Assembly);
            }
            set
            {
                _fk_Assembly = value.ID;
            }
        }
        
        public int fk_Assembly
        {
            get
            {
                return _fk_Assembly;
            }
            set
            {
                _fk_Assembly = value;
            }
        }
        
        public string FullTypeName
        {
            get
            {
                return _FullTypeName;
            }
            set
            {
                _FullTypeName = value;
            }
        }
        
        public string MemberName
        {
            get
            {
                return _MemberName;
            }
            set
            {
                _MemberName = value;
            }
        }
        
        public event ToStringHandler<MethodInvocation> OnToString_MethodInvocation;
        
        public event ObjectEventHandler<MethodInvocation> OnPreSave_MethodInvocation;
        
        public event ObjectEventHandler<MethodInvocation> OnPostSave_MethodInvocation;
        
        [System.Diagnostics.DebuggerHidden()]
        public override string ToString()
        {
            MethodReturnEventArgs<string> e = new MethodReturnEventArgs<string>();
            e.Result = base.ToString();
            if (OnToString_MethodInvocation != null)
            {
                OnToString_MethodInvocation(this, e);
            }
            return e.Result;
        }
        
        public override void NotifyPreSave()
        {
            base.NotifyPreSave();
            if (OnPreSave_MethodInvocation != null) OnPreSave_MethodInvocation(this);
        }
        
        public override void NotifyPostSave()
        {
            base.NotifyPostSave();
            if (OnPostSave_MethodInvocation != null) OnPostSave_MethodInvocation(this);
        }
        
        public override object Clone()
        {
            MethodInvocation obj = new MethodInvocation();
            CopyTo(obj);
            return obj;
        }
        
        public override void CopyTo(Kistl.API.IDataObject obj)
        {
            base.CopyTo(obj);
            ((MethodInvocation)obj).NotifyPropertyChanging("InvokeOnObjectClass");
            ((MethodInvocation)obj).fk_InvokeOnObjectClass = this.fk_InvokeOnObjectClass;
            ((MethodInvocation)obj).NotifyPropertyChanged("InvokeOnObjectClass");
            ((MethodInvocation)obj).NotifyPropertyChanging("Module");
            ((MethodInvocation)obj).fk_Module = this.fk_Module;
            ((MethodInvocation)obj).NotifyPropertyChanged("Module");
            ((MethodInvocation)obj).NotifyPropertyChanging("Method");
            ((MethodInvocation)obj).fk_Method = this.fk_Method;
            ((MethodInvocation)obj).NotifyPropertyChanged("Method");
            ((MethodInvocation)obj).NotifyPropertyChanging("Assembly");
            ((MethodInvocation)obj).fk_Assembly = this.fk_Assembly;
            ((MethodInvocation)obj).NotifyPropertyChanged("Assembly");
            ((MethodInvocation)obj).NotifyPropertyChanging("FullTypeName");
            ((MethodInvocation)obj).FullTypeName = this.FullTypeName;
            ((MethodInvocation)obj).NotifyPropertyChanged("FullTypeName");
            ((MethodInvocation)obj).NotifyPropertyChanging("MemberName");
            ((MethodInvocation)obj).MemberName = this.MemberName;
            ((MethodInvocation)obj).NotifyPropertyChanged("MemberName");
        }
        
        public override void ToStream(System.IO.BinaryWriter sw)
        {
            base.ToStream(sw);
            BinarySerializer.ToBinary(this.fk_InvokeOnObjectClass, sw);
            BinarySerializer.ToBinary(this.fk_Module, sw);
            BinarySerializer.ToBinary(this.fk_Method, sw);
            BinarySerializer.ToBinary(this.fk_Assembly, sw);
            BinarySerializer.ToBinary(this.FullTypeName, sw);
            BinarySerializer.ToBinary(this.MemberName, sw);
        }
        
        public override void FromStream(Kistl.API.IKistlContext ctx, System.IO.BinaryReader sr)
        {
            base.FromStream(ctx, sr);
            BinarySerializer.FromBinary(out this._fk_InvokeOnObjectClass, sr);
            BinarySerializer.FromBinary(out this._fk_Module, sr);
            BinarySerializer.FromBinary(out this._fk_Method, sr);
            BinarySerializer.FromBinary(out this._fk_Assembly, sr);
            BinarySerializer.FromBinary(out this._FullTypeName, sr);
            BinarySerializer.FromBinary(out this._MemberName, sr);
        }
    }
}
