//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:2.0.50727.1433
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kistl.App.Projekte
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Collections;
    using System.Xml;
    using System.Xml.Serialization;
    using Kistl.API;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using Kistl.API.Client;
    
    
    public class Projekt : BaseClientDataObject, ICloneable
    {
        
        private int _ID = Helper.INVALIDID;
        
        private string _Name;
        
        private List<Kistl.App.Projekte.Task> _Tasks;
        
        private int _fk_Mitarbeiter = Helper.INVALIDID;
        
        private System.Nullable<double> _AufwandGes;
        
        private string _Kundenname;
        
        private List<Kistl.App.Zeiterfassung.Kostentraeger> _Kostentraeger;
        
        private List<Kistl.App.Projekte.Auftrag> _Auftraege;
        
        public override int ID
        {
            get
            {
                return _ID;
            }
            set
            {
                _ID = value;
            }
        }
        
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                _Name = value;
            }
        }
        
        [XmlIgnore()]
        public List<Kistl.App.Projekte.Task> Tasks
        {
            get
            {
                if(_Tasks == null) _Tasks = Context.GetListOf<Kistl.App.Projekte.Task>(this, "Tasks");
                return _Tasks;
            }
        }
        
        [XmlIgnore()]
        public Kistl.App.Projekte.Mitarbeiter Mitarbeiter
        {
            get
            {
                return Context.GetQuery<Kistl.App.Projekte.Mitarbeiter>().Single(o => o.ID == fk_Mitarbeiter);
            }
            set
            {
                _fk_Mitarbeiter = value.ID;
            }
        }
        
        public int fk_Mitarbeiter
        {
            get
            {
                return _fk_Mitarbeiter;
            }
            set
            {
                _fk_Mitarbeiter = value;
            }
        }
        
        public System.Nullable<double> AufwandGes
        {
            get
            {
                return _AufwandGes;
            }
            set
            {
                _AufwandGes = value;
            }
        }
        
        public string Kundenname
        {
            get
            {
                return _Kundenname;
            }
            set
            {
                _Kundenname = value;
            }
        }
        
        [XmlIgnore()]
        public List<Kistl.App.Zeiterfassung.Kostentraeger> Kostentraeger
        {
            get
            {
                if(_Kostentraeger == null) _Kostentraeger = Context.GetListOf<Kistl.App.Zeiterfassung.Kostentraeger>(this, "Kostentraeger");
                return _Kostentraeger;
            }
        }
        
        [XmlIgnore()]
        public List<Kistl.App.Projekte.Auftrag> Auftraege
        {
            get
            {
                if(_Auftraege == null) _Auftraege = Context.GetListOf<Kistl.App.Projekte.Auftrag>(this, "Auftraege");
                return _Auftraege;
            }
        }
        
        public event ToStringHandler<Projekt> OnToString_Projekt;
        
        public event ObjectEventHandler<Projekt> OnPreSave_Projekt;
        
        public event ObjectEventHandler<Projekt> OnPostSave_Projekt;
        
        [System.Diagnostics.DebuggerHidden()]
        public override string ToString()
        {
            MethodReturnEventArgs<string> e = new MethodReturnEventArgs<string>();
            e.Result = base.ToString();
            if (OnToString_Projekt != null)
            {
                OnToString_Projekt(this, e);
            }
            return e.Result;
        }
        
        public override void NotifyPreSave()
        {
            base.NotifyPreSave();
            if (OnPreSave_Projekt != null) OnPreSave_Projekt(this);
        }
        
        public override void NotifyPostSave()
        {
            base.NotifyPostSave();
            if (OnPostSave_Projekt != null) OnPostSave_Projekt(this);
        }
        
        public override object Clone()
        {
            Projekt obj = new Projekt();
            CopyTo(obj);
            return obj;
        }
        
        public void CopyTo(Projekt obj)
        {
            base.CopyTo(obj);
            obj.Name = this.Name;
            obj.fk_Mitarbeiter = this.fk_Mitarbeiter;
            obj.AufwandGes = this.AufwandGes;
            obj.Kundenname = this.Kundenname;
        }
        
        public override void ToStream(System.IO.BinaryWriter sw)
        {
            base.ToStream(sw);
            BinarySerializer.ToBinary(this.Name, sw);
            BinarySerializer.ToBinary(this.fk_Mitarbeiter, sw);
            BinarySerializer.ToBinary(this.AufwandGes, sw);
            BinarySerializer.ToBinary(this.Kundenname, sw);
        }
        
        public override void FromStream(Kistl.API.IKistlContext ctx, System.IO.BinaryReader sr)
        {
            base.FromStream(ctx, sr);
            BinarySerializer.FromBinary(out this._Name, sr);
            BinarySerializer.FromBinary(out this._fk_Mitarbeiter, sr);
            BinarySerializer.FromBinary(out this._AufwandGes, sr);
            BinarySerializer.FromBinary(out this._Kundenname, sr);
        }
    }
}
