//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kistl.App.Projekte
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Collections;
    using System.Xml;
    using System.Xml.Serialization;
    using Kistl.API;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using Kistl.API.Client;
    
    
    public class Projekt : BaseClientDataObject, ICloneable
    {
        
        private int _ID = Helper.INVALIDID;
        
        private string _Name;
        
        private List<Kistl.App.Projekte.Task> _Tasks;
        
        private List<Projekt_MitarbeiterCollectionEntry> _Mitarbeiter;
        
        private System.Double? _AufwandGes;
        
        private string _Kundenname;
        
        private List<Kistl.App.Zeiterfassung.Kostentraeger> _Kostentraeger;
        
        private List<Kistl.App.Projekte.Auftrag> _Auftraege;
        
        public override int ID
        {
            get
            {
                return _ID;
            }
            set
            {
                _ID = value;
            }
        }
        
        public string Name
        {
            get
            {
                return _Name;
            }
            set
            {
                _Name = value;
            }
        }
        
        [XmlIgnore()]
        public List<Kistl.App.Projekte.Task> Tasks
        {
            get
            {
                if(_Tasks == null) _Tasks = Context.GetListOf<Kistl.App.Projekte.Task>(this, "Tasks");
                return _Tasks;
            }
        }
        
        public List<Projekt_MitarbeiterCollectionEntry> Mitarbeiter
        {
            get
            {
                return _Mitarbeiter;
            }
            set
            {
                _Mitarbeiter = value;
            }
        }
        
        public System.Double? AufwandGes
        {
            get
            {
                return _AufwandGes;
            }
            set
            {
                _AufwandGes = value;
            }
        }
        
        public string Kundenname
        {
            get
            {
                return _Kundenname;
            }
            set
            {
                _Kundenname = value;
            }
        }
        
        [XmlIgnore()]
        public List<Kistl.App.Zeiterfassung.Kostentraeger> Kostentraeger
        {
            get
            {
                if(_Kostentraeger == null) _Kostentraeger = Context.GetListOf<Kistl.App.Zeiterfassung.Kostentraeger>(this, "Kostentraeger");
                return _Kostentraeger;
            }
        }
        
        [XmlIgnore()]
        public List<Kistl.App.Projekte.Auftrag> Auftraege
        {
            get
            {
                if(_Auftraege == null) _Auftraege = Context.GetListOf<Kistl.App.Projekte.Auftrag>(this, "Auftraege");
                return _Auftraege;
            }
        }
        
        public event ToStringHandler<Projekt> OnToString_Projekt;
        
        public event ObjectEventHandler<Projekt> OnPreSave_Projekt;
        
        public event ObjectEventHandler<Projekt> OnPostSave_Projekt;
        
        [System.Diagnostics.DebuggerHidden()]
        public override string ToString()
        {
            MethodReturnEventArgs<string> e = new MethodReturnEventArgs<string>();
            e.Result = base.ToString();
            if (OnToString_Projekt != null)
            {
                OnToString_Projekt(this, e);
            }
            return e.Result;
        }
        
        public override void NotifyPreSave()
        {
            base.NotifyPreSave();
            if (OnPreSave_Projekt != null) OnPreSave_Projekt(this);
        }
        
        public override void NotifyPostSave()
        {
            base.NotifyPostSave();
            if (OnPostSave_Projekt != null) OnPostSave_Projekt(this);
        }
        
        public override object Clone()
        {
            Projekt obj = new Projekt();
            CopyTo(obj);
            return obj;
        }
        
        public override void CopyTo(Kistl.API.IDataObject obj)
        {
            base.CopyTo(obj);
            ((Projekt)obj).NotifyPropertyChanging("Name");
            ((Projekt)obj).Name = this.Name;
            ((Projekt)obj).NotifyPropertyChanged("Name");
            ((Projekt)obj).NotifyPropertyChanging("Mitarbeiter");
            ((Projekt)obj)._Mitarbeiter = this.Mitarbeiter.Clone();
            ((Projekt)obj).NotifyPropertyChanged("Mitarbeiter");
            ((Projekt)obj).NotifyPropertyChanging("AufwandGes");
            ((Projekt)obj).AufwandGes = this.AufwandGes;
            ((Projekt)obj).NotifyPropertyChanged("AufwandGes");
            ((Projekt)obj).NotifyPropertyChanging("Kundenname");
            ((Projekt)obj).Kundenname = this.Kundenname;
            ((Projekt)obj).NotifyPropertyChanged("Kundenname");
        }
        
        public override void ToStream(System.IO.BinaryWriter sw)
        {
            base.ToStream(sw);
            BinarySerializer.ToBinary(this.Name, sw);
            BinarySerializer.ToBinary(this.Mitarbeiter, sw);
            BinarySerializer.ToBinary(this.AufwandGes, sw);
            BinarySerializer.ToBinary(this.Kundenname, sw);
        }
        
        public override void FromStream(Kistl.API.IKistlContext ctx, System.IO.BinaryReader sr)
        {
            base.FromStream(ctx, sr);
            BinarySerializer.FromBinary(out this._Name, sr);
            BinarySerializer.FromBinaryCollectionEntries(out this._Mitarbeiter, sr, ctx);
            BinarySerializer.FromBinary(out this._AufwandGes, sr);
            BinarySerializer.FromBinary(out this._Kundenname, sr);
        }
    }
    
    public class Projekt_MitarbeiterCollectionEntry : Kistl.API.Client.BaseClientCollectionEntry
    {
        
        private int _ID = Helper.INVALIDID;
        
        private int _fk_Value = Helper.INVALIDID;
        
        public override int ID
        {
            get
            {
                return _ID;
            }
            set
            {
                _ID = value;
            }
        }
        
        [XmlIgnore()]
        public Kistl.App.Projekte.Mitarbeiter Value
        {
            get
            {
                return Context.GetQuery<Kistl.App.Projekte.Mitarbeiter>().Single(o => o.ID == fk_Value);
            }
            set
            {
                _fk_Value = value.ID;
            }
        }
        
        public int fk_Value
        {
            get
            {
                return _fk_Value;
            }
            set
            {
                _fk_Value = value;
            }
        }
        
        public override void ToStream(System.IO.BinaryWriter sw)
        {
            base.ToStream(sw);
            BinarySerializer.ToBinary(this._fk_Value, sw);
        }
        
        public override void FromStream(Kistl.API.IKistlContext ctx, System.IO.BinaryReader sr)
        {
            base.FromStream(ctx, sr);
            BinarySerializer.FromBinary(out this._fk_Value, sr);
        }
        
        public override void CopyTo(Kistl.API.ICollectionEntry obj)
        {
            base.CopyTo(obj);
            ((Projekt_MitarbeiterCollectionEntry)obj).NotifyPropertyChanging("Value");
            ((Projekt_MitarbeiterCollectionEntry)obj)._fk_Value = this._fk_Value;
            ((Projekt_MitarbeiterCollectionEntry)obj).NotifyPropertyChanged("Value");
        }
    }
}
