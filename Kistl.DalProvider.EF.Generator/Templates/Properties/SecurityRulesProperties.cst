<%@ CodeTemplate Language="C#"
    Name="Properties.SecurityRulesProperties"
    ClassName="Kistl.DalProvider.Ef.Generator.Templates.Properties.SecurityRulesProperties"
    Inherits="Kistl.Generator.ResourceTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Kistl.API" %>
<%@ Import Namespace="Kistl.API.Server" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Import Namespace="Kistl.App.Extensions" %>
<%@ Import Namespace="Kistl.Generator" %>
<%@ Import Namespace="Kistl.Generator.Extensions" %>
<%@ Parameter Name="ctx" Type="IKistlContext" %>
<%@ Parameter Name="cls" Type="ObjectClass" %>
<%@ Parameter Name="assocName" Type="string" %>
<%@ Parameter Name="targetRoleName" Type="string" %>
<%@ Parameter Name="referencedImplementation" Type="string" %>
<%@ Parameter Name="efNameRightsPropertyName" Type="string" %>

        private Kistl.API.AccessRights? __currentAccessRights;
        public override Kistl.API.AccessRights CurrentAccessRights
        {
            get
            {
				if(Context == null) return Kistl.API.AccessRights.Full;
                if (__currentAccessRights == null)
                {
					__currentAccessRights = base.CurrentAccessRights;
					var secRight = SecurityRightsCollectionImpl.FirstOrDefault(); // TODO: should be SingleOrDefault() instead of FirstOrDefault()
                    __currentAccessRights |= secRight != null ? (Kistl.API.AccessRights)secRight.Right : Kistl.API.AccessRights.None;
                }
                return __currentAccessRights.Value;
            }
        }

        [EdmRelationshipNavigationProperty("Model", "<%= assocName %>", "<%= targetRoleName %>")]
        public EntityCollection<<%= referencedImplementation %>> <%= efNameRightsPropertyName %>
        {
            get
            {
                var c = ((IEntityWithRelationships)(this)).RelationshipManager
                    .GetRelatedCollection<<%= referencedImplementation %>>(
                        "Model.<%= assocName %>",
                        "<%= targetRoleName %>");
                if (this.EntityState.In(System.Data.EntityState.Modified, System.Data.EntityState.Unchanged)
                    && !c.IsLoaded)
                {
                    c.Load();
                }
                return c;
            }
        }
