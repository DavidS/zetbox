<%@ CodeTemplate Language="C#" 
	Name="Repositories.FrozenModuleRepository"
	ClassName="Kistl.DalProvider.Frozen.Generator.Repositories.FrozenModuleRepository" 
	Inherits="Kistl.Server.Generators.KistlCodeTemplate" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="Kistl.App.Base" %>
<%@ Parameter Name="ctx" Type="Kistl.API.IKistlContext" %>
<%@ Parameter Name="modulesWithFrozenClasses" Type="List<Module>" %>
// <autogenerated/>

using Kistl.API;

namespace Kistl.App
{

	public class FrozenModuleRepository
	{
		public FrozenModuleRepository()
		{
		}
		
<%
	
	foreach(var module in modulesWithFrozenClasses)
	{
%>
		/// <summary>Frozen Repository for <%= module.Name %></summary>
		/// <%= module.Description %>
		public <%= module.Namespace %>.Frozen<%= module.Name %>Repository <%= module.Name %>
		{
			get
			{
				return new <%= module.Namespace %>.Frozen<%= module.Name %>Repository();
			}
		}
		
<%
	}
%>

		static FrozenModuleRepository()
		{
<%
	// only fill data stores with frozen classes
	foreach(var module in modulesWithFrozenClasses)
	{
%>
				<%= module.Namespace %>.Frozen<%= module.Name %>Repository.FillDataStore();
<%
	}
%>
		}
	
	}
	
}